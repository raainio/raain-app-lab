{"version":3,"file":"9115.d7783dcb855423f5.js","mappings":"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","sources":["./src/core/rains/modals/new-instance.page.ts","./src/core/rains/modals/new-instance.page.html","./src/core/rains/rain-detail.page.ts","./src/core/rains/rain-detail.page.html","./src/core/rains/rains.module.ts","./src/core/rains/rains.page.ts","./src/core/rains/rains.page.html"],"sourcesContent":["import {Component, Input} from '@angular/core';\nimport {ModalController, NavParams} from '@ionic/angular';\n\n@Component({\n    selector: 'modal-page',\n    templateUrl: 'new-instance.page.html',\n})\nexport class NewInstancePage {\n    // \"value\" passed in componentProps\n    @Input() value: number;\n    RadarToRainUrl: any;\n    RadarToRainUser: any;\n    RadarToRainPwd: any;\n\n    constructor(\n        private modalController: ModalController,\n        private navParams: NavParams\n    ) {\n        // componentProps can also be accessed at construction time using NavParams}\n    }\n\n    dismiss() {\n        this.modalController.dismiss();\n    }\n\n    add(RadarToRainUrl, RadarToRainUser, RadarToRainPwd) {\n        this.modalController.dismiss();\n    }\n}\n","<ion-content padding>\n\n    <ion-card>\n        <ion-card-header>\n            <ion-card-title>Connect your RadarToRain instance</ion-card-title>\n        </ion-card-header>\n        <ion-card-content>\n\n            <form #heroForm=\"ngForm\">\n                <ion-item>\n                    <ion-input type=\"url\" placeholder=\"https://RadarToRain.you/RadarToRain\" required\n                               [(ngModel)]=\"RadarToRainUrl\" name=\"RadarToRainUrl\"></ion-input>\n                </ion-item>\n                <ion-item>\n                    <ion-input type=\"string\" placeholder=\"User\" required\n                               [(ngModel)]=\"RadarToRainUser\" name=\"RadarToRainUser\"></ion-input>\n                </ion-item>\n                <ion-item>\n                    <ion-input type=\"password\" placeholder=\"Password\" required\n                               [(ngModel)]=\"RadarToRainPwd\" name=\"RadarToRainPwd\"></ion-input>\n                </ion-item>\n                <div>\n                    <ion-button expand=\"block\"\n                                (click)=\"add(RadarToRainUrl, RadarToRainUser, RadarToRainPwd)\"\n                                [disabled]=\"!RadarToRainUrl || !heroForm.form.valid\">Login\n                    </ion-button>\n                    <ion-button expand=\"block\"\n                                (click)=\"dismiss()\">dismiss\n                    </ion-button>\n\n\n                </div>\n            </form>\n        </ion-card-content>\n    </ion-card>\n\n</ion-content>\n\n\n","import {AfterViewInit, Component, ViewChild} from '@angular/core';\nimport {CompareManager, ProfileService, RadarService, RefreshManager, Storage} from '../shared';\nimport {ActivatedRoute, ParamMap} from '@angular/router';\nimport {Observable} from 'rxjs';\nimport {switchMap} from 'rxjs/operators';\nimport {RadarNode, RainNode} from 'raain-model';\nimport {IonModal} from '@ionic/angular';\n\n// TODO let TEST_DETECTION = 0;\n\n@Component({\n    selector: 'app-rain-detail',\n    templateUrl: 'rain-detail.page.html',\n    styleUrls: ['rain-detail.page.scss'],\n})\nexport class RainDetailPage implements AfterViewInit {\n    @ViewChild(IonModal) modal: IonModal;\n    public rainNode: RainNode;\n    public compareManager: CompareManager;\n    public refreshManager: RefreshManager;\n    public toggleAdmin: boolean;\n    public isAdmin: boolean;\n    public toggleDetails: boolean;\n    public isSimpleZone: boolean;\n    public toggleCumulative: boolean;\n    protected rain$: Observable<RainNode>;\n\n    constructor(\n        private readonly activatedRoute: ActivatedRoute,\n        public profileService: ProfileService,\n        public radarService: RadarService,\n        protected storage: Storage\n    ) {}\n\n    ngAfterViewInit(): void {\n        this.profileService.refreshProfile().then((ignored) => {});\n        this.subscribeToRainUpdates();\n    }\n\n    onChangeDetectionTest(rainNode: RainNode) {\n        // TODO console.log(TEST_DETECTION++, 'onChangeDetectionTest');\n        return '';\n    }\n\n    async toggleAdminChanged(_$event: any) {\n        this.storage.set('raain-toggleAdmin', this.toggleAdmin);\n        await this.profileService.refreshProfile();\n        await this.initRain(this.rainNode);\n    }\n\n    async refresh(event?: any) {\n        try {\n            await this.profileService.refreshProfile();\n            await this.initRain(this.rainNode);\n        } catch (e) {\n            /* empty */\n        }\n\n        if (event) {\n            event.target.complete();\n        }\n\n        if (!this.profileService.isLoggedIn()) {\n            return this.profileService.gotoLout();\n        }\n    }\n\n    toggleCumulativeChanged($event: any) {\n        this.storage.set('raain-toggleCumulative', this.toggleCumulative);\n    }\n\n    private subscribeToRainUpdates() {\n        // console.log('subscribeToRainUpdates', this.rain$);\n        if (this.rain$) {\n            return;\n        }\n\n        this.rain$ = this.activatedRoute.paramMap.pipe(\n            switchMap((params: ParamMap) => this.profileService.getRain(params.get('id')))\n        );\n\n        this.rain$.subscribe(this.initRain.bind(this));\n    }\n\n    private async initRain(rainNode: RainNode) {\n        this.toggleDetails = false;\n        this.toggleAdmin = this.storage.get('raain-toggleAdmin');\n        this.toggleCumulative = this.storage.get('raain-toggleCumulative');\n        this.isAdmin = this.profileService.isAdmin();\n\n        if (!rainNode) {\n            return;\n        }\n\n        this.rainNode = rainNode;\n        this.compareManager = new CompareManager(this.profileService);\n        this.refreshManager = new RefreshManager(\n            this.radarService,\n            this.profileService,\n            this.compareManager\n        );\n        this.compareManager.rainNode = this.rainNode;\n        this.refreshManager.rainNode = this.rainNode;\n\n        // For Simple Radar-Rain Zone :\n        const radarLinks = rainNode.getLinks(RadarNode.TYPE);\n        this.isSimpleZone = radarLinks.length === 1;\n\n        this.toggleDetails = true;\n    }\n}\n","<ion-header class=\"ion-no-border\">\n    <ion-toolbar>\n        <ion-buttons slot=\"start\">\n            <ion-menu-button></ion-menu-button>\n            <ion-img class=\"app-logo\" src=\"assets/icon/favicon.ico\"></ion-img>\n        </ion-buttons>\n        <ion-title>\n            <span class=\"ion-color-raain\">Radar To Rain</span> {{ rainNode?.name }}\n        </ion-title>\n\n        <ion-buttons *ngIf=\"isSimpleZone && isAdmin\" slot=\"end\">\n            <ion-label class=\"ion-padding-end\" color=\"warning\">Admin Data</ion-label>\n            <ion-toggle (ionChange)=\"toggleAdminChanged($event)\"\n                        [(ngModel)]=\"toggleAdmin\"\n                        [checked]=\"toggleAdmin\"\n                        color=\"warning\">\n            </ion-toggle>\n        </ion-buttons>\n    </ion-toolbar>\n</ion-header>\n\n<ion-content>\n    <!--<ion-refresher (ionRefresh)=\"refresh($event)\" slot=\"fixed\">\n        <ion-refresher-content></ion-refresher-content>\n    </ion-refresher>-->\n\n    <div class=\"ion-padding\">\n        <raain-details *ngIf=\"toggleDetails\"\n                       [compareManager]=\"compareManager\"\n                       [profileService]=\"profileService\"\n                       [radarService]=\"radarService\"\n                       [rainNode]=\"rainNode\"\n                       [refreshManager]=\"refreshManager\"\n                       [toggleAdmin]=\"toggleAdmin\"\n                       [toggleCumulative]=\"toggleCumulative\">\n        </raain-details>\n\n        <div id=\"toggle-cumulative\">\n            <ion-label slot=\"end\">Cumulative</ion-label>\n            <ion-toggle (ionChange)=\"toggleCumulativeChanged($event)\" [(ngModel)]=\"toggleCumulative\"\n                        [checked]=\"toggleCumulative\" slot=\"end\">\n            </ion-toggle>\n        </div>\n    </div>\n\n    <ion-modal class=\"support-modal\" trigger=\"open-modal\">\n        <ng-template>\n            <ion-header class=\"ion-no-border\">\n                <ion-toolbar>\n                    <ion-title>Need Help?</ion-title>\n                    <ion-buttons slot=\"end\">\n                        <ion-button (click)=\"modal.dismiss()\">\n                            <ion-icon name=\"close-outline\" slot=\"icon-only\"></ion-icon>\n                        </ion-button>\n                    </ion-buttons>\n                </ion-toolbar>\n            </ion-header>\n            <ion-content class=\"ion-padding\">\n                <div class=\"support-content\">\n                    <h2>Have questions?</h2>\n                    <p>We're here to help! Feel free to contact our support team at <a\n                            class=\"ion-color-raain\" href=\"mailto:support@radartorain.com\">support@radartorain.com</a>\n                    </p>\n\n                    <h3>For faster assistance, please include:</h3>\n                    <ol>\n                        <li>Full screenshot or screen recording if possible</li>\n                        <li>Detailed description of your question or issue</li>\n                    </ol>\n\n                    <p class=\"text-muted\">Our team will respond as quickly as possible to help you.</p>\n\n                    <ion-button (click)=\"modal.dismiss()\" class=\"ion-margin-top\" expand=\"block\">\n                        Got it\n                    </ion-button>\n                </div>\n            </ion-content>\n        </ng-template>\n    </ion-modal>\n\n    <ion-fab horizontal=\"end\" slot=\"fixed\" vertical=\"bottom\">\n        <ion-fab-button color=\"raain\" id=\"open-modal\">\n            <ion-icon name=\"help-outline\"></ion-icon>\n        </ion-fab-button>\n    </ion-fab>\n</ion-content>\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {IonicModule} from '@ionic/angular';\nimport {RouterModule, Routes} from '@angular/router';\n\nimport {RainsPage} from './rains.page';\nimport {RainDetailPage} from './rain-detail.page';\nimport {Storage} from '../shared';\nimport {PipesModule} from '../shared/pipes.module';\nimport {SharedModule} from '../shared';\nimport {NewInstancePage} from './modals/new-instance.page';\n\nconst RouteConfig: Routes = [\n    {\n        path: '',\n        children: [\n            {path: '', component: RainsPage},\n            {path: ':id', component: RainDetailPage},\n            {\n                path: 'new-instance',\n                component: NewInstancePage,\n            },\n        ],\n    },\n];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        RouterModule.forChild(RouteConfig),\n        PipesModule,\n        SharedModule,\n    ],\n    declarations: [RainsPage, RainDetailPage, NewInstancePage],\n    providers: [Storage],\n})\nexport class RainsPageModule {}\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {FidjStorageNode, ProfileService} from '../shared';\nimport {RainNode} from 'raain-model';\nimport {Router} from '@angular/router';\nimport {IonModal} from '@ionic/angular';\nimport {environment} from '../../environments/environment';\n\n@Component({\n    selector: 'app-rains',\n    templateUrl: 'rains.page.html',\n    styleUrls: ['rains.page.scss'],\n})\nexport class RainsPage implements OnInit {\n    @ViewChild(IonModal) modal: IonModal;\n\n    public rainsInfoAlreadyViewed: any = {};\n    public sessionData: FidjStorageNode;\n    public rains: RainNode[] = [];\n    public appVersion = environment.version;\n\n    constructor(\n        private router: Router,\n        private profile: ProfileService\n    ) {}\n\n    ngOnInit() {\n        this.refresh();\n    }\n\n    async refresh(event?: any) {\n        try {\n            this.sessionData = await this.profile.refreshProfile();\n            if (this.sessionData.infos.rainsInfoAlreadyViewed) {\n                this.rainsInfoAlreadyViewed = this.sessionData.infos.rainsInfoAlreadyViewed;\n            }\n\n            this.rains = await this.profile.getRains(this.profile.asTeamId);\n        } catch (e) {\n            console.error('refresh pb:', e);\n        }\n        if (event) {\n            event.target.complete();\n        }\n\n        if (!this.profile.isLoggedIn()) {\n            return this.profile.gotoLout();\n        }\n    }\n\n    clickOnRain(rain: RainNode) {\n        return this.router.navigate(['/rains', rain.id]);\n    }\n\n    async closeInfo(windowName: string) {\n        this.rainsInfoAlreadyViewed[windowName] = true;\n        if (!this.sessionData || !this.sessionData.infos) {\n            return;\n        }\n\n        this.sessionData.infos.rainsInfoAlreadyViewed = this.rainsInfoAlreadyViewed;\n        await this.profile.storeAll();\n    }\n}\n","<ion-header>\n  <ion-toolbar>\n    <ion-buttons slot=\"start\">\n      <ion-menu-button></ion-menu-button>\n      <ion-img src=\"assets/icon/favicon.ico\" style=\"height: 30px; padding-left: 20px\"></ion-img>\n    </ion-buttons>\n    <ion-title>\n      Rain zones\n    </ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n\n  <ion-refresher (ionRefresh)=\"refresh($event)\" slot=\"fixed\">\n    <ion-refresher-content></ion-refresher-content>\n  </ion-refresher>\n\n  <ion-card *ngIf=\"!rainsInfoAlreadyViewed.hasOwnProperty('welcome-card')\" class=\"welcome-card\">\n    <ion-card-header>\n      <ion-card-title>Rain Zones</ion-card-title>\n      <ion-card-subtitle>\n        Based on radars, Rain zones are supporting rain computing.\n      </ion-card-subtitle>\n    </ion-card-header>\n    <ion-card-content>\n      <p>Manage here rain computing status.</p>\n    </ion-card-content>\n    <ion-button (click)=\"closeInfo('welcome-card')\" fill=\"outline\">Got it</ion-button>\n  </ion-card>\n\n  <div *ngIf=\"rains.length\">\n    <ion-list>\n      <ion-item-sliding *ngFor=\"let item of rains\">\n        <ion-item>\n          <ion-icon *ngIf=\"(item | hasGoodQuality)\" color=\"success\" name=\"radio-button-off\"\n                    slot=\"start\"></ion-icon>\n          <ion-icon *ngIf=\"!(item | hasGoodQuality)\" color=\"warning\" name=\"radio-button-off\"\n                    slot=\"start\"></ion-icon>\n\n          <div style=\"min-width: 200px\">{{ item.name }}</div>\n\n          <ion-button (click)=\"clickOnRain(item)\" expand=\"block\">details</ion-button>\n\n          <ion-progress-bar\n            (click)=\"clickOnRain(item)\"\n            buffer=\"{{item | progressBuffer}}\" color=\"primary\"\n            value=\"{{item | progressValue}}\"></ion-progress-bar>\n          <ion-icon (click)=\"clickOnRain(item)\" color=\"primary\" name=\"cloud-done\" slot=\"end\"></ion-icon>\n          <ion-icon (click)=\"clickOnRain(item)\" color=\"primary\" name=\"arrow-right\" slot=\"end\"></ion-icon>\n        </ion-item>\n\n      </ion-item-sliding>\n    </ion-list>\n  </div>\n\n</ion-content>\n"],"names":["NewInstancePage","constructor","modalController","navParams","dismiss","add","RadarToRainUrl","RadarToRainUser","RadarToRainPwd","selectors","inputs","value","decls","vars","consts","template","i0","ctx","CompareManager","RefreshManager","switchMap","RadarNode","IonModal","RainDetailPage","activatedRoute","profileService","radarService","storage","ngAfterViewInit","refreshProfile","then","ignored","subscribeToRainUpdates","onChangeDetectionTest","rainNode","toggleAdminChanged","_$event","set","toggleAdmin","initRain","refresh","event","e","target","complete","isLoggedIn","gotoLout","toggleCumulativeChanged","$event","toggleCumulative","rain$","paramMap","pipe","params","getRain","get","subscribe","bind","toggleDetails","isAdmin","compareManager","refreshManager","radarLinks","getLinks","TYPE","isSimpleZone","length","viewQuery","CommonModule","FormsModule","IonicModule","RouterModule","RainsPage","Storage","PipesModule","SharedModule","RouteConfig","path","children","component","RainsPageModule","imports","forChild","declarations","environment","router","profile","version","ngOnInit","sessionData","infos","rainsInfoAlreadyViewed","rains","getRains","asTeamId","console","error","clickOnRain","rain","navigate","id","closeInfo","windowName","storeAll"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}