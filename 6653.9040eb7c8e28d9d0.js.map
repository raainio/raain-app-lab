{"version":3,"file":"6653.9040eb7c8e28d9d0.js","mappings":"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","sources":["./src/core/home/home.module.ts","./src/core/home/home.page.ts","./src/core/home/home.page.html","./src/core/home/modals/new-instance.page.ts","./src/core/home/modals/new-instance.page.html"],"sourcesContent":["import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {IonicModule} from '@ionic/angular';\nimport {RouterModule} from '@angular/router';\n\nimport {HomePage} from './home.page';\nimport {NewInstancePage} from './modals/new-instance.page';\nimport {PipesModule} from '../shared/pipes.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        PipesModule,\n        RouterModule.forChild([\n            {\n                path: '',\n                component: HomePage,\n            },\n            {\n                path: 'new-instance',\n                component: NewInstancePage,\n            },\n        ]),\n    ],\n    declarations: [HomePage, NewInstancePage],\n})\nexport class HomePageModule {}\n","import {AfterViewInit, Component} from '@angular/core';\nimport {ModalController} from '@ionic/angular';\nimport {Router} from '@angular/router';\nimport {RadarNode, RainNode} from 'raain-model';\nimport {NewInstancePage} from './modals/new-instance.page';\nimport {FidjStorageNode, ProfileService} from '../shared';\nimport {environment} from '../../environments/environment';\n\n@Component({\n    selector: 'app-home',\n    templateUrl: 'home.page.html',\n    styleUrls: ['home.page.scss'],\n})\nexport class HomePage implements AfterViewInit {\n    public refreshInProgress = false;\n    public homeInfoAlreadyViewed: any = {};\n    public sessionData: FidjStorageNode;\n    public rains: RainNode[] = [];\n    public radars: RadarNode[] = [];\n    public data: any;\n    public appVersion = environment.version;\n\n    constructor(\n        private router: Router,\n        private modalController: ModalController,\n        private profile: ProfileService\n    ) {\n        this.refresh();\n    }\n\n    ngAfterViewInit() {\n        this.refresh();\n    }\n\n    async closeInfo(windowName: string) {\n        this.homeInfoAlreadyViewed[windowName] = true;\n        if (!this.sessionData || !this.sessionData.infos) {\n            return;\n        }\n\n        this.sessionData.infos.homeInfoAlreadyViewed = this.homeInfoAlreadyViewed;\n        await this.profile.storeAll();\n    }\n\n    async clickOnNotifications() {\n        return this.router.navigate(['/events']);\n    }\n\n    async clickOnRain(rain: RainNode) {\n        return this.router.navigate(['/rains', rain.id]);\n    }\n\n    async presentModal() {\n        const modal = await this.modalController.create({\n            component: NewInstancePage,\n            componentProps: {value: 123},\n        });\n        await modal.present();\n\n        const {data} = await modal.onDidDismiss();\n    }\n\n    async refresh(event?: any) {\n        this.refreshInProgress = true;\n        try {\n            this.sessionData = await this.profile.refreshProfile();\n            if (this.sessionData.infos.homeInfoAlreadyViewed) {\n                this.homeInfoAlreadyViewed = this.sessionData.infos.homeInfoAlreadyViewed;\n            }\n\n            this.rains = await this.profile.getRains(this.profile.asTeamId);\n            this.radars = await this.profile.getLonelyRadars(this.rains);\n        } catch (e) {\n            console.error('refresh pb:', e);\n        }\n        if (event) {\n            event.target.complete();\n        }\n        this.refreshInProgress = false;\n\n        if (!this.profile.isLoggedIn()) {\n            return this.profile.gotoLout();\n        }\n    }\n}\n","<ion-header>\n    <ion-toolbar>\n        <ion-buttons slot=\"start\">\n            <ion-menu-button></ion-menu-button>\n            <ion-img src=\"assets/icon/favicon.ico\" style=\"height: 30px; padding-left: 20px\"></ion-img>\n        </ion-buttons>\n        <ion-title>\n            Dashboard\n        </ion-title>\n\n        <!--<ion-buttons slot=\"primary\">\n          <ion-button (click)=\"clickOnNotifications()\">\n            <ion-icon name=\"notifications-outline\" slot=\"icon-only\"></ion-icon>\n          </ion-button>\n          <ion-badge *ngIf=\"data && (data.events | haveNotBeenRed).length\"\n                     color=\"danger\">{{ (data.events | haveNotBeenRed).length }}\n          </ion-badge>\n        </ion-buttons>-->\n\n    </ion-toolbar>\n\n    <div [hidden]=\"!refreshInProgress\">\n        <ion-progress-bar type=\"indeterminate\"></ion-progress-bar>\n    </div>\n</ion-header>\n\n<ion-content>\n\n    <ion-refresher (ionRefresh)=\"refresh($event)\" slot=\"fixed\">\n        <ion-refresher-content></ion-refresher-content>\n    </ion-refresher>\n\n    <!--\n    <ion-card *ngIf=\"!homeInfoAlreadyViewed.hasOwnProperty('welcome-card')\" class=\"welcome-card\">\n      <ion-card-header>\n        <ion-card-title>Welcome !</ion-card-title>\n        <ion-card-subtitle>You are in a demo mode. Please contact our <a href=\"mailto:sales@r2r\">sales\n          team\n          @radartorain</a> to go further.\n        </ion-card-subtitle>\n      </ion-card-header>\n      <ion-card-content>\n        <p>Manage here your radar information status, AI dashboard, rain comparison status.</p>\n      </ion-card-content>\n      <ion-button (click)=\"closeInfo('welcome-card')\" fill=\"outline\">Got it</ion-button>\n    </ion-card>\n    -->\n\n    <ion-card *ngIf=\"rains.length === 0\" class=\"welcome-card\">\n        <ion-card-header>\n            <ion-card-title>Welcome !</ion-card-title>\n            <ion-card-subtitle>It looks like you do not have any data.\n            </ion-card-subtitle>\n        </ion-card-header>\n        <ion-card-content>\n            <p>Please contact our <a href=\"mailto:sales@radartorain.com\">sales team @radartorain</a> to go further.</p>\n        </ion-card-content>\n    </ion-card>\n\n    <div *ngIf=\"rains.length\">\n        <ion-card>\n            <ion-card-header>\n                <ion-card-title>Rain zones ready</ion-card-title>\n            </ion-card-header>\n            <ion-list>\n                <ion-item-sliding *ngFor=\"let item of (rains | areReady)\">\n\n                    <ion-item (click)=\"clickOnRain(item)\">\n                        <ion-icon *ngIf=\"(item | hasGoodQuality)\" color=\"success\" name=\"radio-button-off\"\n                                  slot=\"start\"></ion-icon>\n                        <ion-icon *ngIf=\"!(item | hasGoodQuality)\" color=\"warning\" name=\"radio-button-off\"\n                                  slot=\"start\"></ion-icon>\n                        <span style=\"min-width: 200px\">{{ item.name }}</span>\n                        <ion-progress-bar buffer=\"{{item | progressBuffer}}\" color=\"primary\"\n                                          value=\"{{item | progressValue}}\"></ion-progress-bar>\n                        <ion-icon color=\"primary\" name=\"cloud-done\" slot=\"end\"></ion-icon>\n                        <ion-icon color=\"primary\" name=\"arrow-right\" slot=\"end\"></ion-icon>\n                    </ion-item>\n                </ion-item-sliding>\n            </ion-list>\n        </ion-card>\n\n        <ion-card>\n            <ion-card-header>\n                <ion-card-title>Rain zones in progress</ion-card-title>\n            </ion-card-header>\n\n            <ion-list>\n                <ion-item-sliding *ngFor=\"let item of (rains | areInProgress)\">\n                    <ion-item (click)=\"clickOnRain(item)\">\n                        <ion-icon *ngIf=\"(item | hasGoodQuality)\" color=\"success\" name=\"radio-button-off\"\n                                  slot=\"start\"></ion-icon>\n                        <ion-icon *ngIf=\"!(item | hasGoodQuality)\" color=\"warning\" name=\"radio-button-off\"\n                                  slot=\"start\"></ion-icon>\n                        <span style=\"min-width: 200px\">{{ item.name }}</span>\n                        <ion-progress-bar buffer=\"{{item | progressBuffer}}\" color=\"primary\"\n                                          value=\"{{item | progressValue}}\"></ion-progress-bar>\n                        <ion-icon name=\"cloud-upload\" slot=\"end\"></ion-icon>\n                    </ion-item>\n                </ion-item-sliding>\n\n                <ion-item-sliding *ngFor=\"let item of (rains | areStopped)\">\n                    <ion-item (click)=\"clickOnRain(item)\">\n                        <ion-icon *ngIf=\"(item | hasGoodQuality)\" color=\"success\" name=\"radio-button-off\"\n                                  slot=\"start\"></ion-icon>\n                        <ion-icon *ngIf=\"!(item | hasGoodQuality)\" color=\"warning\" name=\"radio-button-off\"\n                                  slot=\"start\"></ion-icon>\n                        <span style=\"min-width: 200px\">{{ item.name }}</span>\n                        <ion-icon name=\"cloud-outline\" slot=\"end\"></ion-icon>\n                    </ion-item>\n                </ion-item-sliding>\n            </ion-list>\n\n        </ion-card>\n\n    </div>\n\n\n</ion-content>\n","import {Component, Input} from '@angular/core';\nimport {ModalController, NavParams} from '@ionic/angular';\n\n@Component({\n    selector: 'modal-page',\n    templateUrl: 'new-instance.page.html',\n})\nexport class NewInstancePage {\n    // \"value\" passed in componentProps\n    @Input() value: number;\n\n    constructor(\n        private modalController: ModalController,\n        private navParams: NavParams\n    ) {\n        // componentProps can also be accessed at construction time using NavParams}\n    }\n\n    dismiss() {\n        this.modalController.dismiss();\n    }\n\n    add(RadarToRainUrl, RadarToRainUser, RadarToRainPwd) {\n        this.modalController.dismiss();\n    }\n}\n","<ion-content padding>\n\n    <ion-card>\n        <ion-card-header>\n            <ion-card-title>Connect your RadarToRain instance</ion-card-title>\n        </ion-card-header>\n        <ion-card-content>\n\n            <!--\n            <form #heroForm=\"ngForm\">\n                <ion-item>\n                    <ion-input type=\"url\" placeholder=\"https://RadarToRain.you/RadarToRain\" required\n                               [(ngModel)]=\"RadarToRainUrl\" name=\"RadarToRainUrl\"></ion-input>\n                </ion-item>\n                <ion-item>\n                    <ion-input type=\"string\" placeholder=\"User\" required\n                               [(ngModel)]=\"RadarToRainUser\" name=\"RadarToRainUser\"></ion-input>\n                </ion-item>\n                <ion-item>\n                    <ion-input type=\"password\" placeholder=\"Password\" required\n                               [(ngModel)]=\"RadarToRainPwd\" name=\"RadarToRainPwd\"></ion-input>\n                </ion-item>\n                <div>\n                    <ion-button expand=\"block\"\n                                (click)=\"add(RadarToRainUrl, RadarToRainUser, RadarToRainPwd)\"\n                                [disabled]=\"!RadarToRainUrl || !heroForm.form.valid\">Login\n                    </ion-button>\n                    <ion-button expand=\"block\"\n                                (click)=\"dismiss()\">dismiss\n                    </ion-button>\n\n\n                </div>\n            </form>\n            -->\n\n        </ion-card-content>\n    </ion-card>\n\n</ion-content>\n\n\n"],"names":["CommonModule","FormsModule","IonicModule","RouterModule","HomePage","NewInstancePage","PipesModule","HomePageModule","forChild","path","component","declarations","imports","environment","i0","constructor","router","modalController","profile","version","refresh","ngAfterViewInit","closeInfo","windowName","homeInfoAlreadyViewed","sessionData","infos","storeAll","clickOnNotifications","navigate","clickOnRain","rain","id","presentModal","modal","create","componentProps","value","present","data","onDidDismiss","event","refreshInProgress","refreshProfile","rains","getRains","asTeamId","radars","getLonelyRadars","e","console","error","target","complete","isLoggedIn","gotoLout","selectors","decls","vars","consts","template","ctx","navParams","dismiss","add","RadarToRainUrl","RadarToRainUser","RadarToRainPwd","inputs"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}