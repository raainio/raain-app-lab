{"version":3,"file":"main.501defe707f2c61a.js","mappings":"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","sources":["./src/bpInfo.ts","./src/core/app-routing.module.ts","./src/core/app.component.ts","./src/core/app.component.html","./src/core/app.module.ts","./src/core/auth/auth.guard.ts","./src/core/page-not-found/page-not-found.component.ts","./src/core/page-not-found/page-not-found.component.html","./src/core/shared/cache.service.ts","./src/core/shared/fidj-storage.model.ts","./src/core/shared/index.ts","./src/core/shared/pipes.module.ts","./src/core/shared/profile-icon.directive.ts","./src/core/shared/profile.service.ts","./src/core/shared/raain-compare-stack/raain-compare-stack.component.ts","./src/core/shared/raain-compare-stack/raain-compare-stack.component.html","./src/core/shared/raain-compare/raain-compare.component.ts","./src/core/shared/raain-compare/raain-compare.component.html","./src/core/shared/raain-configuration/raain-configuration.component.ts","./src/core/shared/raain-configuration/raain-configuration.component.html","./src/core/shared/raain-date-dynamic/raain-date-dynamic.component.ts","./src/core/shared/raain-date-dynamic/raain-date-dynamic.component.html","./src/core/shared/raain-date-focus/raain-date-focus.component.ts","./src/core/shared/raain-date-focus/raain-date-focus.component.html","./src/core/shared/raain-details/raain-details.component.ts","./src/core/shared/raain-details/raain-details.component.html","./src/core/shared/raain-globe/raain-globe.component.ts","./src/core/shared/raain-globe/raain-globe.component.html","./src/core/shared/raain-map/raain-map.component.ts","./src/core/shared/raain-map/raain-map.component.html","./src/core/shared/raain-speed/raain-speed.component.ts","./src/core/shared/raain-speed/raain-speed.component.html","./src/core/shared/radar.service.ts","./src/core/shared/shared.const.ts","./src/core/shared/shared.module.ts","./src/core/shared/shared.pipe.ts","./src/core/shared/storage.service.ts","./src/core/shared/tools/CompareManager.ts","./src/core/shared/tools/DateRangeTools.ts","./src/core/shared/tools/FrameSet.ts","./src/core/shared/tools/GaugeNodeFilter.ts","./src/core/shared/tools/RefreshManager.ts","./src/core/shared/tools/index.ts","./src/core/shared/xytype.ts","./src/environments/environment.lab.ts","./src/main.ts","./node_modules/@ionic/core/dist/esm/ lazy ^\\.\\/.*\\.entry\\.js$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$ namespace object","ignored|/opt/atlassian/pipelines/agent/build/node_modules/object-inspect|./util.inspect"],"sourcesContent":["export const bpInfo = {version: 'v1.5.35'};\n","import {NgModule} from '@angular/core';\nimport {NoPreloading, RouterModule, Routes} from '@angular/router';\nimport {PageNotFoundComponent} from './page-not-found/page-not-found.component';\nimport {AuthGuard} from './auth/auth.guard';\n\nconst routes: Routes = [\n    {\n        path: '',\n        redirectTo: 'home',\n        pathMatch: 'full',\n    },\n    {\n        path: 'home',\n        loadChildren: () => import('./home/home.module').then((x) => x.HomePageModule),\n        canActivate: [AuthGuard],\n    },\n    {\n        path: 'radars',\n        loadChildren: () => import('./radars/radars.module').then((x) => x.RadarsPageModule),\n        canActivate: [AuthGuard],\n    },\n    {\n        path: 'rains',\n        loadChildren: () => import('./rains/rains.module').then((x) => x.RainsPageModule),\n        canActivate: [AuthGuard],\n    },\n    {\n        path: 'events',\n        loadChildren: () => import('./events/events.module').then((x) => x.EventsPageModule),\n        canActivate: [AuthGuard],\n    },\n    {\n        path: 'profile',\n        loadChildren: () => import('./profile/profile.module').then((x) => x.ProfilePageModule),\n        canActivate: [AuthGuard],\n    },\n    {\n        path: 'login',\n        loadChildren: () => import('./login/login.module').then((x) => x.LoginPageModule),\n    },\n    {\n        path: 'logout',\n        loadChildren: () => import('./logout/logout.module').then((x) => x.LogoutPageModule),\n    },\n    {path: '**', component: PageNotFoundComponent},\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forRoot(routes, {useHash: true, preloadingStrategy: NoPreloading}),\n        // {preloadingStrategy: PreloadAllModules, useHash: true})\n    ],\n    exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import {Component} from '@angular/core';\nimport {Platform} from '@ionic/angular';\nimport {SplashScreen} from '@capacitor/splash-screen';\nimport {ProfileService} from './shared';\nimport {environment} from '../environments/environment';\nimport {EventNode} from 'raain-model';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.scss'],\n})\nexport class AppComponent {\n    public version = environment.version;\n    public appPages = [\n        {\n            title: 'Dashboard',\n            url: '/home',\n            icon: 'home',\n        },\n        {\n            title: 'Radars',\n            url: '/radars',\n            icon: 'wifi',\n        },\n        {\n            title: 'Rains',\n            url: '/rains',\n            icon: 'rainy',\n        },\n        // {\n        //   title: 'Events',\n        //   url: '/events',\n        //   icon: 'notifications-outline'\n        // },\n        {\n            title: 'Settings',\n            url: '/profile',\n            icon: 'settings',\n        },\n        {\n            title: 'Sign out',\n            url: '/logout',\n            icon: 'log-out',\n        },\n    ];\n\n    private notifications: EventNode[];\n\n    constructor(\n        private platform: Platform,\n        private profile: ProfileService\n    ) {\n        this.notifications = [];\n        this.initializeApp();\n    }\n\n    async initializeApp() {\n        this.profile.defaultUrlForAPI = environment.serverUrl;\n        await this.platform.ready();\n        await this.initFidj();\n        await SplashScreen.hide();\n    }\n\n    async initFidj() {\n        if (this.profile.isLoggedIn()) {\n            return;\n        }\n\n        await this.profile.logout(environment.fidjKey, environment.production);\n    }\n\n    async getNotifications() {\n        this.notifications = await this.profile.getAllNotifications();\n    }\n\n    getBadges(page: {icon: string; title: string; url: string}) {\n        if (page.title !== 'Events') {\n            return 0;\n        }\n\n        return this.notifications?.length;\n    }\n}\n","<ion-app>\n  <ion-split-pane contentId=\"main-content\" when=\"(min-width: 5000px)\">\n    <ion-menu contentId=\"main-content\" type=\"overlay\">\n      <ion-header>\n        <ion-toolbar>\n          <ion-title>Menu</ion-title>\n        </ion-toolbar>\n      </ion-header>\n      <ion-content id=\"my-content\">\n        <ion-list>\n          <ion-menu-toggle *ngFor=\"let p of appPages\" auto-hide=\"false\">\n            <ion-item [routerDirection]=\"'root'\" [routerLink]=\"[p.url]\">\n              <ion-icon [name]=\"p.icon\" slot=\"start\"></ion-icon>\n              <ion-label>\n                {{ p.title }}\n              </ion-label>\n              <ion-badge *ngIf=\"getBadges(p)\" slot=\"end\">{{ getBadges(p) }}</ion-badge>\n            </ion-item>\n          </ion-menu-toggle>\n        </ion-list>\n      </ion-content>\n    </ion-menu>\n    <ion-router-outlet id=\"main-content\"></ion-router-outlet>\n  </ion-split-pane>\n  <div class=\"app-version\">{{ version }}</div>\n</ion-app>\n","import {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {RouteReuseStrategy} from '@angular/router';\n\nimport {IonicModule, IonicRouteStrategy} from '@ionic/angular';\n\nimport {AppComponent} from './app.component';\nimport {AppRoutingModule} from './app-routing.module';\nimport {SharedModule} from './shared';\nimport {PageNotFoundComponent} from './page-not-found/page-not-found.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {HttpClientModule} from '@angular/common/http';\nimport {FidjModule} from 'fidj-angular';\n\n@NgModule({\n    declarations: [AppComponent, PageNotFoundComponent],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        HttpClientModule,\n        IonicModule.forRoot(),\n        AppRoutingModule,\n        FidjModule,\n        SharedModule,\n    ],\n    providers: [{provide: RouteReuseStrategy, useClass: IonicRouteStrategy}],\n    bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot} from '@angular/router';\nimport {FidjService} from 'fidj-angular';\nimport {ProfileService} from '../shared';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n    constructor(\n        private fidjService: FidjService,\n        private profile: ProfileService\n    ) {}\n\n    async canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise<boolean> {\n        if (this.profile.isDemoMode) {\n            return true;\n        }\n\n        await this.profile.refreshProfile();\n        const loggedIn = this.fidjService.isLoggedIn();\n        if (!loggedIn) {\n            return false;\n        }\n\n        return (await this.fidjService.getRoles()).indexOf('admin') >= 0;\n    }\n}\n","import {Component, OnInit} from '@angular/core';\n\n@Component({\n    selector: 'app-page-not-found',\n    templateUrl: './page-not-found.component.html',\n    styleUrls: ['./page-not-found.component.scss'],\n})\nexport class PageNotFoundComponent implements OnInit {\n    constructor() {}\n\n    ngOnInit() {}\n}\n","<ion-content>\n\n  <ion-card class=\"welcome-card\">\n    <ion-img src=\"/assets/login.png\"></ion-img>\n\n    <ion-card-header>\n      <ion-card-title>Wrong url :(</ion-card-title>\n      <ion-card-subtitle><a href=\"/\">...back</a></ion-card-subtitle>\n    </ion-card-header>\n\n  </ion-card>\n</ion-content>\n","import {Injectable} from '@angular/core';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class Cache {\n    private readonly _cache: Record<string, unknown>;\n\n    constructor() {\n        this._cache = {};\n    }\n\n    public async getValue<T>(key: string, asyncGetter: () => Promise<T>): Promise<T> {\n        if (!Object.prototype.hasOwnProperty.call(this._cache, key)) {\n            console.log('cache not done: ', key);\n            this.putValue(key, await asyncGetter());\n        } else {\n            console.log('cache done: ', key);\n        }\n        return this._cache[key] as T;\n    }\n\n    public putValue<T>(key: string, value: T): void {\n        this._cache[key] = value;\n\n        const length = Object.getOwnPropertyNames(this._cache).length;\n        if (length > 30) {\n            console.warn('Pb on cache size exceed ? do a restart ?', length);\n        }\n    }\n}\n","import {FidjService} from 'fidj-angular';\nimport {EventNode, GaugeNode, Link, PeopleNode, RadarNode, RainNode} from 'raain-model';\nimport {Storage} from './storage.service';\n\nexport class FidjStorageNode {\n    public radars: RadarNode[] = [];\n    public rains: RainNode[] = [];\n    public gauges: GaugeNode[] = [];\n    public team: PeopleNode;\n    public events: EventNode[] = [];\n\n    public infos: any = {};\n\n    static getEmptyNode() {\n        return new FidjStorageNode();\n    }\n\n    static getDemoNode() {\n        const demoNode = new FidjStorageNode();\n        const link = new Link('rain', 'https://demo/api/rains/2');\n        /*\n    demoNode.radars = [\n      new RadarNode({\n        id: '5efd04569cb1f4161bd69dc7',\n        name: 'demo radar A',\n        links: [link],\n        latitude: 48.774569,\n        longitude: 2.008407\n      }),\n      new RadarNode({\n        id: 'dr2',\n        name: 'demo radar B',\n        links: [link],\n        latitude: 0.11,\n        longitude: -0.753\n      }),\n      new RadarNode({\n        id: 'dr3',\n        name: 'demo radar C',\n        latitude: 0.13,\n        longitude: -0.753,\n        links: []\n      }),\n      new RadarNode({\n        id: 'dr4',\n        name: 'demo radar D',\n        latitude: 0.14,\n        longitude: -0.74,\n        links: []\n      })];\n    demoNode.rains = [\n      new RainNode({\n        id: '5efd04569cb1f4161bd69dc8',\n        name: 'Demo rain zone A',\n        links: [new Link('radar', 'https://demo/api/radars/5efcfe619cb1f4161bd69dc3')],\n        status: 0,\n        quality: 75,\n        latitude: 48.774569,\n        longitude: 2.008407\n      }),\n      new RainNode({\n        id: 'dz2',\n        name: 'Demo rain zone B',\n        radars: [demoNode.radars[0], demoNode.radars[1]],\n        status: 1,\n        quality: 50,\n        latitude: 48.774569,\n        longitude: 2.008407\n      }),\n      new RainNode({\n        id: 'dz3',\n        name: 'Demo rain zone C',\n        radars: [demoNode.radars[0], demoNode.radars[1]],\n        status: 2,\n        quality: 75,\n        latitude: 48.774569,\n        longitude: 2.008407\n      }),\n      new RainNode({\n        id: 'dz4',\n        name: 'Demo rain zone D',\n        radars: [demoNode.radars[0], demoNode.radars[1]],\n        status: 3,\n        quality: 95,\n        latitude: 48.774569,\n        longitude: 2.008407\n      })];\n\n    demoNode.gauges = [\n      new GaugeNode({\n        id: 'g1',\n        name: 'Gauge A',\n        latitude: 48.7748,\n        longitude: 2.28407,\n      }),\n      new GaugeNode({\n        id: 'g2',\n        name: 'Gauge B',\n        latitude: 48.874569,\n        longitude: 2.108407,\n      })];\n    demoNode.events = [{\n      id: 'e2',\n      title: 'Need support ?',\n      status: 0,\n      red: false,\n      description: 'This area is dedicated to support you and your team. Support is made on Radar or Rain quality, ' +\n        'or any feedback we can have about your production system. Our goal : improving your data.',\n      created: new Date(),\n      modified: new Date()\n    }];\n    demoNode.team = {\n      id: 'p1',\n      email: 'demo@demo.com',\n      name: 'demo guy',\n      description: 'the demo guy'\n    };\n\n     */\n        return demoNode;\n    }\n}\n\nclass FidjStorageResult {\n    data: FidjStorageNode;\n}\n\nexport class FidjStorage {\n    private isDemoMode: boolean;\n    private node: FidjStorageNode = FidjStorageNode.getEmptyNode();\n    private fidjMetaResult: FidjStorageResult = {data: new FidjStorageNode()};\n\n    constructor(private storage: Storage) {}\n\n    public async storeData(fidjService: FidjService, data) {\n        this.node = JSON.parse(JSON.stringify(data));\n        this.fidjMetaResult.data = this.node;\n\n        if (this.isDemoMode) {\n            this.storage.set('fidjMetaResult', JSON.stringify(this.fidjMetaResult));\n            return;\n        }\n\n        await fidjService.put(this.fidjMetaResult);\n    }\n\n    public async getRefreshedNodeCopy(fidjService: FidjService): Promise<FidjStorageNode> {\n        if (this.isDemoMode) {\n            const fidjMetaResult = this.storage.get('fidjMetaResult');\n            if (fidjMetaResult) {\n                this.fidjMetaResult = JSON.parse(fidjMetaResult);\n                this.node = this.fidjMetaResult.data;\n            }\n            return JSON.parse(JSON.stringify(this.node));\n        }\n\n        const firstDemoData = async () => {\n            this.node = FidjStorageNode.getDemoNode();\n            await this.storeData(fidjService, this.node);\n        };\n\n        await fidjService.sync(firstDemoData);\n        const fidjFindAllResults: any = await fidjService.findAll();\n\n        if (fidjFindAllResults && fidjFindAllResults.length > 0) {\n            if (fidjFindAllResults[0].data) {\n                this.fidjMetaResult = fidjFindAllResults[0];\n                this.node = this.fidjMetaResult.data;\n            }\n        }\n\n        return JSON.parse(JSON.stringify(this.node));\n    }\n\n    setDemoMode(isDemo: boolean) {\n        this.isDemoMode = isDemo;\n    }\n}\n","export * from './raain-map/raain-map.component';\nexport * from './raain-compare/raain-compare.component';\nexport * from './raain-configuration/raain-configuration.component';\nexport * from './raain-date-focus/raain-date-focus.component';\nexport * from './raain-date-dynamic/raain-date-dynamic.component';\nexport * from './raain-speed/raain-speed.component';\nexport * from './raain-compare-stack/raain-compare-stack.component';\nexport * from './raain-globe/raain-globe.component';\nexport * from './raain-details/raain-details.component';\n\nexport * from './tools';\n\nexport * from './cache.service';\nexport * from './fidj-storage.model';\nexport * from './profile.service';\nexport * from './radar.service';\nexport * from './shared.const';\nexport * from './shared.pipe';\nexport * from './shared.module';\nexport * from './storage.service';\nexport * from './xytype';\nexport * from './profile-icon.directive';\nexport * from './pipes.module';\n","import {NgModule} from '@angular/core';\nimport {\n    AreInProgressPipe,\n    AreReady,\n    AreStopped,\n    HasGoodQuality,\n    HasNotGoodQuality,\n    HaveNotBeenRed,\n    IsNotReady,\n    IsReady,\n    ProgressBuffer,\n    ProgressValue,\n    TimeframeComputationProgress,\n    TimeframeQualityProgress,\n    WaitForValidation,\n} from './shared.pipe';\n\n@NgModule({\n    declarations: [\n        AreStopped,\n        AreInProgressPipe,\n        AreReady,\n        IsReady,\n        IsNotReady,\n        WaitForValidation,\n        HasGoodQuality,\n        HasNotGoodQuality,\n        ProgressValue,\n        ProgressBuffer,\n        HaveNotBeenRed,\n        TimeframeComputationProgress,\n        TimeframeQualityProgress,\n    ],\n    exports: [\n        AreStopped,\n        AreInProgressPipe,\n        AreReady,\n        IsReady,\n        IsNotReady,\n        WaitForValidation,\n        HasGoodQuality,\n        HasNotGoodQuality,\n        ProgressValue,\n        ProgressBuffer,\n        HaveNotBeenRed,\n        TimeframeComputationProgress,\n        TimeframeQualityProgress,\n    ],\n})\nexport class PipesModule {}\n","import {Directive, ElementRef, OnDestroy, OnInit} from '@angular/core';\nimport {ProfileService} from './profile.service';\nimport {Router} from '@angular/router';\n\n// Helper function to pause execution for a specified time in milliseconds\nfunction sleep(ms: number): Promise<void> {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\n@Directive({\n    selector: 'ion-toolbar',\n})\nexport class ProfileIconDirective implements OnInit, OnDestroy {\n    private refreshTimer: any;\n    private profileButton: HTMLElement;\n    private skeletonText: HTMLElement;\n    private isConnected: boolean = true;\n\n    constructor(\n        private el: ElementRef,\n        private profileService: ProfileService,\n        private router: Router\n    ) {}\n\n    ngOnInit() {\n        // Check if the user is logged in and if the toolbar is not inside a modal\n        if (this.profileService.isLoggedIn() && !this.isInsideModal()) {\n            // Get the email from the profile service\n            const email = this.profileService.getEmail();\n\n            // Create the profile button element\n            const profileButtons = document.createElement('ion-buttons');\n            profileButtons.setAttribute('slot', 'primary');\n\n            // Create the button\n            const button = document.createElement('ion-button');\n\n            // Store references for later use\n            this.profileButton = button;\n\n            // Create the skeleton text element (hidden initially)\n            const skeleton = document.createElement('ion-skeleton-text');\n            skeleton.setAttribute('animated', 'true');\n            skeleton.style.width = '100px';\n            skeleton.style.height = '20px';\n            skeleton.style.borderRadius = '4px';\n            skeleton.style.margin = '8px 16px';\n            skeleton.style.display = 'none';\n\n            // Store reference to the skeleton text\n            this.skeletonText = skeleton;\n\n            // Add the skeleton text to the buttons container\n            profileButtons.appendChild(skeleton);\n\n            // Create the icon\n            const icon = document.createElement('ion-icon');\n            icon.setAttribute('name', 'person-circle-outline');\n            icon.setAttribute('slot', 'start');\n\n            // Create the label\n            const label = document.createElement('ion-label');\n            label.textContent = email;\n\n            // Assemble the button\n            button.appendChild(icon);\n            button.appendChild(label);\n\n            // Add click event listener to the button\n            button.addEventListener('click', () => {\n                this.navigateToProfile();\n            });\n\n            // Assemble the buttons container\n            profileButtons.appendChild(button);\n\n            // Append the buttons to the toolbar\n            this.el.nativeElement.appendChild(profileButtons);\n\n            // Start the background refresh timer (check every minute)\n            this.startBackgroundRefresh();\n        }\n    }\n\n    ngOnDestroy() {\n        // Clear the timer when the directive is destroyed\n        if (this.refreshTimer) {\n            clearInterval(this.refreshTimer);\n            this.refreshTimer = null;\n        }\n    }\n\n    navigateToProfile() {\n        this.router.navigateByUrl('/profile');\n    }\n\n    private startBackgroundRefresh() {\n        this.refreshTimer = setInterval(() => {\n            this.checkAndRefreshConnection();\n        }, 20000);\n    }\n\n    private checkAndRefreshConnection() {\n        this.performConnectionRefresh();\n    }\n\n    private showSkeletonText() {\n        if (this.skeletonText && this.profileButton) {\n            this.profileButton.style.display = 'none';\n            this.skeletonText.style.display = 'block';\n        }\n    }\n\n    private hideSkeletonText() {\n        if (this.skeletonText && this.profileButton) {\n            this.profileButton.style.display = 'flex';\n            this.skeletonText.style.display = 'none';\n        }\n    }\n\n    private async performConnectionRefresh() {\n        // Show skeleton text and hide button during loading\n        this.showSkeletonText();\n\n        // Connection successful\n        this.isConnected = await this.profileService.isConnected();\n\n        if (this.isConnected) {\n            // Call the refresh function\n            if (this.profileService.needsConnectionRefresh()) {\n                await this.profileService.connectionRefresh();\n            }\n            await sleep(1000);\n        }\n        this.updateButtonState();\n\n        // Hide skeleton text and show button when loading is complete\n        this.hideSkeletonText();\n    }\n\n    private updateButtonState() {\n        if (this.profileButton) {\n            if (this.isConnected) {\n                // Enable button\n                this.profileButton.removeAttribute('disabled');\n                this.profileButton.removeAttribute('title');\n            } else {\n                // Disable button and add tooltip\n                this.profileButton.setAttribute('disabled', 'true');\n                this.profileButton.setAttribute('title', 'Profile unavailable - No connection');\n            }\n        }\n    }\n\n    // Helper method to check if the toolbar is inside a modal\n    private isInsideModal(): boolean {\n        let parent = this.el.nativeElement.parentElement;\n\n        // Traverse up the DOM tree to find if any parent is an ion-modal\n        while (parent) {\n            if (parent.tagName && parent.tagName.toLowerCase() === 'ion-modal') {\n                return true;\n            }\n            parent = parent.parentElement;\n        }\n\n        return false;\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {BehaviorSubject} from 'rxjs';\nimport {\n    EventNode,\n    GaugeMeasure,\n    GaugeNode,\n    RadarNode,\n    RainComputation,\n    RainComputationMap,\n    RainComputationQuality,\n    RainNode,\n    SpeedMatrixContainer,\n    TeamNode,\n} from 'raain-model';\n\nimport {Storage} from './storage.service';\n\nimport {FidjStorage, FidjStorageNode} from './fidj-storage.model';\nimport {ErrorInterface, FidjService, LoggerLevelEnum} from 'fidj-angular';\nimport {XYType} from './xytype';\nimport {GaugeNodeFilter} from './tools';\nimport {Router} from '@angular/router';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ProfileService {\n    public readyForSync: BehaviorSubject<boolean>;\n    public asTeamId: string;\n\n    protected email: string;\n    protected isDemo: boolean;\n    protected roles: Array<string>;\n    protected nodeData: FidjStorageNode;\n    protected fidjStorage: FidjStorage;\n    protected haveTryToReconnect: boolean;\n\n    constructor(\n        protected storage: Storage,\n        protected fidjService: FidjService,\n        protected httpClient: HttpClient,\n        private router: Router\n    ) {\n        this.email = this.storage.get('raain-email');\n        this.asTeamId = this.storage.get('raain-asTeamId');\n        this.readyForSync = new BehaviorSubject<boolean>(false);\n        this.roles = [];\n        this.fidjStorage = new FidjStorage(storage);\n        this.isDemoMode = false;\n    }\n\n    get isDemoMode() {\n        return this.isDemo;\n    }\n\n    set isDemoMode(mode) {\n        this.isDemo = mode ? mode : true;\n        this.fidjStorage.setDemoMode(this.isDemo);\n    }\n\n    get defaultUrlForAPI() {\n        return this.storage.get('raain-urlForAPI');\n    }\n\n    set defaultUrlForAPI(url: string) {\n        this.storage.set('raain-urlForAPI', url);\n    }\n\n    async refreshProfile(): Promise<FidjStorageNode> {\n        try {\n            this.nodeData = await this.fidjStorage.getRefreshedNodeCopy(this.fidjService);\n            this.setRoles(await this.fidjService.getRoles());\n            return this.nodeData;\n        } catch (e) {\n            await this.checkError(e);\n        }\n    }\n\n    async isConnected() {\n        return this.fidjService.isConnected();\n    }\n\n    getEmail() {\n        return this.email ?? this.storage.get('raain-email', this.email);\n    }\n\n    setEmail(email: string) {\n        this.email = email;\n        this.storage.set('raain-email', this.email);\n    }\n\n    async logout(fidjKey: string, fidjProd: boolean) {\n        // this.storage.remove('raain-email');\n        await this.fidjService.logout(true);\n\n        try {\n            await this.fidjService.init(fidjKey, {\n                logLevel: LoggerLevelEnum.WARN, // fidjProd ? LoggerLevelEnum.WARN : LoggerLevelEnum.INFO,\n                crypto: false,\n                prod: fidjProd,\n                useDB: false,\n            });\n            this.readyForSync.next(true);\n        } catch (err) {\n            console.error('initFidj catch pb: ', err);\n        }\n    }\n\n    async checkError(error: ErrorInterface) {\n        if (error.code === 401) {\n            console.warn('Pb on auth');\n            if (this.router.url.indexOf('login') < 0) {\n                try {\n                    await this.fidjService.logout();\n                } catch (ignored) {\n                    // Ignore logout errors as we're redirecting to logout page anyway\n                }\n                return this.gotoLout();\n            }\n        }\n    }\n\n    async gotoLout() {\n        try {\n            if (this.router.url.indexOf('login') > -1) {\n                return;\n            }\n            await this.router.navigateByUrl('/logout', {\n                skipLocationChange: true,\n                replaceUrl: true,\n            });\n        } catch (e) {\n            console.error('gotoLout error: ', e);\n        }\n    }\n\n    async gotoLogin() {\n        if (this.router.url.indexOf('login') > -1) {\n            return;\n        }\n        // await this.router.navigateByUrl('/', {skipLocationChange: true});\n        await this.router.navigate(['/login']);\n    }\n\n    isLoggedIn() {\n        const loggedIn = this.fidjService.isLoggedIn();\n        console.log('isLoggedIn: ', loggedIn);\n        return loggedIn;\n    }\n\n    needsConnectionRefresh() {\n        return this.fidjService.needsRefresh();\n    }\n\n    async connectionRefresh() {\n        await this.fidjService.refresh();\n    }\n\n    async storeAll() {\n        return this.fidjStorage.storeData(this.fidjService, this.nodeData);\n    }\n\n    isAdmin(): boolean {\n        return this.roles.indexOf('admin') > -1;\n    }\n\n    // === Notifications ===\n\n    async createNotification(rainId: string, message: string) {\n        try {\n            const resp = await this.fidjService.sendOnEndpoint({\n                key: 'notifications',\n                verb: 'POST',\n                defaultKeyUrl: this.defaultUrlForAPI + '/notifications',\n                data: {\n                    rain: rainId,\n                    message,\n                },\n            });\n            return new EventNode(resp.data);\n        } catch (e) {\n            await this.checkError(e);\n        }\n\n        return null;\n    }\n\n    async getNotifications(rainId: string) {\n        try {\n            const args = '?rain=' + rainId;\n            const resp = await this.fidjService.sendOnEndpoint({\n                key: 'notifications',\n                verb: 'GET',\n                relativePath: args,\n                defaultKeyUrl: this.defaultUrlForAPI + '/notifications',\n            });\n\n            return resp.data.notifications.map((n) => new EventNode(n));\n        } catch (e) {\n            await this.checkError(e);\n        }\n\n        return null;\n    }\n\n    async getAllNotifications(): Promise<EventNode[]> {\n        try {\n            const resp = await this.fidjService.sendOnEndpoint({\n                key: 'notifications',\n                verb: 'GET',\n                defaultKeyUrl: this.defaultUrlForAPI + '/notifications',\n            });\n\n            return resp.data.notifications.map((n) => new EventNode(n));\n        } catch (e) {\n            await this.checkError(e);\n        }\n\n        return [];\n    }\n\n    // === Teams ===\n\n    async getTeams(): Promise<Array<TeamNode>> {\n        const teams = [];\n        try {\n            const resp = await this.fidjService.sendOnEndpoint({\n                key: 'teams_all',\n                verb: 'GET',\n                defaultKeyUrl: this.defaultUrlForAPI + '/teams_all',\n            });\n            for (const team of resp.data.teams) {\n                teams.push(new TeamNode(team));\n            }\n        } catch (e) {\n            await this.checkError(e);\n        }\n        return teams;\n    }\n\n    async getTeam(teamId: string): Promise<TeamNode> {\n        try {\n            const resp = await this.fidjService.sendOnEndpoint({\n                key: 'teams',\n                verb: 'GET',\n                relativePath: teamId,\n                defaultKeyUrl: this.defaultUrlForAPI + '/teams',\n            });\n            return new TeamNode(resp.data);\n        } catch (e) {\n            await this.checkError(e);\n        }\n\n        return null;\n    }\n\n    // === Radars ===\n\n    async getRadars(teamId: string): Promise<Array<RadarNode>> {\n        const radars = [];\n        const url = this.defaultUrlForAPI + '/radars' + (teamId ? '?teamId=' + teamId : '');\n        try {\n            const resp = await this.fidjService.sendOnEndpoint({\n                key: 'radars',\n                verb: 'GET',\n                defaultKeyUrl: url,\n            });\n            for (const r of resp.data.radars) {\n                const radar = new RadarNode(r);\n                radars.push(radar);\n            }\n        } catch (e) {\n            await this.checkError(e);\n        }\n        return radars;\n    }\n\n    async getRadar(id: string): Promise<RadarNode> {\n        try {\n            const resp = await this.fidjService.sendOnEndpoint({\n                key: 'radars',\n                verb: 'GET',\n                relativePath: id,\n                defaultKeyUrl: this.defaultUrlForAPI + '/radars',\n            });\n            return new RadarNode(resp.data);\n        } catch (e) {\n            await this.checkError(e);\n        }\n\n        return null;\n    }\n\n    async putRadar(radarNode: RadarNode): Promise<RadarNode> {\n        const data = {\n            name: radarNode.name,\n        };\n\n        try {\n            const resp = await this.fidjService.sendOnEndpoint({\n                key: 'radars',\n                relativePath: radarNode.id,\n                verb: 'PUT',\n                data,\n                defaultKeyUrl: this.defaultUrlForAPI + '/radars/',\n            });\n\n            return new RadarNode(resp.data);\n        } catch (e) {\n            await this.checkError(e);\n        }\n    }\n\n    async getLonelyRadars(rains: RainNode[]): Promise<RadarNode[]> {\n        try {\n            const resp = await this.fidjService.sendOnEndpoint({\n                key: 'radars',\n                verb: 'GET',\n                defaultKeyUrl: this.defaultUrlForAPI + '/radars',\n            });\n            const lonelyRadars: RadarNode[] = [];\n            const radars = resp.data.radars;\n            radars.forEach((radar) => {\n                let found = false;\n                rains.forEach((rain) => {\n                    const rdId = rain.getLink('radar').getId();\n                    if (rdId === radar.id) {\n                        found = true;\n                    }\n                });\n                if (!found) {\n                    lonelyRadars.push(radar);\n                }\n            });\n            return lonelyRadars;\n        } catch (e) {\n            await this.checkError(e);\n        }\n        return [];\n    }\n\n    async getRainTimeframe(\n        rainId: string,\n        begin: Date,\n        end: Date,\n        forced = false\n    ): Promise<RainNode> {\n        try {\n            let queryPath = '' + rainId + '?format=timeframe';\n            if (begin) {\n                queryPath += '&begin=' + begin.toISOString();\n            }\n            if (end) {\n                queryPath += '&end=' + end.toISOString();\n            }\n            if (forced) {\n                queryPath += '&forced=true';\n                queryPath += '&withConfig=true';\n                // queryPath += '&bypassCache=' + new Date().getTime();\n            }\n            const resp = await this.fidjService.sendOnEndpoint({\n                key: 'rains',\n                verb: 'GET',\n                relativePath: queryPath,\n                defaultKeyUrl: this.defaultUrlForAPI + '/rains',\n            });\n            const rainNode = new RainNode(resp.data.timeframe);\n            rainNode.name += '.radar.timeframe';\n            return rainNode;\n        } catch (e) {\n            await this.checkError(e);\n        }\n        return null;\n    }\n\n    // === Rains ===\n\n    async getRains(teamId: string): Promise<Array<RainNode>> {\n        const rains = [];\n        const url = this.defaultUrlForAPI + '/rains' + (teamId ? '?teamId=' + teamId : '');\n        try {\n            const resp = await this.fidjService.sendOnEndpoint({\n                key: 'rains',\n                verb: 'GET',\n                defaultKeyUrl: url,\n            });\n            for (const rain of resp.data.rains) {\n                rains.push(new RainNode(rain));\n            }\n        } catch (e) {\n            await this.checkError(e);\n        }\n        return rains;\n    }\n\n    async getRain(id: string): Promise<RainNode> {\n        try {\n            const resp = await this.fidjService.sendOnEndpoint({\n                key: 'rains',\n                relativePath: id,\n                verb: 'GET',\n                defaultKeyUrl: this.defaultUrlForAPI + '/rains/',\n            });\n            return new RainNode(resp.data);\n        } catch (e) {\n            await this.checkError(e);\n        }\n        return null;\n    }\n\n    // === Count\n\n    async getCounts(\n        rainId: string,\n        options: {\n            range: 'hour' | 'day' | 'month' | 'year';\n            periodBegin: Date;\n        }\n    ): Promise<{\n        percentImages: XYType[];\n        percentRainy: XYType[];\n        percentQ: XYType[];\n        queueRunning: number;\n    }> {\n        try {\n            const args = `?range=${options.range}&begin=${options.periodBegin.toISOString()}`;\n\n            const resp = await this.fidjService.sendOnEndpoint({\n                key: 'rains',\n                relativePath: rainId + '/counts' + args,\n                verb: 'GET',\n                defaultKeyUrl: this.defaultUrlForAPI + '/rains/',\n            });\n\n            const counts = resp.data.counts.result;\n            const percentImages: XYType[] = [],\n                percentRainy: XYType[] = [],\n                percentQ: XYType[] = [];\n\n            counts.forEach((c) => {\n                const label = this.setDateComponents(options.periodBegin, c);\n                percentImages.push(new XYType(c.percentImages ?? 0, NaN, NaN, label));\n                percentRainy.push(new XYType(c.percentRainy ?? 0, NaN, NaN, label));\n                percentQ.push(new XYType(c.percentQ ?? 0, NaN, NaN, label));\n            });\n\n            return {\n                percentImages,\n                percentRainy,\n                percentQ,\n                queueRunning: resp.data.queueRunning,\n            };\n        } catch (e) {\n            await this.checkError(e);\n        }\n        return null;\n    }\n\n    async getCountsHour(\n        rainId: string,\n        options: {periodBegin: Date}\n    ): Promise<{\n        percentImages: XYType[];\n        rainyCount: XYType[];\n        rainySum: XYType[];\n        queueRunning: number;\n    }> {\n        try {\n            const args = `?range=hour&begin=${options.periodBegin.toISOString()}`;\n\n            const resp = await this.fidjService.sendOnEndpoint({\n                key: 'rains',\n                relativePath: rainId + '/counts' + args,\n                verb: 'GET',\n                defaultKeyUrl: this.defaultUrlForAPI + '/rains/',\n            });\n\n            const counts = resp.data.counts.result;\n            const percentImages: XYType[] = [],\n                rainySum: XYType[] = [],\n                rainyCount: XYType[] = [];\n\n            counts.forEach((c) => {\n                const label = this.setDateComponents(options.periodBegin, c);\n                percentImages.push(new XYType(c.percentImages ?? 0, NaN, NaN, label));\n                rainyCount.push(new XYType(c.rainyCount ?? 0, NaN, NaN, label));\n                rainySum.push(new XYType(c.rainySum ?? 0, NaN, NaN, label));\n            });\n\n            return {\n                percentImages,\n                rainyCount,\n                rainySum,\n                queueRunning: resp.data.queueRunning,\n            };\n        } catch (e) {\n            await this.checkError(e);\n        }\n        return null;\n    }\n\n    // === Computing ===\n\n    async launchRainComputation(rainId: string, date: Date): Promise<RainComputation[]> {\n        try {\n            const response = await this.fidjService.sendOnEndpoint({\n                verb: 'POST',\n                key: 'rains',\n                relativePath: '' + rainId + '/computations',\n                data: {\n                    date: date.toISOString(),\n                },\n                defaultKeyUrl: this.defaultUrlForAPI + '/rains',\n            });\n\n            return response.data.computations?.map((c) => new RainComputation(c));\n        } catch (e) {\n            await this.checkError(e);\n        }\n        return null;\n    }\n\n    async getRainComputationCartesianMapById(\n        rainId: string,\n        rainComputationId: string\n    ): Promise<RainComputationMap> {\n        try {\n            const queryPath =\n                '' + rainId + '/computations/' + rainComputationId + '?format=cartesian-map';\n            const response = await this.fidjService.sendOnEndpoint({\n                key: 'rains',\n                verb: 'GET',\n                relativePath: queryPath,\n                defaultKeyUrl: this.defaultUrlForAPI + '/rains',\n            });\n            if (!response.data['cartesian-map']) {\n                return null;\n            }\n\n            const rainComputationMap = new RainComputationMap(response.data['cartesian-map']);\n            rainComputationMap.name = rainId + '.rain.cartesian-map';\n            return rainComputationMap;\n        } catch (e) {\n            await this.checkError(e);\n        }\n        return null;\n    }\n\n    async getRainComputationCumulativeMapById(\n        rainId: string,\n        rainComputationId: string,\n        cumulativeHours: number\n    ): Promise<RainComputationMap> {\n        const queryPath =\n            '' + rainId + '/computations/' + rainComputationId + '/cumulative/' + cumulativeHours;\n        const response = await this.fidjService.sendOnEndpoint({\n            key: 'rains',\n            verb: 'GET',\n            relativePath: queryPath,\n            defaultKeyUrl: this.defaultUrlForAPI + '/rains',\n        });\n        if (!response.data['cumulative']) {\n            return null;\n        }\n\n        const rainComputationMap = new RainComputationMap(response.data['cumulative']);\n        rainComputationMap.name = rainId + '.rain.cumulative';\n        return rainComputationMap;\n    }\n\n    async getRainCompares(\n        rainId: string,\n        rainComputationId: string\n    ): Promise<{id: string; version: string}[]> {\n        const queryPath = '' + rainId + '/computations/' + rainComputationId;\n        const response = await this.fidjService.sendOnEndpoint({\n            key: 'rains',\n            verb: 'GET',\n            relativePath: queryPath,\n            defaultKeyUrl: this.defaultUrlForAPI + '/rains',\n            // timeout: 200000,\n        });\n\n        const rainComputation = new RainComputation(response.data);\n        const links = rainComputation.getLinks();\n        const rainComputationQualities = [];\n        for (const link of links) {\n            if (link.rel === RainComputationQuality.TYPE) {\n                const id = link.getId();\n                const dateLength = new Date().toISOString().length;\n                const version = link.href.substring(\n                    4 + RainComputationQuality.TYPE.length + 1 + dateLength + 1,\n                    link.href.indexOf('/' + id)\n                );\n                rainComputationQualities.push({id, version});\n            }\n        }\n        return rainComputationQualities;\n    }\n\n    async getRainCompareByDate(\n        rainId: string,\n        rainComputationId: string,\n        date: Date\n    ): Promise<RainComputationQuality> {\n        const queryPath =\n            '' +\n            rainId +\n            '/computations/' +\n            rainComputationId +\n            '/compares?date=' +\n            date.toISOString();\n\n        try {\n            const response = await this.fidjService.sendOnEndpoint({\n                key: 'rains',\n                verb: 'GET',\n                relativePath: queryPath,\n                defaultKeyUrl: this.defaultUrlForAPI + '/rains',\n            });\n\n            const rainComputationQuality = new RainComputationQuality(response.data.qualities[0]);\n            rainComputationQuality.qualitySpeedMatrixContainer =\n                SpeedMatrixContainer.CreateFromJson(\n                    rainComputationQuality.qualitySpeedMatrixContainer\n                );\n            return rainComputationQuality;\n        } catch (e) {\n            await this.checkError(e);\n        }\n        return null;\n    }\n\n    async getRainProgress(rainId: string): Promise<number> {\n        try {\n            const queryPath = '' + rainId + '/progress';\n            const response = await this.fidjService.sendOnEndpoint({\n                key: 'rains',\n                verb: 'GET',\n                relativePath: queryPath,\n                defaultKeyUrl: this.defaultUrlForAPI + '/rains',\n                // timeout: 200000,\n            });\n\n            return response.data.inProgress;\n        } catch (e) {\n            await this.checkError(e);\n        }\n        return 0;\n    }\n\n    // === Gauges ===\n\n    async getGauge(gaugeId: string): Promise<GaugeNode> {\n        try {\n            const resp = await this.fidjService.sendOnEndpoint({\n                key: 'gauges',\n                verb: 'GET',\n                relativePath: gaugeId,\n                defaultKeyUrl: this.defaultUrlForAPI + '/gauges',\n            });\n            return new GaugeNode(resp.data);\n        } catch (e) {\n            await this.checkError(e);\n        }\n    }\n\n    async getGauges(rainId?: string): Promise<Array<GaugeNodeFilter>> {\n        let queryPath = '';\n        if (this.asTeamId) {\n            queryPath += '?teamId=' + this.asTeamId;\n        }\n        if (rainId) {\n            if (queryPath) {\n                queryPath += '&';\n            } else {\n                queryPath += '?';\n            }\n            queryPath += 'rainId=' + rainId;\n        }\n\n        const gauges = [];\n        try {\n            const resp = await this.fidjService.sendOnEndpoint({\n                key: 'gauges',\n                verb: 'GET',\n                relativePath: queryPath,\n                defaultKeyUrl: this.defaultUrlForAPI + '/gauges',\n            });\n\n            for (const gauge of resp.data.gauges) {\n                gauges.push(new GaugeNodeFilter(gauge));\n            }\n        } catch (e) {\n            await this.checkError(e);\n        }\n        return gauges;\n    }\n\n    async getGaugeMeasures(gaugeId: string, begin: Date, end: Date): Promise<GaugeMeasure[]> {\n        const queryPath =\n            '' + gaugeId + '/measures?begin=' + begin.toISOString() + '&end=' + end.toISOString();\n        const resp = await this.fidjService.sendOnEndpoint({\n            key: 'gauges',\n            verb: 'GET',\n            relativePath: queryPath,\n            defaultKeyUrl: this.defaultUrlForAPI + '/gauges',\n        });\n\n        const gaugeMeasures: GaugeMeasure[] = [];\n        for (const gaugeMeasure of resp.data.gaugeMeasures) {\n            gaugeMeasures.push(new GaugeMeasure(gaugeMeasure));\n        }\n        return gaugeMeasures;\n    }\n\n    // === Private ===\n\n    protected setRoles(roles: Array<string>): void {\n        this.roles = roles;\n    }\n\n    private setDateComponents(\n        date: Date,\n        c: {\n            year?: number;\n            month?: number;\n            day?: number;\n            hour?: number;\n            minute?: number;\n        }\n    ): string {\n        const dateToShow = new Date(date);\n\n        if (c.year !== undefined) {\n            dateToShow.setUTCFullYear(c.year);\n        }\n        if (c.month !== undefined) {\n            dateToShow.setUTCMonth(c.month - 1);\n        }\n        if (c.day !== undefined) {\n            dateToShow.setUTCDate(c.day);\n        }\n        if (c.hour !== undefined) {\n            dateToShow.setUTCHours(c.hour);\n        }\n        if (c.minute !== undefined) {\n            dateToShow.setUTCMinutes(c.minute);\n        }\n\n        return dateToShow.toISOString();\n    }\n}\n","import {Component, EventEmitter, Input, NgZone, Output} from '@angular/core';\nimport {XYType} from '../xytype';\nimport {CompareManager} from '../tools';\n\n@Component({\n    selector: 'raain-compare-stack',\n    templateUrl: './raain-compare-stack.component.html',\n    styleUrls: ['./raain-compare-stack.component.scss'],\n})\nexport class RaainCompareStackComponent {\n    @Input()\n    public compareManager: CompareManager;\n\n    @Input()\n    public currentHeight: number;\n\n    @Output()\n    public selectedPoint = new EventEmitter<{point: XYType; compareIndex: number}>();\n\n    @Input()\n    public cumulative: boolean;\n\n    constructor(private ngZone: NgZone) {}\n\n    protected onClick(e: {point: XYType; compareIndex: number}): void {\n        this.selectedPoint.emit({point: e.point, compareIndex: e.compareIndex});\n    }\n}\n","<div *ngIf=\"cumulative\">\n    <ion-col size-md=\"6\" size-xs=\"12\">\n        <ion-card class=\"card-compare\">\n            <ion-card-header>Cumulative\n                [{{ compareManager.compareDates[0] | date:'yyyy-MM-dd HH:mm' }}\n                - {{ compareManager.compareDates[compareManager.compareDates.length - 1] | date:'yyyy-MM-dd HH:mm' }}]\n            </ion-card-header>\n            <ion-card-content *ngIf=\"compareManager.globalComparePoints?.length\">\n                <raain-compare\n                        (selectedPoint)=\"onClick($event)\"\n                        [compareIndex]=\"0\"\n                        [currentHeight]=\"500\"\n                        [pointMax]=\"compareManager.globalComparePointsMax\"\n                        [points]=\"compareManager.globalComparePoints\"></raain-compare>\n            </ion-card-content>\n        </ion-card>\n    </ion-col>\n</div>\n\n<div *ngIf=\"!cumulative\">\n    <ion-col *ngFor=\"let compare of  compareManager?.uiCompares; index as compareIndex\" size-md=\"6\" size-xs=\"12\">\n        <ion-card class=\"card-compare\">\n            <ion-card-header>Gauges filled {{ compare.name }} {{ compare.remarks }}\n            </ion-card-header>\n            <ion-card-content *ngIf=\"compare.comparePoints?.length\">\n                <raain-compare\n                        (selectedPoint)=\"onClick($event)\"\n                        [compareIndex]=\"compareIndex\"\n                        [currentHeight]=\"500\"\n                        [pointMax]=\"compare.comparePointsMax\"\n                        [points]=\"compare.comparePoints\"></raain-compare>\n            </ion-card-content>\n        </ion-card>\n    </ion-col>\n</div>\n\n<!-- TODO Speed average used\n<ion-col>\n    Speed average used : {{ compareManager?.compareSpeed?.pixelsPerPeriod ?? 0 / 12 }} m/s\n    with {{ compareManager?.compareSpeed?.angleInDegrees }} °\n</ion-col>\n-->\n","import {\n    AfterViewChecked,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostListener,\n    Input,\n    NgZone,\n    OnChanges,\n    OnDestroy,\n    Output,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport {CompareElement, CompareElementInput, ElementsFactory} from 'raain-ui';\nimport {XYType} from '../xytype';\n\n@Component({\n    selector: 'raain-compare',\n    templateUrl: './raain-compare.component.html',\n    styleUrls: ['./raain-compare.component.scss'],\n})\nexport class RaainCompareComponent implements AfterViewChecked, OnDestroy, OnChanges {\n    @Input()\n    public points: Array<XYType>;\n\n    @Input()\n    public pointMax: XYType;\n\n    @Input()\n    public remarks: string;\n\n    @Input()\n    public compareIndex: number;\n\n    @Input()\n    public currentHeight: number;\n\n    @Input()\n    public currentWidth: number;\n\n    @Output()\n    public selectedPoint = new EventEmitter<{point: XYType; compareIndex: number}>();\n\n    @ViewChild('canvasElement')\n    protected canvasElement: ElementRef;\n\n    private compareElement: CompareElement;\n    private onSizeChanged;\n    private created;\n\n    constructor(private ngZone: NgZone) {\n        this.onSizeChanged = () => {};\n    }\n\n    public ngAfterViewChecked(): void {\n        this.create();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        this.change(changes);\n    }\n\n    public ngOnDestroy(): void {\n        this.delete();\n    }\n\n    protected onClick(point: XYType): void {\n        this.selectedPoint.emit({point, compareIndex: this.compareIndex});\n    }\n\n    protected changeData(newData: XYType[], newMaxLine?: XYType[]) {\n        let changed = false;\n        const dataset = this.compareElement?.chart?.data?.datasets[0];\n        if (dataset) {\n            dataset.data = newData;\n            changed = true;\n        }\n\n        const line = this.compareElement?.chart?.data?.datasets[1];\n        if (line) {\n            line.data = newMaxLine;\n            changed = true;\n        }\n\n        if (changed) {\n            this.compareElement?.chart?.update();\n        }\n    }\n\n    @HostListener('window:resize', ['$event'])\n    private onResize(event: any): void {\n        this.updateMapSize();\n    }\n\n    private create() {\n        if (this.created) {\n            return;\n        }\n        this.created = true;\n\n        const factory = new ElementsFactory();\n        this.compareElement = factory.createCompare(\n            this.canvasElement.nativeElement,\n            new CompareElementInput(\n                this.points.map((p) => {\n                    return {x: p.x, y: p.y, r: p.r, name: p.name, id: p.id};\n                }),\n                this.pointMax,\n                this.onClick.bind(this)\n            )\n        );\n    }\n\n    private delete() {\n        if (this.compareElement) {\n            this.compareElement?.chart?.destroy();\n        }\n        this.created = false;\n    }\n\n    private change(changes: SimpleChanges) {\n        if (changes.points) {\n            this.changeData(this.points, [{x: 0, y: 0}, this.pointMax]);\n        }\n    }\n\n    private updateMapSize(): void {\n        const mapDivWidth = this.canvasElement.nativeElement.parentNode?.parentNode['clientWidth'];\n        const padding = 20;\n        let currentWidth =\n            mapDivWidth ||\n            window.innerWidth ||\n            document.documentElement.clientWidth ||\n            document.body.clientWidth;\n        const currentHeight =\n            this.currentHeight ||\n            window.innerHeight ||\n            document.documentElement.clientHeight ||\n            document.body.clientHeight;\n        currentWidth -= padding;\n        this.currentWidth = currentWidth;\n        this.currentHeight = currentHeight;\n\n        this.ngZone.run(() => {\n            this.onSizeChanged();\n        });\n    }\n}\n","<div id=\"canvas-container\">\n  <h1 *ngIf=\"remarks\">{{ remarks }}</h1>\n\n  <!-- [style.height.px]=\"currentHeight\" [style.width.px]=\"currentWidth\" [width]=\"currentWidth\" [height]=\"currentHeight\"-->\n  <canvas #canvasElement></canvas>\n</div>\n","import {\n    AfterViewChecked,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostListener,\n    Input,\n    NgZone,\n    OnChanges,\n    OnDestroy,\n    Output,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport {\n    ChartScaleColors,\n    ConfigurationElement,\n    ConfigurationElementInput,\n    ElementsFactory,\n    Tools,\n} from 'raain-ui';\nimport {XYType} from '../xytype';\n\n@Component({\n    selector: 'raain-configuration',\n    templateUrl: './raain-configuration.component.html',\n    styleUrls: ['./raain-configuration.component.scss'],\n})\nexport class RaainConfigurationComponent implements AfterViewChecked, OnDestroy, OnChanges {\n    @Input()\n    public points: XYType[];\n\n    @Output()\n    public changedPoints = new EventEmitter<XYType[]>();\n\n    @Input()\n    public currentHeight: number;\n\n    @Input()\n    public currentWidth: number;\n\n    @Input()\n    public minPoint: XYType = {x: 0, y: 0};\n\n    @Input()\n    public maxPoint: XYType = {x: 300, y: 100};\n\n    @Input()\n    public logStyle = false;\n\n    @ViewChild('canvasElement')\n    protected canvasElement: ElementRef;\n\n    private configurationElement: ConfigurationElement;\n    private onDrag;\n    private onSizeChanged;\n    private created;\n\n    constructor(private ngZone: NgZone) {\n        this.onSizeChanged = () => {};\n        this.onDrag = (e: any) => {\n            this.changedPoints.emit(this.points);\n        };\n    }\n\n    public ngAfterViewChecked(): void {\n        this.create();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        this.change(changes);\n    }\n\n    public ngOnDestroy(): void {\n        this.delete();\n    }\n\n    async reset(count = 4) {\n        const points = [];\n        for (let c = 0; c < count; c++) {\n            points.push(new XYType((c + 1) * 10, (c + 1) * 0.1));\n        }\n        this.points = points;\n        await this.delete();\n        this.create();\n    }\n\n    @HostListener('window:resize', ['$event'])\n    private onResize(event: any): void {\n        // this.updateMapSize();\n    }\n\n    private create() {\n        if (this.created) {\n            return;\n        }\n        this.created = true;\n\n        let inputs = new ConfigurationElementInput(\n            this.points,\n            this.minPoint,\n            this.maxPoint,\n            false,\n            [],\n            this.onDrag\n        );\n        if (this.logStyle) {\n            const confTransparency = 0.3;\n            inputs = new ConfigurationElementInput(\n                this.points,\n                this.minPoint,\n                this.maxPoint,\n                true,\n                [\n                    {\n                        color: Tools.getTransparency(ChartScaleColors['0'], confTransparency),\n                        yStart: Math.log10(0.1),\n                        yEnd: Math.log10(0.4),\n                    },\n                    {\n                        color: Tools.getTransparency(ChartScaleColors['0.4'], confTransparency),\n                        yStart: Math.log10(0.4),\n                        yEnd: Math.log10(1),\n                    },\n                    {\n                        color: Tools.getTransparency(ChartScaleColors['1'], confTransparency),\n                        yStart: Math.log10(1),\n                        yEnd: Math.log10(3),\n                    },\n                    {\n                        color: Tools.getTransparency(ChartScaleColors['3'], confTransparency),\n                        yStart: Math.log10(3),\n                        yEnd: Math.log10(10),\n                    },\n                    {\n                        color: Tools.getTransparency(ChartScaleColors['10'], confTransparency),\n                        yStart: Math.log10(10),\n                        yEnd: Math.log10(20),\n                    },\n                    {\n                        color: Tools.getTransparency(ChartScaleColors['20'], confTransparency),\n                        yStart: Math.log10(20),\n                        yEnd: Math.log10(30),\n                    },\n                    {\n                        color: Tools.getTransparency(ChartScaleColors['30'], confTransparency),\n                        yStart: Math.log10(30),\n                        yEnd: Math.log10(50),\n                    },\n                    {\n                        color: Tools.getTransparency(ChartScaleColors['50'], confTransparency),\n                        yStart: Math.log10(50),\n                        yEnd: Math.log10(100),\n                    },\n                    {\n                        color: Tools.getTransparency(ChartScaleColors['100'], confTransparency),\n                        yStart: Math.log10(100),\n                        yEnd: Math.log10(150),\n                    },\n                    {\n                        color: Tools.getTransparency(ChartScaleColors['150'], confTransparency),\n                        yStart: Math.log10(150),\n                        yEnd: Math.log10(200),\n                    },\n                    {\n                        color: Tools.getTransparency(ChartScaleColors['200'], confTransparency),\n                        yStart: Math.log10(200),\n                        yEnd: Math.log10(250),\n                    },\n                    {\n                        color: Tools.getTransparency(ChartScaleColors['250'], confTransparency),\n                        yStart: Math.log10(250),\n                        yEnd: Math.log10(300),\n                    },\n                    {\n                        color: Tools.getTransparency(ChartScaleColors['300'], confTransparency),\n                        yStart: Math.log10(300),\n                        yEnd: Math.log10(500),\n                    },\n                ],\n                this.onDrag\n            );\n        }\n\n        this.ngZone.runOutsideAngular(() => {\n            setTimeout(() => {\n                const factory = new ElementsFactory();\n                this.configurationElement = factory.createConfiguration(\n                    this.canvasElement.nativeElement,\n                    inputs\n                );\n            }, 10);\n        });\n    }\n\n    private async delete() {\n        this.configurationElement?.chart?.destroy();\n        this.created = false;\n    }\n\n    private async change(changes: SimpleChanges) {\n        // console.log('changed', changes);\n        await this.delete();\n        this.create();\n    }\n\n    private updateMapSize(): void {\n        const mapDivWidth = this.canvasElement.nativeElement.parentNode?.parentNode['clientWidth'];\n        const padding = 20;\n        let currentWidth =\n            mapDivWidth ||\n            window.innerWidth ||\n            document.documentElement.clientWidth ||\n            document.body.clientWidth;\n        const currentHeight =\n            this.currentHeight ||\n            window.innerHeight ||\n            document.documentElement.clientHeight ||\n            document.body.clientHeight;\n        currentWidth -= padding;\n        this.currentWidth = currentWidth;\n        this.currentHeight = currentHeight;\n\n        this.ngZone.run(() => {\n            this.onSizeChanged();\n        });\n    }\n}\n","<ion-grid>\n  <ion-row>\n    <ion-col id=\"col-container\" size-xs=\"10\">\n      <div [style.height.px]=\"currentHeight\" id=\"canvas-container\">\n        <canvas #canvasElement></canvas>\n      </div>\n    </ion-col>\n    <ion-col size-xs=\"2\">\n      <ion-button (click)=\"reset(2)\" color=\"light\" shape=\"round\" size=\"small\">2</ion-button>\n      <br>\n      <ion-button (click)=\"reset(4)\" color=\"light\" shape=\"round\" size=\"small\">4</ion-button>\n      <br>\n      <ion-button (click)=\"reset(6)\" color=\"light\" shape=\"round\" size=\"small\">6</ion-button>\n      <br>\n    </ion-col>\n  </ion-row>\n</ion-grid>\n","import {\n    AfterViewChecked,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostListener,\n    Input,\n    NgZone,\n    OnChanges,\n    OnDestroy,\n    Output,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport {\n    DateRange,\n    DynamicDateStatusElement,\n    DynamicDateStatusElementInput,\n    ElementsFactory,\n} from 'raain-ui';\n\n@Component({\n    selector: 'raain-date-dynamic',\n    templateUrl: './raain-date-dynamic.component.html',\n    styleUrls: ['./raain-date-dynamic.component.scss'],\n})\nexport class RaainDateDynamicComponent implements AfterViewChecked, OnDestroy, OnChanges {\n    @Input()\n    public points: {\n        label: string;\n        style: string;\n        values: {date: Date; value: number}[];\n    }[];\n\n    @Input()\n    public focusDate: Date;\n    @Input()\n    public focusRange: DateRange;\n    @Input()\n    public withoutAll: boolean;\n    @Input()\n    public currentHeight: number;\n    public currentWidth: number;\n    @Input()\n    public fetchData: (\n        focusDate: Date,\n        focusRange: DateRange\n    ) => Promise<{label: string; style: string; values: {date: Date; value: number}[]}[]>;\n\n    @Output()\n    public changedDate = new EventEmitter<Date>();\n\n    @ViewChild('canvasElement')\n    protected canvasElement: ElementRef;\n    private dynamicDateStatusElement: DynamicDateStatusElement;\n    private onSizeChanged;\n    private created: boolean;\n\n    constructor(private ngZone: NgZone) {\n        this.focusDate = new Date();\n        this.focusRange = DateRange.CENTURY;\n        this.onSizeChanged = () => {};\n    }\n\n    public ngAfterViewChecked(): void {\n        this.create();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        this.change(changes);\n    }\n\n    public ngOnDestroy(): void {\n        this.delete();\n    }\n\n    focusPrevious() {\n        this.dynamicDateStatusElement.focusPrevious();\n    }\n\n    focusReset() {\n        this.dynamicDateStatusElement.focusReset();\n    }\n\n    focusNext() {\n        this.dynamicDateStatusElement.focusNext();\n    }\n\n    @HostListener('window:resize', ['$event'])\n    private onResize(event: any): void {\n        this.updateMapSize();\n    }\n\n    // Map style to a valid Chart.js chart type\n    private mapStyleToChartType(style: string): string {\n        // List of valid Chart.js chart types\n        const validChartTypes = [\n            'line',\n            'bar',\n            'radar',\n            'doughnut',\n            'pie',\n            'polarArea',\n            'bubble',\n            'scatter',\n        ];\n\n        // If style is a valid chart type, return it, otherwise default to 'line'\n        return validChartTypes.includes(style) ? style : 'line';\n    }\n\n    private async create() {\n        if (this.created) {\n            return;\n        }\n        this.created = true;\n\n        const monthSampleData = await this.fetchData(new Date(), DateRange.MONTH);\n\n        const factory = new ElementsFactory();\n        try {\n            this.dynamicDateStatusElement = factory.createDynamicDateStatus(\n                this.canvasElement.nativeElement,\n                new DynamicDateStatusElementInput(\n                    async (focusDate, focusRange) => {\n                        const data = await this.fetchData(focusDate, focusRange);\n                        return data.map((item) => ({\n                            ...item,\n                            style: this.mapStyleToChartType(item.style),\n                        }));\n                    },\n                    {\n                        dataLength: monthSampleData.length,\n                        chartMinValue: -10,\n                        chartMaxValue: 100,\n                        onLastClick: (date: Date) => {\n                            this.changedDate.emit(date);\n                        },\n                    }\n                )\n            );\n        } catch (e) {\n            console.warn('dynamic focus creation issue', e);\n        }\n    }\n\n    private async delete() {\n        this.dynamicDateStatusElement?.chart?.destroy();\n        this.created = false;\n    }\n\n    private async change(changes: SimpleChanges) {\n        await this.delete();\n        await this.create();\n    }\n\n    private updateMapSize(): void {\n        const mapDivWidth = this.canvasElement.nativeElement.parentNode?.parentNode['clientWidth'];\n        const padding = 20;\n        let currentWidth =\n            mapDivWidth ||\n            window.innerWidth ||\n            document.documentElement.clientWidth ||\n            document.body.clientWidth;\n        const currentHeight =\n            this.currentHeight ||\n            window.innerHeight ||\n            document.documentElement.clientHeight ||\n            document.body.clientHeight;\n        currentWidth -= padding;\n        this.currentWidth = currentWidth;\n        this.currentHeight = currentHeight;\n\n        this.ngZone.run(() => {\n            this.onSizeChanged();\n        });\n    }\n}\n","<ion-grid>\n  <ion-row>\n    <ion-col id=\"col-container\" size-sm=\"12\">\n      <div [style.height.px]=\"currentHeight\" id=\"canvas-container\">\n        <canvas #canvasElement></canvas>\n      </div>\n    </ion-col>\n  </ion-row>\n\n  <ion-row>\n    <ion-col class=\"ion-text-right\" offset-sm=\"4\" size-sm=\"1\">\n      <ion-button (click)=\"focusPrevious()\" color=\"medium\" fill=\"clear\">\n        <ion-icon name=\"chevron-back-outline\"></ion-icon>\n      </ion-button>\n    </ion-col>\n    <ion-col class=\"ion-text-center\" size-sm=\"2\">\n      <ion-button (click)=\"focusReset()\" *ngIf=\"!withoutAll\" color=\"medium\" fill=\"clear\">\n        all dates\n      </ion-button>\n    </ion-col>\n    <ion-col class=\"ion-text-left\" size-sm=\"1\">\n      <ion-button (click)=\"focusNext()\" color=\"medium\" fill=\"clear\">\n        <ion-icon name=\"chevron-forward-outline\"></ion-icon>\n      </ion-button>\n    </ion-col>\n  </ion-row>\n</ion-grid>\n","import {\n    AfterViewChecked,\n    Component,\n    ElementRef,\n    HostListener,\n    Input,\n    NgZone,\n    OnChanges,\n    OnDestroy,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport {DateRange, DateStatusElement, DateStatusElementInput, ElementsFactory} from 'raain-ui';\n\n@Component({\n    selector: 'raain-date-focus',\n    templateUrl: './raain-date-focus.component.html',\n    styleUrls: ['./raain-date-focus.component.scss'],\n})\nexport class RaainDateFocusComponent implements AfterViewChecked, OnDestroy, OnChanges {\n    @Input()\n    public points: {\n        label: string;\n        style: string;\n        values: {date: Date; value: number}[];\n    }[];\n\n    @Input()\n    public focusDate: Date;\n    @Input()\n    public focusRange: DateRange;\n    @Input()\n    public withoutAll: boolean;\n\n    @Input()\n    public currentHeight: number;\n    public currentWidth: number;\n\n    @ViewChild('canvasElement')\n    protected canvasElement: ElementRef;\n\n    private dateStatusElement: DateStatusElement;\n    private onSizeChanged;\n    private created: boolean;\n\n    constructor(private ngZone: NgZone) {\n        this.focusDate = new Date();\n        this.focusRange = DateRange.CENTURY;\n        this.onSizeChanged = () => {};\n    }\n\n    public ngAfterViewChecked(): void {\n        this.create();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        this.change(changes);\n    }\n\n    public ngOnDestroy(): void {\n        this.delete();\n    }\n\n    focusPrevious() {\n        this.dateStatusElement.focusPrevious();\n    }\n\n    focusReset() {\n        this.dateStatusElement.focusReset();\n    }\n\n    focusNext() {\n        this.dateStatusElement.focusNext();\n    }\n\n    @HostListener('window:resize', ['$event'])\n    private onResize(event: any): void {\n        this.updateMapSize();\n    }\n\n    private create() {\n        if (this.created) {\n            return;\n        }\n        this.created = true;\n\n        // this.ngZone.runOutsideAngular(() => {\n        //  setTimeout(() => {\n        const factory = new ElementsFactory();\n        try {\n            this.dateStatusElement = factory.createDateStatus(\n                this.canvasElement.nativeElement,\n                new DateStatusElementInput(this.points, this.focusDate, this.focusRange)\n            );\n        } catch (e) {\n            console.warn('focus creation issue', e);\n        }\n        //  }, 50);\n        // });\n    }\n\n    private async delete() {\n        await this.dateStatusElement?.chart?.destroy();\n        this.created = false;\n    }\n\n    private async change(changes: SimpleChanges) {\n        await this.delete();\n        this.create();\n    }\n\n    private updateMapSize(): void {\n        const mapDivWidth = this.canvasElement.nativeElement.parentNode?.parentNode['clientWidth'];\n        const padding = 20;\n        let currentWidth =\n            mapDivWidth ||\n            window.innerWidth ||\n            document.documentElement.clientWidth ||\n            document.body.clientWidth;\n        const currentHeight =\n            this.currentHeight ||\n            window.innerHeight ||\n            document.documentElement.clientHeight ||\n            document.body.clientHeight;\n        currentWidth -= padding;\n        this.currentWidth = currentWidth;\n        this.currentHeight = currentHeight;\n\n        this.ngZone.run(() => {\n            this.onSizeChanged();\n        });\n    }\n}\n","<ion-grid>\n  <ion-row>\n    <ion-col id=\"col-container\" size-sm=\"12\">\n      <div [style.height.px]=\"currentHeight\" id=\"canvas-container\">\n        <canvas #canvasElement></canvas>\n      </div>\n    </ion-col>\n  </ion-row>\n\n  <ion-row>\n    <ion-col class=\"ion-text-right\" offset-sm=\"4\" size-sm=\"1\">\n      <ion-button (click)=\"focusPrevious()\" color=\"medium\" fill=\"clear\">\n        <ion-icon name=\"chevron-back-outline\"></ion-icon>\n      </ion-button>\n    </ion-col>\n    <ion-col class=\"ion-text-center\" size-sm=\"2\">\n      <ion-button (click)=\"focusReset()\" *ngIf=\"!withoutAll\" color=\"medium\" fill=\"clear\">\n        all dates\n      </ion-button>\n    </ion-col>\n    <ion-col class=\"ion-text-left\" size-sm=\"1\">\n      <ion-button (click)=\"focusNext()\" color=\"medium\" fill=\"clear\">\n        <ion-icon name=\"chevron-forward-outline\"></ion-icon>\n      </ion-button>\n    </ion-col>\n  </ion-row>\n</ion-grid>\n","import {Component, Input, OnChanges, OnDestroy, SimpleChanges} from '@angular/core';\nimport {ProfileService} from '../profile.service';\nimport {CartesianMeasureValue, RainNode, TeamNode} from 'raain-model';\nimport {DateRange, MapLatLng, TimeframeContainers} from 'raain-ui';\nimport {CompareManager, FrameSet, mapDateRangeToString, RefreshManager} from '../tools';\nimport {XYType} from '../xytype';\nimport {RadarService} from '../radar.service';\nimport {Storage} from '../storage.service';\n\n@Component({\n    selector: 'raain-details',\n    templateUrl: 'raain-details.component.html',\n    styleUrls: ['raain-details.component.scss'],\n})\nexport class RaainDetailsComponent implements OnDestroy, OnChanges {\n    @Input()\n    public toggleAdmin: boolean;\n    @Input()\n    public rainNode: RainNode;\n    @Input()\n    public compareManager: CompareManager;\n    @Input()\n    public refreshManager: RefreshManager;\n    @Input()\n    public profileService: ProfileService;\n    @Input()\n    public radarService: RadarService;\n    @Input()\n    public toggleCumulative: boolean;\n\n    public periodBegin: Date;\n    public periodEnd: Date;\n\n    // public UI variables\n    public teamNode: TeamNode;\n    public periodBeginAsString: string;\n    public periodEndAsString: string;\n    public periodDurationAsString: string;\n    public dateShown: Date;\n    public coordinates: MapLatLng;\n    public borders: MapLatLng[];\n    public timeframeContainers: TimeframeContainers;\n    public currentTimeframeTarget: FrameSet;\n    public timeframeDates: Date[];\n    public countPoints: {\n        label: string;\n        style: string;\n        values: {date: Date; value: number}[];\n    }[];\n    public countsPeriod: {\n        percentImages?: XYType[];\n        queueRunning?: number;\n        progress?: number;\n    };\n\n    public gaugeSelectedPoints: {\n        label: string;\n        style: string;\n        values: {date: Date; value: number}[];\n    }[];\n    public toggleHistory: boolean;\n    public toggleMap: boolean;\n    public toggleCompare: boolean;\n    public toggleGaugeMeasures: boolean;\n    public toggleRemoveCompareDuplicate: boolean;\n    public refreshInProgress: boolean;\n    public sumDetails: string;\n    protected readonly DateRange = DateRange;\n\n    constructor(protected storage: Storage) {}\n\n    private static PeriodDisplay(date: Date | string) {\n        let d = new Date();\n        if (date) {\n            d = new Date(date);\n            const userTimezoneOffset = d.getTimezoneOffset() * 60000;\n            d = new Date(d.getTime() - userTimezoneOffset);\n        }\n        const exampleFormattedDate = '2017-06-01T08:30';\n        return d.toISOString().substring(0, exampleFormattedDate.length);\n    }\n\n    private static DateUTC(date: string) {\n        const hasISOFormat = date.match(/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}Z$/);\n        let d = new Date(date);\n        if (!hasISOFormat) {\n            const userTimezoneOffset = d.getTimezoneOffset() * 60000;\n            d = new Date(d.getTime() - userTimezoneOffset);\n        }\n        return d;\n    }\n\n    public async fetchData(focusDate: Date, focusRange: DateRange) {\n        const values = [];\n        for (let i = 0; i < 10; i++) {\n            values.push({date: new Date(2020 + i, 0), value: 10});\n        }\n        const fakeData = [\n            {\n                label: '% Rainy',\n                style: 'bar',\n                values,\n            },\n            {\n                label: '% Images',\n                style: 'bar',\n                values,\n            },\n            //  {\n            //      label: '% Quality',\n            //      style: 'line',\n            //      values,\n            //  },\n        ];\n\n        const range = mapDateRangeToString(focusRange);\n        let data = fakeData;\n        if (!this.rainNode) {\n            return data;\n        }\n\n        if (focusRange === DateRange.CENTURY) {\n            // fake\n        } else if (focusRange === DateRange.HOUR) {\n            const hourCounts = await this.profileService.getCountsHour(this.rainNode.id, {\n                periodBegin: focusDate,\n            });\n\n            data = [\n                {\n                    label: 'Rainy Count',\n                    style: 'line',\n                    values: hourCounts.rainyCount.map((c) => {\n                        return {\n                            date: RaainDetailsComponent.DateUTC(c.name),\n                            value: Math.min(100, c.x),\n                        };\n                    }),\n                },\n                {\n                    label: '% Images',\n                    style: 'bar',\n                    values: hourCounts.percentImages.map((c) => {\n                        return {\n                            date: RaainDetailsComponent.DateUTC(c.name),\n                            value: Math.min(100, c.x),\n                        };\n                    }),\n                },\n                {\n                    label: 'Rainy Sum',\n                    style: 'line',\n                    values: hourCounts.rainySum.map((c) => {\n                        return {\n                            date: RaainDetailsComponent.DateUTC(c.name),\n                            value: Math.min(100, c.x),\n                        };\n                    }),\n                },\n            ];\n        } else {\n            console.log('fetchData TODO:', focusDate.toISOString(), range);\n            const counts = await this.profileService.getCounts(this.rainNode.id, {\n                range,\n                periodBegin: focusDate,\n            });\n\n            data = [\n                {\n                    label: '% Rainy',\n                    style: 'bar',\n                    values: counts.percentRainy.map((c) => {\n                        return {\n                            date: RaainDetailsComponent.DateUTC(c.name),\n                            value: Math.min(100, c.x),\n                        };\n                    }),\n                },\n                {\n                    label: '% Images',\n                    style: 'bar',\n                    values: counts.percentImages.map((c) => {\n                        return {\n                            date: RaainDetailsComponent.DateUTC(c.name),\n                            value: Math.min(100, c.x),\n                        };\n                    }),\n                },\n                //  {\n                //      label: '% Quality',\n                //      style: 'line',\n                //      values: counts.percentQ.map((c) => {\n                //          return {\n                //              date: RaainDetailsComponent.DateUTC(c.name),\n                //              value: Math.min(100, c.x),\n                //          };\n                //      }),\n                //  },\n            ];\n        }\n\n        console.log(`fetchData DONE ${range}`, data);\n        return data;\n    }\n\n    // Wrapper function that preserves the async nature of fetchData\n    public fetchDataWrapper = async (focusDate: Date, focusRange: DateRange) => {\n        return await this.fetchData(focusDate, focusRange);\n    };\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        this.change(changes).then((ignored) => {});\n    }\n\n    ngOnDestroy() {\n        this.cleanAll();\n    }\n\n    async onEnableCountHistoryTab(rain: RainNode) {\n        if (!this.toggleHistory) {\n            this.countPoints = [];\n        }\n    }\n\n    async onPeriodBeginChange(event: any) {\n        const newValue = event?.target?.value ?? this.periodBeginAsString;\n        this.periodBegin = new Date(newValue);\n        this.periodBeginAsString = newValue;\n        this.storage.set('raain-periodBegin', this.periodBegin);\n\n        await this.onPeriodDurationChange(event);\n    }\n\n    async onPeriodDurationChange(_event: Event) {\n        const durationInHour = parseFloat(this.periodDurationAsString);\n        this.periodEnd = new Date(this.periodBegin.getTime() + durationInHour * (60 * 60000));\n        this.periodEndAsString = this.periodEnd.toISOString();\n        this.storage.set('raain-periodEnd', this.periodEnd);\n        this.refreshManager.period = {begin: this.periodBegin, end: this.periodEnd};\n    }\n\n    async onDateChangeInCount(dateChanged: Date) {\n        console.log('onDateChangeInCount', dateChanged);\n        this.periodBeginAsString =\n            dateChanged.toISOString().substring(0, 11) +\n            dateChanged.toLocaleTimeString().substring(0, 5);\n        this.periodDurationAsString = '1';\n        await this.onPeriodBeginChange(null);\n        this.refreshManager.refresh(false, true);\n    }\n\n    async onDateChangeInMap(dateShown: Date) {\n        // console.log('onDateChangeInMap', dateShown);\n        this.dateShown = dateShown;\n        const cumulativeHours: number = !this.toggleCumulative\n            ? 0\n            : parseFloat(this.periodDurationAsString);\n        await this.refreshManager.fetch(this.dateShown, this.toggleGaugeMeasures, cumulativeHours);\n        this.currentTimeframeTarget = this.refreshManager.getTimelineSelectedFrameSet();\n        await this.refreshManager.setReportPeriod(this.dateShown);\n    }\n\n    async onSumChangeInMap(sum: string) {\n        this.sumDetails = sum;\n    }\n\n    async onGaugeSelectInMap(mapLatLng: MapLatLng) {\n        const gaugesFiltered = this.compareManager.gaugesInMap.filter(\n            (g) => g.lat === mapLatLng.lat && g.lng === mapLatLng.lng\n        );\n        if (gaugesFiltered.length !== 1) {\n            return;\n        }\n        const gaugeSelected = gaugesFiltered[0];\n\n        await this.refreshGaugeValues({id: gaugeSelected.id, name: gaugeSelected.name});\n\n        await this.compareManager.selectGauge(gaugeSelected.id, 0);\n    }\n\n    async refreshGaugeValues(gaugeSelected: {id: string; name: string}) {\n        const dayBegin = new Date(this.periodBegin.toISOString().substring(0, 10));\n        const dayEnd = new Date(dayBegin.getTime() + 24 * 60 * 60 * 1000 - 1);\n        const gaugeMeasures = await this.profileService.getGaugeMeasures(\n            gaugeSelected.id,\n            dayBegin,\n            dayEnd\n        );\n        const gaugeValues: {date: Date; value: number}[] = gaugeMeasures.map((gm) => {\n            const cartesianMeasureValue = new CartesianMeasureValue(gm.values[0] as any);\n            const value = cartesianMeasureValue.getCartesianValues()[0].value;\n            return {date: gm.date, value};\n        });\n        this.gaugeSelectedPoints = [\n            {\n                label: gaugeSelected.name,\n                style: 'bar',\n                values: gaugeValues,\n            },\n        ];\n        console.log('this.gaugeSelectedPoints:', this.gaugeSelectedPoints);\n    }\n\n    async onGaugeSelectInCompare(e: {point: XYType; compareIndex: number}) {\n        await this.refreshGaugeValues({id: e.point.id, name: e.point.name});\n\n        await this.compareManager.selectGauge(e.point.id, e.compareIndex);\n    }\n\n    async onToggleMap($event: Event) {\n        // if (this.toggleMap) {\n        //    await this.refreshMap();\n        // }\n    }\n\n    onChangeDetectionTest(rainNode: RainNode) {\n        // TODO console.log(TEST_DETECTION++, 'onChangeDetectionTest');\n        return '';\n    }\n\n    async refreshMap() {\n        this.gaugeSelectedPoints = [];\n        // this.qualityConf.trustfulGaugeIds = this.qualityConf.trustfulGaugeIds?.length > 0 ?\n        //  this.qualityConf.trustfulGaugeIds : this.gaugesToFilter.filter(g => g.isIn).map(g => g.id);\n        this.borders = [\n            //  new MapLatLng(rainNode.latitude - 250 * 0.008, rainNode.longitude),\n            //  new MapLatLng(rainNode.latitude, rainNode.longitude - 250 * 0.013),\n            //  new MapLatLng(rainNode.latitude, rainNode.longitude + 250 * 0.013),\n            //  new MapLatLng(rainNode.latitude + 250 * 0.008, rainNode.longitude),\n        ];\n\n        this.compareManager.cleanAll();\n        await this.compareManager.setGaugesInMap();\n        this.refreshManager.refresh(false, this.toggleAdmin);\n    }\n\n    async launchComputation() {\n        await this.profileService.launchRainComputation(this.rainNode.id, this.dateShown);\n    }\n\n    async setPeriodOfNow() {\n        // should look like: \"2024-08-26T12:13\"\n        const last30mn = new Date();\n        last30mn.setMinutes(last30mn.getMinutes() - 30);\n        this.periodBeginAsString =\n            last30mn.toISOString().substring(0, 11) + last30mn.toLocaleTimeString().substring(0, 5);\n        this.periodDurationAsString = '1';\n        await this.onPeriodBeginChange(null);\n        this.refreshManager.refresh(false, true);\n    }\n\n    getPercentOfImages() {\n        if (!this.countsPeriod.percentImages?.length) {\n            return 0;\n        }\n\n        const duringPeriod = this.countsPeriod.percentImages.filter(\n            (a) =>\n                this.periodBegin.getTime() <= new Date(a.name).getTime() &&\n                new Date(a.name).getTime() <= this.periodEnd.getTime()\n        );\n        const summed = duringPeriod.reduce((a, b) => a + (b.x ?? 0), 0);\n        return Math.round(summed / duringPeriod.length);\n    }\n\n    getPercentOfComputations() {\n        const timeline = this.refreshManager.getTimelineFrameSet();\n        if (!timeline?.length) {\n            return 0;\n        }\n\n        const timelineWithComputation = timeline.filter((a) => !!a.rainComputationId);\n        const ratio = timelineWithComputation.length / timeline.length;\n        return Math.round(ratio * 100);\n    }\n\n    private cleanAll() {\n        this.borders = [];\n\n        this.timeframeContainers = new TimeframeContainers([]);\n        this.currentTimeframeTarget = null;\n        this.timeframeDates = [];\n        this.countPoints = [];\n        this.countsPeriod = {progress: 0, queueRunning: 0, percentImages: []};\n        this.gaugeSelectedPoints = [];\n\n        this.toggleHistory = false;\n        this.toggleMap = true;\n        this.toggleCompare = false;\n        this.toggleGaugeMeasures = false;\n        this.toggleRemoveCompareDuplicate = true;\n\n        this.periodBegin = new Date(this.storage.get('raain-periodBegin'));\n        this.periodEnd = new Date(this.storage.get('raain-periodEnd'));\n        this.periodBeginAsString = RaainDetailsComponent.PeriodDisplay(this.periodBegin);\n        this.periodEndAsString = RaainDetailsComponent.PeriodDisplay(this.periodEnd);\n        this.periodDurationAsString =\n            '' + (this.periodEnd.getTime() - this.periodBegin.getTime()) / (60 * 60000);\n\n        this.dateShown = this.periodBegin;\n\n        this.refreshInProgress = false;\n\n        this.compareManager?.cleanAll();\n        this.refreshManager?.cleanAll();\n    }\n\n    private async init() {\n        this.cleanAll();\n        await this.initRain();\n    }\n\n    private async initRain() {\n        if (!this.rainNode) {\n            return;\n        }\n\n        this.refreshManager.rainNode = this.rainNode;\n        this.compareManager.rainNode = this.rainNode;\n\n        this.refreshManager.setMethods(\n            this.onRefreshInProgress.bind(this),\n            this.onRefreshDone.bind(this),\n            this.onFetchDone.bind(this)\n        );\n\n        const center = this.rainNode.getCenter();\n        this.coordinates = new MapLatLng(center.lat, center.lng);\n        this.teamNode = await this.profileService.getTeam(this.rainNode.getLink('team').getId());\n\n        if (this.periodBegin && this.periodEnd) {\n            this.refreshManager.period = {begin: this.periodBegin, end: this.periodEnd};\n            await this.refreshManager.refresh(false, this.toggleAdmin);\n        }\n    }\n\n    private async onRefreshInProgress(\n        countPeriods: {\n            percentImages?: XYType[];\n            queueRunning?: number;\n            progress?: number;\n        },\n        timeframeDates: Date[]\n    ) {\n        this.refreshInProgress = true;\n        this.countsPeriod = countPeriods;\n        this.timeframeDates = timeframeDates;\n    }\n\n    private async onRefreshDone(timeframeDates: Date[]) {\n        this.timeframeDates = timeframeDates;\n        this.refreshInProgress = false;\n    }\n\n    private async onFetchDone(timeframeContainers: TimeframeContainers) {\n        this.timeframeContainers = timeframeContainers;\n    }\n\n    private async change(changes: SimpleChanges) {\n        await this.init();\n    }\n}\n","<!-- Main content container -->\n<div *ngIf=\"rainNode\" class=\"raain-details-container\">\n\n    <!-- Header section with node info\n    <ion-card class=\"node-info-card\">\n        <ion-card-content>\n            <div class=\"node-header\">\n                <div class=\"node-status\">\n                    <ion-icon *ngIf=\"(rainNode | hasGoodQuality)\" color=\"success\" name=\"checkmark-circle\"></ion-icon>\n                    <ion-icon *ngIf=\"!(rainNode | hasGoodQuality)\" color=\"warning\" name=\"alert-circle\"></ion-icon>\n                </div>\n                <div class=\"node-titles\">\n                    <ion-card-title>{{ rainNode.name }}</ion-card-title>\n                    <ion-card-subtitle>by {{ teamNode?.name }}</ion-card-subtitle>\n                </div>\n                <div class=\"node-controls\">\n                    <ion-label class=\"toggle-label\">History</ion-label>\n                    <ion-toggle (ionChange)=\"onEnableCountHistoryTab(rainNode)\"\n                                [(ngModel)]=\"toggleHistory\"\n                                [checked]=\"toggleHistory\">\n                    </ion-toggle>\n                </div>\n            </div>\n        </ion-card-content>\n    </ion-card>\n-->\n\n    <!-- Period selection section -->\n    <ion-card class=\"period-card\">\n        <ion-card-content>\n            <div class=\"period-controls\">\n                <div class=\"period-row\">\n                    <ion-button (click)=\"setPeriodOfNow()\" class=\"now-button\" fill=\"outline\">\n                        <ion-icon name=\"time-outline\" slot=\"start\"></ion-icon>\n                        Now\n                    </ion-button>\n\n                    <div class=\"period-start ion-hide-md-down\">\n                        <ion-label>Start:</ion-label>\n                        <input (change)=\"onPeriodBeginChange($event)\"\n                               [value]=\"periodBeginAsString\"\n                               class=\"datetime-input\"\n                               type=\"datetime-local\">\n                    </div>\n\n                    <div class=\"period-duration ion-hide-md-down\">\n                        <ion-label>Duration:</ion-label>\n                        <ion-select (ionDismiss)=\"onPeriodDurationChange($event)\"\n                                    [(ngModel)]=\"periodDurationAsString\"\n                                    class=\"duration-select\"\n                                    id=\"periodDuration\"\n                                    interface=\"popover\">\n                            <ion-select-option value=\"0.25\">15 minutes</ion-select-option>\n                            <ion-select-option value=\"0.5\">30 minutes</ion-select-option>\n                            <ion-select-option value=\"1\">1 hour</ion-select-option>\n                            <ion-select-option value=\"2\">2 hours</ion-select-option>\n                            <ion-select-option value=\"3\">3 hours</ion-select-option>\n                            <ion-select-option value=\"4\">4 hours</ion-select-option>\n                            <ion-select-option value=\"5\">5 hours</ion-select-option>\n                            <ion-select-option value=\"6\">6 hours</ion-select-option>\n                        </ion-select>\n                    </div>\n\n                    <div id=\"all-dates\" slot=\"end\">\n                        <ion-label class=\"toggle-label\">All dates</ion-label>\n                        <ion-toggle (ionChange)=\"onEnableCountHistoryTab(rainNode)\"\n                                    [(ngModel)]=\"toggleHistory\"\n                                    [checked]=\"toggleHistory\">\n                        </ion-toggle>\n                    </div>\n                </div>\n\n                <!-- Hidden label for change detection -->\n                <div class=\"hidden-label\">{{ onChangeDetectionTest(rainNode) }}</div>\n            </div>\n\n            <!-- Historical map section -->\n            <div *ngIf=\"toggleHistory\" class=\"period-controls\">\n                <raain-date-dynamic (changedDate)=\"onDateChangeInCount($event)\"\n                                    [currentHeight]=\"300\"\n                                    [fetchData]=\"fetchDataWrapper\"\n                                    [points]=\"countPoints\">\n                </raain-date-dynamic>\n            </div>\n        </ion-card-content>\n    </ion-card>\n\n\n    <!-- Map section -->\n    <ion-card class=\"map-card\">\n        <ion-card-content class=\"map-content\">\n            <ion-grid>\n                <ion-row id=\"progressAndRefresh\">\n                    <ion-label>\n                        <span *ngIf=\"getPercentOfComputations()\" class=\"map-stats\">\n                            {{ getPercentOfComputations() }}% Images\n                            <i *ngIf=\"countsPeriod.progress\" class=\"progress-indicator\">\n                                In Progress: {{ countsPeriod.progress }}...\n                            </i>\n                        </span>\n                        <span *ngIf=\"!getPercentOfComputations()\" class=\"no-data\">\n                            No image available\n                        </span>\n                    </ion-label>\n\n                    <ion-button (click)=\"refreshMap()\" *ngIf=\"!refreshInProgress\" class=\"refresh-button\">\n                        <ion-icon name=\"refresh-outline\" slot=\"start\"></ion-icon>\n                        Refresh Map\n                    </ion-button>\n\n                    <!-- Progress indicator -->\n                    <ion-progress-bar *ngIf=\"refreshInProgress\"\n                                      [buffer]=\"(countsPeriod.progress / ((timeframeDates?.length || 10) +3))+0.01\"\n                                      [value]=\"countsPeriod.progress / ((timeframeDates?.length || 10) +3)\"\n                                      color=\"primary\">\n                    </ion-progress-bar>\n                </ion-row>\n                <ion-row *ngIf=\"toggleMap && getPercentOfImages()\">\n                    <!-- Map component -->\n                    <ion-col class=\"map-column\" size-lg=\"7\">\n                        <div class=\"map-container\">\n                            <raain-map\n                                    (changedDate)=\"onDateChangeInMap($event)\"\n                                    (changedSum)=\"onSumChangeInMap($event)\"\n                                    (selectedMarker)=\"onGaugeSelectInMap($event)\"\n                                    [coordinates]=\"coordinates\"\n                                    [currentHeight]=\"500\"\n                                    [defaultDate]=\"dateShown\"\n                                    [markers]=\"{\n                                    borders,\n                                    gauges: compareManager.gaugesInMap,\n                                    gaugesInCompare: compareManager.gaugesInCompare,\n                                    selectedGauges: compareManager.selectedGauges,\n                                    pixels: compareManager.selectedPixels,\n                                    pixelsSolution: compareManager.pixelsSolutions?.length ? compareManager.pixelsSolutions[0] : []\n                                }\"\n                                    [showCumulative]=\"toggleCumulative\"\n                                    [sumFn]=\"refreshManager.sumFn\"\n                                    [sumValues]=\"refreshManager.sumValues\"\n                                    [timeframeContainers]=\"timeframeContainers\"\n                                    [timeframeDates]=\"timeframeDates\">\n                            </raain-map>\n                        </div>\n\n                        <div class=\"data-column\">\n                            <!-- Technical details (collapsible for cleaner UI) -->\n                            <details class=\"technical-details\">\n                                <summary>Image Details</summary>\n                                <div class=\"details-content\">\n                                    <div class=\"detail-row\">\n                                        <span class=\"detail-label\">Computed:</span>\n                                        <span class=\"detail-value\">{{ refreshManager.rainComputationMapDoneDate | date:'yyyy-MM-dd HH:mm' }}</span>\n                                    </div>\n                                    <div class=\"detail-row\">\n                                        <span class=\"detail-label\">Version:</span>\n                                        <span class=\"detail-value\">{{ refreshManager.rainComputationMapVersion }}</span>\n                                    </div>\n                                    <div class=\"detail-row\">\n                                        <span class=\"detail-label\">Launched by:</span>\n                                        <span class=\"detail-value\">{{ refreshManager.rainComputationMapLaunchedBy }}</span>\n                                    </div>\n                                    <div class=\"detail-row\">\n                                        <span class=\"detail-label\">Time spent:</span>\n                                        <span class=\"detail-value\">{{ refreshManager.rainComputationMapTimeSpentInMs }}\n                                            ms</span>\n                                    </div>\n                                    <div class=\"detail-row\">\n                                        <span class=\"detail-label\">Date:</span>\n                                        <span class=\"detail-value\">{{ refreshManager.rainComputationMapDate?.toISOString() }}\n                                            | {{ refreshManager.rainComputationMapDate | date:'yyyy-MM-dd HH:mm' }}</span>\n                                    </div>\n                                    <div class=\"detail-row\">\n                                        <span class=\"detail-label\">Water in the map:</span>\n                                        <span class=\"detail-value\">{{ sumDetails }}</span>\n                                    </div>\n                                    <div class=\"detail-row\">\n                                        <span class=\"detail-label\">Source DBZ min:</span>\n                                        <span class=\"detail-value\">{{ refreshManager.rainComputationMapOriginalMin }}</span>\n                                    </div>\n                                    <div class=\"detail-row\">\n                                        <span class=\"detail-label\">Source DBZ max:</span>\n                                        <span class=\"detail-value\">{{ refreshManager.rainComputationMapOriginalMax }}</span>\n                                    </div>\n                                </div>\n                            </details>\n                        </div>\n                    </ion-col>\n\n                    <!-- Data panel -->\n                    <ion-col class=\"data-column\" size-lg=\"5\">\n                        <div class=\"data-panel\">\n                            <!-- Compare stack component -->\n                            <div class=\"compare-stack\">\n                                <raain-compare-stack\n                                        (selectedPoint)=\"onGaugeSelectInCompare($event)\"\n                                        [compareManager]=\"compareManager\"\n                                        [cumulative]=\"toggleCumulative\">\n                                </raain-compare-stack>\n                            </div>\n\n                            <!-- Technical details (collapsible for cleaner UI) -->\n                            <details class=\"technical-details\">\n                                <summary>Compare Details</summary>\n                                <div class=\"details-content\">\n                                    <div [ngClass]=\"{'warning': refreshManager.rainComputationMapDoneDate?.getTime() > compareManager.currentQualityDoneDate?.getTime() + 60000}\"\n                                         class=\"detail-row\">\n                                        <span class=\"detail-label\">Computed:</span>\n                                        <span class=\"detail-value\">{{ compareManager.currentQualityDoneDate | date:'yyyy-MM-dd HH:mm' }}</span>\n                                    </div>\n                                    <div class=\"detail-row\">\n                                        <span class=\"detail-label\">Version:</span>\n                                        <span class=\"detail-value\">{{ compareManager.compareVersion }}</span>\n                                    </div>\n                                    <div class=\"detail-row\">\n                                        <span class=\"detail-label\">Launched by:</span>\n                                        <span class=\"detail-value\">{{ compareManager.currentQualityLaunchedBy }}</span>\n                                    </div>\n                                    <div class=\"detail-row\">\n                                        <span class=\"detail-label\">Time spent:</span>\n                                        <span class=\"detail-value\">{{ compareManager.currentQualityTimeSpentInMs }}\n                                            ms</span>\n                                    </div>\n                                    <div class=\"detail-row\">\n                                        <span class=\"detail-label\">Gauges:</span>\n                                        <span class=\"detail-value\">{{ compareManager.gaugesInCompare.length }}</span>\n                                    </div>\n                                    <div class=\"detail-row\">\n                                        <span class=\"detail-label\">Points:</span>\n                                        <span class=\"detail-value\">{{ compareManager.globalComparePoints.length }}</span>\n                                    </div>\n                                </div>\n                            </details>\n                        </div>\n                    </ion-col>\n                </ion-row>\n                <ion-row>\n                    <!-- Bottom progress bar -->\n                    <ion-progress-bar *ngIf=\"refreshInProgress\"\n                                      [buffer]=\"(countsPeriod.progress / ((timeframeDates?.length || 10) +3))+0.01\"\n                                      [value]=\"countsPeriod.progress / ((timeframeDates?.length || 10) +3)\"\n                                      color=\"primary\">\n                    </ion-progress-bar>\n                </ion-row>\n            </ion-grid>\n        </ion-card-content>\n    </ion-card>\n\n    <!-- Gauge values section -->\n    <ion-card *ngIf=\"gaugeSelectedPoints.length && gaugeSelectedPoints[0].values.length\" class=\"gauge-card\">\n        <ion-card-header>\n            <ion-card-title>\n                <ion-icon name=\"analytics-outline\"></ion-icon>\n                Selected Gauge Data\n            </ion-card-title>\n        </ion-card-header>\n        <ion-card-content>\n            <raain-date-focus\n                    [currentHeight]=\"300\"\n                    [focusDate]=\"periodBegin\"\n                    [focusRange]=\"DateRange.DAY\"\n                    [points]=\"gaugeSelectedPoints\"\n                    [withoutAll]=\"true\">\n            </raain-date-focus>\n        </ion-card-content>\n    </ion-card>\n\n</div>\n","import {\n    AfterViewChecked,\n    Component,\n    ElementRef,\n    HostListener,\n    Input,\n    NgZone,\n    OnChanges,\n    OnDestroy,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport {EarthMapElement, EarthMapElementInput, ElementsFactory} from 'raain-ui';\n\n@Component({\n    selector: 'raain-globe',\n    templateUrl: './raain-globe.component.html',\n    styleUrls: ['./raain-globe.component.scss'],\n})\nexport class RaainGlobeComponent implements AfterViewChecked, OnDestroy, OnChanges {\n    @Input()\n    public points: {\n        label: string;\n        style: string;\n        values: {date: Date; value: number}[];\n    }[];\n\n    @Input()\n    public currentHeight: number;\n    public currentWidth: number;\n\n    @ViewChild('canvasElement')\n    protected canvasElement: ElementRef;\n\n    private earthMapElement: EarthMapElement;\n    private onSizeChanged;\n    private created: boolean;\n\n    constructor(private ngZone: NgZone) {\n        this.onSizeChanged = () => {};\n    }\n\n    public ngAfterViewChecked(): void {\n        this.create();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        this.change(changes);\n    }\n\n    public ngOnDestroy(): void {\n        this.delete();\n    }\n\n    @HostListener('window:resize', ['$event'])\n    private onResize(event: any): void {\n        this.updateMapSize();\n    }\n\n    private create() {\n        if (this.created) {\n            return;\n        }\n        this.created = true;\n\n        this.ngZone.runOutsideAngular(() => {\n            setTimeout(() => {\n                const factory = new ElementsFactory();\n                try {\n                    this.earthMapElement = factory.createEarthMap(\n                        this.canvasElement.nativeElement,\n                        new EarthMapElementInput('')\n                    );\n                } catch (e) {\n                    console.warn('dynamic focus creation issue', e);\n                }\n            }, 100);\n        });\n    }\n\n    private async delete() {\n        // await this.earthMapElement?.destroy();\n        this.created = false;\n    }\n\n    private async change(changes: SimpleChanges) {\n        await this.delete();\n        this.create();\n    }\n\n    private updateMapSize(): void {\n        const mapDivWidth = this.canvasElement.nativeElement.parentNode?.parentNode['clientWidth'];\n        const padding = 20;\n        let currentWidth =\n            mapDivWidth ||\n            window.innerWidth ||\n            document.documentElement.clientWidth ||\n            document.body.clientWidth;\n        const currentHeight =\n            this.currentHeight ||\n            window.innerHeight ||\n            document.documentElement.clientHeight ||\n            document.body.clientHeight;\n        currentWidth -= padding;\n        this.currentWidth = currentWidth;\n        this.currentHeight = currentHeight;\n\n        this.ngZone.run(() => {\n            this.onSizeChanged();\n        });\n    }\n}\n","<ion-grid>\n  <ion-row>\n    <ion-col id=\"col-container\" size-sm=\"12\">\n      <div #canvasElement [style.height.px]=\"currentHeight\" id=\"canvas-container\">\n      </div>\n    </ion-col>\n  </ion-row>\n</ion-grid>\n","import {\n    AfterViewChecked,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostListener,\n    Input,\n    NgZone,\n    OnChanges,\n    OnDestroy,\n    Output,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport {CartesianTools} from 'raain-model';\nimport {IconOptions, LatLngBounds} from 'leaflet';\nimport {\n    CartesianMapValue,\n    ChartScaleColors,\n    ElementsFactory,\n    FrameContainer,\n    MapElement,\n    MapLatLng,\n    ScaleElement,\n    ScaleElementInput,\n    TimeframeContainers,\n} from 'raain-ui';\nimport {Storage} from '../storage.service';\n\n@Component({\n    selector: 'raain-map',\n    templateUrl: './raain-map.component.html',\n    styleUrls: ['./raain-map.component.scss'],\n})\nexport class RaainMapComponent implements AfterViewChecked, OnDestroy, OnChanges {\n    @Input()\n    public coordinates: MapLatLng;\n    @Input()\n    public markers: {\n        gauges: MapLatLng[];\n        selectedGauges: MapLatLng[];\n        pixels: MapLatLng[];\n        borders: MapLatLng[];\n        gaugesInCompare: MapLatLng[];\n        pixelsSolution: MapLatLng[];\n    };\n    @Input()\n    public timeframeContainers: TimeframeContainers;\n    @Input()\n    public autoplay = false;\n    @Input()\n    public showMarkers = true;\n    @Input()\n    public showCumulative = false;\n    @Input()\n    public currentHeight: number;\n    public currentWidth: number;\n\n    @Input()\n    public timeframeDates: Date[] = [];\n    @Input()\n    public defaultDate: Date;\n\n    @Input()\n    public sumValues: CartesianMapValue[];\n    @Input()\n    public sumFn: (cartesianMapValues: CartesianMapValue[]) => number;\n    public sumResult: string;\n\n    @Output()\n    public selectedMarker = new EventEmitter<MapLatLng>();\n\n    @Output()\n    public changedDate = new EventEmitter<Date>();\n\n    @Output()\n    public changedSum = new EventEmitter<string>();\n\n    public alpha: number;\n    public mcText;\n    public nextDate: Date;\n    public possibleNames: string[];\n    public possibleDates: Date[];\n    public dateToShow: Date;\n    public dateToShowAsString: string;\n    public timeframeNameToShow: string;\n    public pixelsCount: number;\n    public cumulativeDateFrom: Date;\n\n    protected currentFrameContainer: FrameContainer;\n    protected cartesianTools: CartesianTools;\n    @ViewChild('primaryMap')\n    protected mapDivRef: ElementRef;\n\n    @ViewChild('canvasScale')\n    protected scaleCanvasRef: ElementRef;\n\n    private mapElement: MapElement;\n    private scaleElement: ScaleElement;\n\n    private onSizeChanged;\n    private created;\n    private readonly iconOptions: {\n        gauges: IconOptions;\n        selectedGauges: IconOptions;\n        pixels: IconOptions;\n        borders: IconOptions;\n        gaugesInCompare: IconOptions;\n        pixelsSolution: IconOptions;\n    };\n\n    constructor(\n        private readonly ngZone: NgZone,\n        private readonly storage: Storage\n    ) {\n        this.delete();\n\n        this.cartesianTools = new CartesianTools();\n        this.pixelsCount = 1;\n\n        const iconSize = [40, 40]; // size of the icon\n        const iconAnchor = [20, 20]; // point of the icon which will correspond to marker's location\n        const pixelSize = [41, 41];\n        const pixelAnchor = [20, 20];\n        const popupAnchor = [0, -20]; // point from which the popup should open relative to the iconAnchor\n        this.iconOptions = {\n            gauges: {\n                iconUrl: './assets/maps/marker-pluvio.png',\n                iconSize,\n                iconAnchor,\n                popupAnchor,\n            },\n            gaugesInCompare: {\n                iconUrl: './assets/maps/marker-pluvio-diag.png',\n                iconSize,\n                iconAnchor,\n                popupAnchor,\n            },\n            selectedGauges: {\n                iconUrl: './assets/maps/marker-pluvio-diag-select.png',\n                iconSize,\n                iconAnchor,\n                popupAnchor,\n            },\n            pixels: {\n                iconUrl: './assets/maps/marker-rain.png',\n                iconSize,\n                iconAnchor,\n                popupAnchor,\n            },\n            pixelsSolution: {\n                // iconUrl: './assets/maps/marker-rain2.png',\n                iconUrl: './assets/maps/marker-rain.png',\n                iconSize: pixelSize,\n                iconAnchor: pixelAnchor,\n                popupAnchor,\n            },\n            borders: {\n                iconUrl: './assets/maps/marker-shadow.png',\n                iconSize,\n                iconAnchor,\n                popupAnchor,\n            },\n        };\n    }\n\n    public ngAfterViewChecked(): void {\n        this.create();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        this.change(changes);\n    }\n\n    public ngOnDestroy(): void {\n        this.delete();\n    }\n\n    public showTimeframe(force = false) {\n        if (\n            !this.dateToShowAsString ||\n            (!force && new Date(this.dateToShowAsString).getTime() === this.dateToShow?.getTime())\n        ) {\n            return;\n        }\n\n        this.dateToShow = new Date(this.dateToShowAsString);\n        this.changedDate.emit(this.dateToShow);\n    }\n\n    public next() {\n        if (!this.possibleDates || this.possibleDates.length === 0) {\n            return;\n        }\n\n        const index = this.getDateToShowIndex();\n        this.dateToShow =\n            index + 1 < this.possibleDates.length\n                ? this.possibleDates[index + 1]\n                : this.possibleDates[0];\n        this.dateToShowAsString = this.dateToShow.toISOString();\n\n        this.showTimeframe(true);\n        if (this.autoplay) {\n            window.setTimeout(() => this.next(), 2000);\n        }\n    }\n\n    public previous() {\n        this.stop();\n        if (!this.possibleDates || this.possibleDates.length === 0) {\n            return;\n        }\n\n        const index = this.getDateToShowIndex();\n        this.dateToShow = index > 0 ? this.possibleDates[index - 1] : this.possibleDates[0];\n        this.dateToShowAsString = this.dateToShow.toISOString();\n\n        this.showTimeframe(true);\n    }\n\n    public play() {\n        this.autoplay = true;\n        this.next();\n    }\n\n    public stop() {\n        this.autoplay = false;\n    }\n\n    public changeShowMarkers() {\n        if (!this.mapElement?.markersLayer || !this.mapElement?.mapLeaflet) {\n            return;\n        }\n\n        if (this.showMarkers) {\n            this.mapElement.markersLayer.addToMap(this.mapElement.mapLeaflet);\n        } else {\n            this.mapElement.markersLayer.removeFromMap(this.mapElement.mapLeaflet);\n        }\n    }\n\n    public changeAlpha() {\n        this.storage.set('raain-map-alpha', this.alpha);\n        if (!this.mapElement?.mapLeaflet) {\n            return;\n        }\n\n        this.mapElement.alpha = 0.3 + this.alpha * 0.7;\n        this.mapElement.mapLeaflet.eachLayer((layer: any) => {\n            if (layer._container?.style) {\n                layer._container.style.filter = `brightness(${(10 - this.alpha * 10) * 10}%)`; // invert(1) ?\n            }\n        });\n    }\n\n    private create() {\n        const created = this.created;\n        if (created) {\n            return;\n        }\n        this.created = true;\n\n        const markers = [\n            {iconsLatLng: this.markers.gauges, iconsOptions: this.iconOptions.gauges},\n            {\n                iconsLatLng: this.markers.selectedGauges,\n                iconsOptions: this.iconOptions.selectedGauges,\n            },\n            {\n                iconsLatLng: this.markers.gaugesInCompare,\n                iconsOptions: this.iconOptions.gaugesInCompare,\n            },\n            {iconsLatLng: this.markers.pixels, iconsOptions: this.iconOptions.pixels},\n            {\n                iconsLatLng: this.markers.pixelsSolution,\n                iconsOptions: this.iconOptions.pixelsSolution,\n            },\n            // {iconsLatLng: this.markers.borders, iconsOptions: this.iconOptions.borders},\n        ];\n\n        const factory = new ElementsFactory(this.coordinates, true);\n        this.createScale(factory, this.showCumulative ? 'mm' : 'mm/h');\n\n        this.ngZone.runOutsideAngular(() => {\n            setTimeout(() => {\n                const createdOutside = this.created;\n                if (!createdOutside) {\n                    return;\n                }\n\n                this.mapElement = factory.createMap(this.mapDivRef.nativeElement, {\n                    timeframeContainers: this.timeframeContainers,\n                    markers,\n                });\n\n                this.changeAlpha();\n\n                this.mapElement.mapLeaflet?.on('mousemove', (evt) => this.onMapMouseMove(evt));\n                this.mapElement.mapLeaflet?.on('zoom', (evt) => this.onZoom(evt));\n                const bounds: LatLngBounds = this.mapElement.mapLeaflet.getBounds();\n                this.pixelsCount = this.cartesianTools.howManyPixelsInEarthMap(\n                    bounds._southWest,\n                    bounds._northEast\n                );\n\n                this.mapElement.markersProduced?.forEach((m) =>\n                    m.on('click', (evt) => this.onMapClick(evt))\n                );\n                this.onSizeChanged = () => {\n                    this.mapElement.markersLayer?.setCurrentWidth(this.currentWidth);\n                    this.mapElement.markersLayer?.setCurrentHeight(this.currentHeight);\n                    this.mapElement.compositeLayer?.setCurrentWidth(this.currentWidth);\n                    this.mapElement.compositeLayer?.setCurrentHeight(this.currentHeight);\n                    this.mapElement.mapLeaflet?.invalidateSize({animate: true});\n                };\n                this.updateMapSize();\n                this.changeNavigation(this.defaultDate);\n            }, 100);\n        });\n    }\n\n    private delete() {\n        this.mapElement?.mapLeaflet?.remove();\n        this.mapElement = undefined;\n        this.mcText = '';\n        this.nextDate = undefined;\n        this.possibleNames = [];\n        this.possibleDates = [];\n        this.timeframeNameToShow = undefined;\n        this.dateToShow = undefined;\n        this.dateToShowAsString = undefined;\n        this.cumulativeDateFrom = undefined;\n        this.onSizeChanged = () => {};\n        this.currentFrameContainer = null;\n\n        this.created = false;\n        this.alpha = this.storage.get('raain-map-alpha', 0);\n    }\n\n    private change(changes: SimpleChanges) {\n        let possibleNewDefaultDate: Date;\n\n        if (changes.defaultDate) {\n            if (\n                new Date(changes.defaultDate.currentValue).getTime() ===\n                new Date(changes.defaultDate.previousValue).getTime()\n            ) {\n                return;\n            }\n            possibleNewDefaultDate = this.defaultDate;\n        }\n\n        if (changes.markers && this.mapElement?.markersLayer) {\n            const markers = [\n                {iconsLatLng: this.markers.gauges, iconOptions: this.iconOptions.gauges},\n                {\n                    iconsLatLng: this.markers.selectedGauges,\n                    iconOptions: this.iconOptions.selectedGauges,\n                },\n                {\n                    iconsLatLng: this.markers.gaugesInCompare,\n                    iconOptions: this.iconOptions.gaugesInCompare,\n                },\n                {iconsLatLng: this.markers.pixels, iconOptions: this.iconOptions.pixels},\n                {\n                    iconsLatLng: this.markers.pixelsSolution,\n                    iconOptions: this.iconOptions.pixelsSolution,\n                },\n                //  {iconsLatLng: this.markers.borders, iconOptions: this.iconOptions.borders},\n            ];\n            const markersProduced = this.mapElement.markersLayer.render(markers).markers;\n            if (markersProduced) {\n                markersProduced.forEach((m) => m.on('click', (evt) => this.onMapClick(evt)));\n                if (this.showMarkers) {\n                    this.mapElement.markersLayer.removeFromMap(this.mapElement.mapLeaflet);\n                    this.mapElement.markersLayer.addToMap(this.mapElement.mapLeaflet);\n                }\n            }\n        }\n\n        if (changes.markers && this.markers.selectedGauges.length === 1) {\n            const selectedGauge = this.markers.selectedGauges[0];\n            this.mapElement.mapLeaflet.setView(selectedGauge, 10);\n        }\n\n        if (this.mapElement && changes.timeframeContainers) {\n            this.updateTimeframe();\n        }\n\n        if (this.mapElement?.compositeLayer && changes.sumValues) {\n            this.updateSum();\n        }\n\n        this.changeNavigation(possibleNewDefaultDate);\n    }\n\n    private updateSum() {\n        const drawer = this.mapElement.compositeLayer.getFirstDrawer();\n        const sumOfPixels: number = drawer?.getExecOfWindowPoints(this.sumValues, this.sumFn) ?? -1;\n\n        if (sumOfPixels >= 0 && this.pixelsCount > 0) {\n            const average = Math.round((sumOfPixels / this.pixelsCount) * 100) / 100;\n            this.sumResult = `${average} (${Math.round(sumOfPixels)}mm for ${Math.round(this.pixelsCount)} pixels)`;\n        } else {\n            this.sumResult = 'NA';\n        }\n        this.changedSum.emit(this.sumResult);\n    }\n\n    private changeNavigation(defaultDate?: Date) {\n        // update possible names\n        if (this.timeframeContainers?.containers?.length) {\n            this.possibleNames = [];\n            this.timeframeContainers?.containers.forEach((c) => {\n                if (this.possibleNames.indexOf(c.name) < 0) {\n                    this.possibleNames.push(c.name);\n                }\n            });\n            this.timeframeNameToShow = this.possibleNames.length > 0 ? this.possibleNames[0] : null;\n        }\n\n        // update possible dates\n        this.possibleDates = this.timeframeDates;\n        if (!this.possibleDates || this.possibleDates.length === 0) {\n            return;\n        }\n\n        // update dateToShow\n        if (\n            defaultDate &&\n            this.possibleDates.filter((d) => d.getTime() === defaultDate.getTime()).length === 1\n        ) {\n            this.dateToShow = defaultDate;\n        }\n        if (\n            !this.dateToShow &&\n            this.possibleDates.length > 0 &&\n            this.possibleDates.filter((d) => d.getTime() === this.dateToShow?.getTime()).length !==\n                1\n        ) {\n            this.dateToShow = this.possibleDates[0];\n        }\n        this.dateToShowAsString = this.dateToShow.toISOString();\n        this.cumulativeDateFrom = new Date(this.dateToShow);\n        this.cumulativeDateFrom.setHours(this.cumulativeDateFrom.getHours() - 1);\n    }\n\n    private getDateToShowIndex(): number {\n        let index = 0;\n        for (const date of this.possibleDates) {\n            if (date.toISOString().substring(0, 19) === this.dateToShowAsString.substring(0, 19)) {\n                break;\n            }\n            index++;\n        }\n        return index;\n    }\n\n    private onZoom(evt: any) {\n        const map = evt.target;\n        const bounds: LatLngBounds = map.getBounds();\n        this.pixelsCount = this.cartesianTools.howManyPixelsInEarthMap(\n            bounds._southWest,\n            bounds._northEast\n        );\n        this.updateSum();\n    }\n\n    private handleAvailablePixels(\n        availablePixels: {width: number; height: number; totalPixels: number},\n        bounds: any,\n        zoom: number\n    ) {\n        // Update your component properties or perform calculations\n        this.currentWidth = availablePixels.width;\n        this.currentHeight = availablePixels.height;\n\n        // You can also calculate pixel density or other metrics here\n        const pixelDensity = this.calculatePixelDensity(bounds, availablePixels, zoom);\n        console.log('Pixel density:', pixelDensity);\n    }\n\n    private calculatePixelDensity(\n        bounds: any,\n        availablePixels: {width: number; height: number},\n        zoom: number\n    ) {\n        // Calculate how many meters per pixel (approximate)\n        const earthCircumference = 40075016.686; // meters\n        const metersPerPixel =\n            (earthCircumference * Math.cos((bounds.getCenter().lat * Math.PI) / 180)) /\n            Math.pow(2, zoom + 8);\n\n        return {\n            metersPerPixel,\n            pixelsPerMeter: 1 / metersPerPixel,\n            totalVisibleArea: availablePixels.width * availablePixels.height,\n        };\n    }\n\n    private onMapMouseMove(evt: {latlng: {lat: number; lng: number}}): void {\n        const lat: string = evt.latlng.lat.toFixed(3);\n        const lng: string = evt.latlng.lng.toFixed(3);\n\n        let value = NaN;\n        let valueLat = NaN,\n            valueLng = NaN,\n            valueLat2 = NaN,\n            valueLng2 = NaN;\n        if (this.currentFrameContainer) {\n            const valueSelected = (this.currentFrameContainer.values as CartesianMapValue[]).filter(\n                (v: CartesianMapValue) => {\n                    return (\n                        v.lat <= evt.latlng.lat &&\n                        evt.latlng.lat < v.lat2 &&\n                        v.lng <= evt.latlng.lng &&\n                        evt.latlng.lng < v.lng2\n                    );\n                }\n            );\n\n            if (valueSelected.length === 1) {\n                value = Math.round(valueSelected[0].value * 1000) / 1000;\n                valueLat = Math.round(valueSelected[0].lat * 1000) / 1000;\n                valueLng = Math.round(valueSelected[0].lng * 1000) / 1000;\n                valueLat2 = Math.round(valueSelected[0].lat2 * 1000) / 1000;\n                valueLng2 = Math.round(valueSelected[0].lng2 * 1000) / 1000;\n            } else {\n                // console.warn('valueSelected issue ?', valueSelected);\n            }\n        }\n\n        this.ngZone.run(() => {\n            // this.mcText = `Latitude: ${lat} &nbsp; &nbsp; Longitude: ${lng} &nbsp; &nbsp;\n            //    Value: [${valueLat} ${valueLng} | ${valueLat2} ${valueLng2}] ${value}`;\n            this.mcText = `Latitude: ${lat} &nbsp; &nbsp; Longitude: ${lng} &nbsp; &nbsp; Value: ${value}`;\n        });\n    }\n\n    private onMapClick(evt: any): void {\n        for (const gauge of this.markers.gauges) {\n            if (gauge.id === evt?.target?.options?.alt) {\n                this.markers.selectedGauges = [gauge];\n                break;\n            }\n        }\n\n        this.selectedMarker.emit(\n            new MapLatLng(evt.latlng?.lat, evt.latlng?.lng, undefined, evt.id, evt.name)\n        );\n\n        this.change({markers: ['changed']} as any);\n    }\n\n    @HostListener('window:resize', ['$event'])\n    private onResize(event: any): void {\n        this.updateMapSize();\n    }\n\n    private updateMapSize(): void {\n        const mapDivWidth = this.mapDivRef.nativeElement.parentNode?.parentNode['clientWidth'];\n        const padding = 21;\n        let currentWidth =\n            mapDivWidth ||\n            window.innerWidth ||\n            document.documentElement.clientWidth ||\n            document.body.clientWidth;\n        const currentHeight =\n            this.currentHeight ||\n            window.innerHeight ||\n            document.documentElement.clientHeight ||\n            document.body.clientHeight;\n        currentWidth -= padding;\n        this.currentWidth = currentWidth;\n        this.currentHeight = currentHeight;\n\n        this.ngZone.run(() => {\n            this.onSizeChanged();\n        });\n    }\n\n    private updateTimeframe() {\n        this.mapElement.updateMapTimeframe(this.timeframeContainers);\n        this.currentFrameContainer = this.timeframeContainers?.containers[0]?.timeframe[0];\n\n        this.changeAlpha();\n    }\n\n    private createScale(factory: ElementsFactory, label: string) {\n        this.deleteScale();\n        if (!this.scaleCanvasRef?.nativeElement) {\n            return;\n        }\n\n        const entries = Object.entries(ChartScaleColors);\n        entries.sort((a, b) => parseFloat(a[0]) - parseFloat(b[0]));\n        const sortedMap = new Map(entries);\n        const sortedArray = [...sortedMap.entries()];\n        const scaleColors = sortedArray.map((entry) => {\n            return {color: entry[1]};\n        });\n        const scaleLabels = sortedArray.map((entry) => entry[0]);\n        this.scaleElement = factory.createScale(\n            this.scaleCanvasRef.nativeElement,\n            new ScaleElementInput(scaleColors, scaleLabels, label)\n        );\n    }\n\n    private deleteScale() {\n        if (this.scaleElement) {\n            this.scaleElement?.chart?.destroy();\n        }\n    }\n}\n","<ion-grid>\n\n    <ion-row class=\"ion-align-items-end\">\n        <ion-col id=\"map-buttons\" size-xs=\"3\">\n            <ion-button (click)=\"previous()\" color=\"medium\" fill=\"outline\" shape=\"round\">\n                <ion-icon name=\"play-back\" slot=\"icon-only\"></ion-icon>\n            </ion-button>\n            <ion-button (click)=\"stop()\" [hidden]=\"!autoplay\" color=\"medium\" fill=\"outline\"\n                        shape=\"round\">\n                <ion-icon name=\"stop\" slot=\"icon-only\"></ion-icon>\n            </ion-button>\n            <ion-button (click)=\"next()\" color=\"medium\" fill=\"outline\" shape=\"round\">\n                <ion-icon name=\"play-forward\" slot=\"icon-only\"></ion-icon>\n            </ion-button>\n        </ion-col>\n\n        <ion-col *ngIf=\"showCumulative\" class=\"ion-hide-md-down\" size-xs=\"4\">\n            <ion-button color=\"medium\" fill=\"clear\" style=\"font-size: medium\">\n                From {{ cumulativeDateFrom | date:'yyyy-MM-dd HH:mm' }} to\n            </ion-button>\n        </ion-col>\n\n        <ion-col class=\"ion-text-start\" id=\"map-date\" size-md=\"4\" size-xs=\"5\">\n            <ion-select (ionDismiss)=\"showTimeframe()\" [(ngModel)]=\"dateToShowAsString\" interface=\"popover\"\n                        placeholder=\"Period\" value=\"{{dateToShowAsString}}\">\n                <ion-select-option *ngFor=\"let dateToSelect of possibleDates\" value=\"{{dateToSelect.toISOString()}}\">\n                    {{ dateToSelect | date:'yyyy-MM-dd HH:mm' }}\n                </ion-select-option>\n            </ion-select>\n        </ion-col>\n\n        <ion-col *ngIf=\"!showCumulative\" class=\"ion-hide-md-down\" size-xs=\"2\">\n            <ion-button color=\"medium\" fill=\"clear\">\n                Gauges\n                <ion-toggle (ionChange)=\"changeShowMarkers()\" [(ngModel)]=\"showMarkers\" [checked]=\"showMarkers\"\n                            color=\"medium\"></ion-toggle>\n            </ion-button>\n        </ion-col>\n        <ion-col *ngIf=\"!showCumulative\" class=\"ion-hide-md-down\" size-xs=\"2\">\n            <ion-range (ionChange)=\"changeAlpha()\" [(ngModel)]=\"alpha\" [max]=\"1\" [min]=\"0.2\" [snaps]=\"true\" [step]=\"0.2\"\n                       [ticks]=\"true\"\n                       color=\"medium\"></ion-range>\n        </ion-col>\n\n        <!-- <ion-col class=\"ion-hide-md-down\" size-xs=\"2\">\n           <ion-button color=\"medium\" fill=\"clear\">\n             Cumulative\n             <ion-toggle (ionChange)=\"changeCumulative()\" [(ngModel)]=\"showCumulative\" [checked]=\"showCumulative\"\n                         color=\"medium\"></ion-toggle>\n           </ion-button>\n         </ion-col>-->\n    </ion-row>\n\n    <ion-row>\n        <ion-col size-lg=\"10\" size-xs=\"12\">\n            <div [style.height.px]=\"currentHeight\" id=\"map-container\">\n                <div #primaryMap id=\"map-div\"></div>\n            </div>\n        </ion-col>\n        <ion-col class=\"ion-hide-xl-down\" size-lg=\"2\">\n            <div [style.height.px]=\"currentHeight\" [style.width.px]=\"60\">\n                <canvas #canvasScale></canvas>\n            </div>\n        </ion-col>\n    </ion-row>\n\n    <ion-row>\n        <!--<ion-col class=\"ion-hide-sm-down\" size-sm=\"3\">\n            <ion-button disabled=\"true\" fill=\"clear\"><small>{{ dateToShow?.toISOString() }}</small></ion-button>\n        </ion-col>-->\n        <ion-col class=\"ion-hide-sm-down\" size-sm=\"7\">\n            <span [innerHTML]=\"mcText\"></span>\n        </ion-col>\n        <!--<ion-col size-sm=\"3\" size-xs=\"12\">\n            <ion-button disabled=\"true\" fill=\"clear\">{{ sumResult }}</ion-button>\n        </ion-col>-->\n    </ion-row>\n\n</ion-grid>\n","import {\n    AfterViewChecked,\n    Component,\n    ElementRef,\n    HostListener,\n    Input,\n    NgZone,\n    OnChanges,\n    OnDestroy,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport {ElementsFactory, SpeedMatrixElementInput} from 'raain-ui';\nimport {PositionValue} from 'raain-model';\n\n@Component({\n    selector: 'raain-speed',\n    templateUrl: './raain-speed.component.html',\n    styleUrls: ['./raain-speed.component.scss'],\n})\nexport class RaainSpeedComponent implements AfterViewChecked, OnDestroy, OnChanges {\n    @Input()\n    public compareSpeedMatrix: PositionValue[];\n\n    @Input()\n    public compareTrustedIndicator: number;\n\n    @Input()\n    public currentHeight: number;\n    public currentWidth: number;\n    public hide = false;\n    @ViewChild('canvasSpeedElement')\n    protected canvasSpeedElement: ElementRef;\n    private onSizeChanged;\n    private created;\n\n    constructor(private ngZone: NgZone) {\n        this.delete();\n        this.onSizeChanged = () => {};\n    }\n\n    public ngAfterViewChecked(): void {\n        this.create();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        this.change(changes);\n    }\n\n    public ngOnDestroy(): void {\n        this.delete();\n    }\n\n    @HostListener('window:resize', ['$event'])\n    private onResize(event: any): void {\n        this.updateMapSize();\n    }\n\n    private create() {\n        if (this.created || !this.compareSpeedMatrix?.length) {\n            return;\n        }\n        this.created = true;\n\n        // this.ngZone.runOutsideAngular(() => {\n        setTimeout(() => {\n            const factory = new ElementsFactory();\n            factory.createSpeedMatrixIndicator(\n                this.canvasSpeedElement.nativeElement,\n                new SpeedMatrixElementInput(this.compareSpeedMatrix, this.compareTrustedIndicator)\n            );\n        }, 10);\n        //   });\n    }\n\n    private delete() {\n        this.created = false;\n        this.hide = false;\n    }\n\n    private change(changes: SimpleChanges) {\n        if (changes.compareSpeedMatrix) {\n            if (!this.compareSpeedMatrix?.length) {\n                this.hide = true;\n                return;\n            }\n        }\n\n        setTimeout(() => {\n            this.delete();\n            this.create();\n        }, 10);\n    }\n\n    private updateMapSize(): void {\n        const mapDivWidth =\n            this.canvasSpeedElement.nativeElement.parentNode?.parentNode['clientWidth'];\n\n        const currentWidth =\n            mapDivWidth ||\n            window.innerWidth ||\n            document.documentElement.clientWidth ||\n            document.body.clientWidth;\n        const currentHeight =\n            this.currentHeight ||\n            window.innerHeight ||\n            document.documentElement.clientHeight ||\n            document.body.clientHeight;\n        this.currentWidth = currentWidth;\n        this.currentHeight = currentHeight;\n\n        this.ngZone.run(() => {\n            this.onSizeChanged();\n        });\n    }\n}\n","<div id=\"container\">\n  <div id=\"canvas-speed-matrix\">\n    <div [hidden]=\"hide\">\n      <canvas #canvasSpeedElement id=\"indic1\"></canvas>\n    </div>\n    <div [hidden]=\"!hide\">\n      <span id=\"hiddenSquare\"> &nbsp;</span>\n    </div>\n    <!--  <span>compareTrustedIndicator {{ compareTrustedIndicator }}</span> -->\n  </div>\n</div>\n","import {Injectable} from '@angular/core';\nimport {\n    MeasureValuePolarContainer,\n    RadarPolarMeasureValue,\n    RainNode,\n    RainPolarMeasureValue,\n} from 'raain-model';\nimport {PolarMapValue} from 'raain-ui';\nimport {ProfileService} from './profile.service';\nimport {FrameSet} from './tools';\n\n@Injectable()\nexport class RadarService {\n    constructor(private profileService: ProfileService) {}\n\n    static getGeoValuesFromRainMeasures(\n        measureValue: RainPolarMeasureValue,\n        rain: RainNode\n    ): PolarMapValue[] {\n        return this.computeValues(measureValue.getPolars(), rain);\n    }\n\n    static getGeoValuesFromRadarMeasures(\n        measureValue: RadarPolarMeasureValue,\n        rain: RainNode\n    ): PolarMapValue[] {\n        return this.computeValues(measureValue.getPolars(), rain);\n    }\n\n    private static computeValues(polarMeasureValues: MeasureValuePolarContainer[], rain: RainNode) {\n        const values: PolarMapValue[] = [];\n        polarMeasureValues.forEach((p) => {\n            const azimuth = p.azimuth;\n            let distance = 0;\n            const polarEdges = p.polarEdges;\n            polarEdges.forEach((e) => {\n                const pmv = new PolarMapValue(e, azimuth, distance);\n\n                // TODO rainNode.latLngRectsAsJSON\n                //  pmv.setCenter(rain);\n\n                values.push(pmv);\n                distance += p.distance;\n            });\n        });\n\n        return values;\n    }\n\n    async getTimeline(rainNode: RainNode): Promise<FrameSet[]> {\n        const timeline: FrameSet[] = [];\n        const links = rainNode?.getLinks() ?? [];\n        const rainId = rainNode?.id;\n\n        // dates and radar measures\n        for (const link of links) {\n            const measureIndex = link.href.indexOf('measures/');\n            if (measureIndex >= 0) {\n                const start = measureIndex + 9;\n                const str1 = link.href.substring(start);\n                if (str1) {\n                    const end = str1.indexOf('/');\n                    const dateStr = str1.substring(0, end);\n                    const idStr = str1.substring(end + 1);\n\n                    const frameDate = new Date(dateStr);\n                    const existingTargets = timeline.filter(\n                        (t) => t.date.getTime() === frameDate.getTime()\n                    );\n                    if (existingTargets.length) {\n                        existingTargets[0].radarMeasureIds.push(idStr);\n                    } else {\n                        timeline.push(new FrameSet(frameDate, [idStr]));\n                    }\n                }\n            }\n        }\n\n        // rain computations\n        for (const link of links) {\n            const computationIndex = link.href.indexOf('computations/');\n            if (computationIndex >= 0) {\n                const start = computationIndex + 13;\n                const str1 = link.href.substring(start);\n                if (str1) {\n                    const splitted = str1.split('/');\n                    const date = new Date(splitted[0]);\n                    const version = splitted[1];\n                    const rainComputationId = splitted[2];\n                    const existingTargets = timeline.filter(\n                        (t) => t.date.getTime() === date.getTime()\n                    );\n                    for (const target of existingTargets) {\n                        target.rainComputationId = rainComputationId;\n                        target.rainComputationVersion = version;\n                        target.rainComputationQualities = await this.getBuilds(\n                            rainId,\n                            rainComputationId\n                        );\n                    }\n                }\n            }\n        }\n\n        return timeline;\n    }\n\n    async getBuilds(\n        rainId: string,\n        rainComputationId: string\n    ): Promise<{id: string; version: string}[]> {\n        return await this.profileService.getRainCompares(rainId, rainComputationId);\n    }\n}\n","// TODO remove constants but preferred progress indicator [0 to 1]\nexport const CONSTANTS = {\n    _RAIN_STATUS_0_NOT_STARTED: 0,\n    _RAIN_STATUS_0_WAIT_FOR_ECHOES: 0.1,\n    _RAIN_STATUS_0_WAIT_FOR_INPUT: 0.2,\n    _RAIN_STATUS_0_WAIT_FOR_INTERNAL_VALIDATION: 0.3,\n    _RAIN_STATUS_0_READY_TO_BUILD: 0.4,\n    _RAIN_STATUS_1_BUILDING: 0.5,\n    _RAIN_STATUS_1_READY_TO_COMPUTE: 0.6,\n\n    _RAIN_COMPUTATION_IS_READY: 0,\n    _RAIN_COMPUTATION_IN_PROGRESS: 0.5,\n    _RAIN_COMPUTATION_DONE: 1,\n\n    _INPUT_VALIDITY_NOT_CHECKED_YET: -1,\n    _INPUT_VALIDITY_CHECK_IN_PROGRESS: -0.5,\n    _INPUT_VALIDITY_NOT_VALID: 0,\n    _INPUT_VALIDITY_NOT_CONFIDENT: 0.5,\n    _INPUT_VALIDITY_VALID: 1,\n\n    _VERIFY_STATUS_FIND_RADARS: 0.3,\n    _VERIFY_STATUS_FIND_SIMILAR: 0.6,\n    _VERIFY_STATUS_FIND_GAUGES: 0.7,\n\n    _COMPUTATION_STATUS_UNKNOWN: 0,\n    _COMPUTATION_STATUS_IN_PROGRESS: 0.4,\n    _COMPUTATION_STATUS_FINISHED: 1,\n};\n","import {CommonModule, NgOptimizedImage, NgStyle} from '@angular/common';\nimport {NgModule, Optional, SkipSelf} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\n\nimport {ProfileService} from './profile.service';\nimport {Storage} from './storage.service';\nimport {RadarService} from './radar.service';\nimport {Cache} from './cache.service';\nimport {ProfileIconDirective} from './profile-icon.directive';\nimport {IonicModule, IonRange} from '@ionic/angular';\nimport {PipesModule} from './pipes.module';\nimport {RaainMapComponent} from './raain-map/raain-map.component';\nimport {RaainCompareComponent} from './raain-compare/raain-compare.component';\nimport {RaainConfigurationComponent} from './raain-configuration/raain-configuration.component';\nimport {RaainDateFocusComponent} from './raain-date-focus/raain-date-focus.component';\nimport {RaainDateDynamicComponent} from './raain-date-dynamic/raain-date-dynamic.component';\nimport {RaainSpeedComponent} from './raain-speed/raain-speed.component';\nimport {RaainCompareStackComponent} from './raain-compare-stack/raain-compare-stack.component';\nimport {RaainGlobeComponent} from './raain-globe/raain-globe.component';\nimport {RaainDetailsComponent} from './raain-details/raain-details.component';\n\n@NgModule({\n    declarations: [\n        RaainMapComponent,\n        RaainCompareComponent,\n        RaainCompareStackComponent,\n        RaainDateFocusComponent,\n        RaainDateDynamicComponent,\n        RaainConfigurationComponent,\n        RaainSpeedComponent,\n        RaainGlobeComponent,\n        ProfileIconDirective,\n        RaainDetailsComponent,\n    ],\n    imports: [CommonModule, FormsModule, IonicModule, NgOptimizedImage, PipesModule],\n    providers: [\n        Storage,\n        RadarService,\n        ProfileService,\n        Cache,\n        IonRange,\n    ],\n    exports: [\n        CommonModule,\n        NgStyle,\n        PipesModule,\n\n        RaainMapComponent,\n        RaainCompareComponent,\n        RaainCompareStackComponent,\n        RaainDateFocusComponent,\n        RaainDateDynamicComponent,\n        RaainConfigurationComponent,\n        RaainSpeedComponent,\n        RaainGlobeComponent,\n        ProfileIconDirective,\n        RaainDetailsComponent,\n    ],\n})\nexport class SharedModule {\n    constructor(@Optional() @SkipSelf() parentModule?: SharedModule) {\n        if (parentModule) {\n            // throw new Error(\n            console.warn('SharedModule is already loaded. Import it in the AppModule only');\n        }\n    }\n}\n","import {Pipe, PipeTransform} from '@angular/core';\nimport {EventNode, RainNode} from 'raain-model';\nimport {CONSTANTS} from './shared.const';\nimport {FrameSet} from './tools';\n\n@Pipe({name: 'areStopped'})\nexport class AreStopped implements PipeTransform {\n    transform(rains: RainNode[]): RainNode[] {\n        return rains.filter((rain) => rain.status <= CONSTANTS._RAIN_STATUS_0_NOT_STARTED);\n    }\n}\n\n@Pipe({name: 'areInProgress'})\nexport class AreInProgressPipe implements PipeTransform {\n    transform(rains: RainNode[]): RainNode[] {\n        return rains.filter(\n            (rain) =>\n                CONSTANTS._RAIN_STATUS_0_NOT_STARTED < rain.status &&\n                rain.status < CONSTANTS._RAIN_STATUS_1_READY_TO_COMPUTE\n        );\n    }\n}\n\n@Pipe({name: 'areReady'})\nexport class AreReady implements PipeTransform {\n    transform(rains: RainNode[]): RainNode[] {\n        return rains.filter(\n            (rain) =>\n                rain.status >= CONSTANTS._RAIN_STATUS_1_READY_TO_COMPUTE &&\n                rain.quality > CONSTANTS._INPUT_VALIDITY_NOT_CONFIDENT\n        );\n    }\n}\n\n@Pipe({name: 'isReady'})\nexport class IsReady implements PipeTransform {\n    transform(rain: RainNode): RainNode {\n        if (rain.status >= CONSTANTS._RAIN_STATUS_1_READY_TO_COMPUTE) {\n            return rain;\n        }\n        return null;\n    }\n}\n\n@Pipe({name: 'isNotReady'})\nexport class IsNotReady implements PipeTransform {\n    transform(rain: RainNode): RainNode {\n        if (rain.status < CONSTANTS._RAIN_STATUS_1_READY_TO_COMPUTE) {\n            return rain;\n        }\n        return null;\n    }\n}\n\n@Pipe({name: 'waitForValidation'})\nexport class WaitForValidation implements PipeTransform {\n    transform(rain: RainNode): RainNode {\n        if (rain.status === CONSTANTS._RAIN_STATUS_1_READY_TO_COMPUTE) {\n            return rain;\n        }\n        return null;\n    }\n}\n\n@Pipe({name: 'hasGoodQuality'})\nexport class HasGoodQuality implements PipeTransform {\n    transform(rain: RainNode): RainNode {\n        if (rain.quality > CONSTANTS._INPUT_VALIDITY_NOT_CONFIDENT) {\n            return rain;\n        }\n        return null;\n    }\n}\n\n@Pipe({name: 'hasNotGoodQuality'})\nexport class HasNotGoodQuality implements PipeTransform {\n    transform(rain: RainNode): RainNode {\n        if (rain.quality < CONSTANTS._INPUT_VALIDITY_VALID) {\n            return rain;\n        }\n        return null;\n    }\n}\n\n@Pipe({name: 'progressValue'})\nexport class ProgressValue implements PipeTransform {\n    transform(rain: RainNode): number {\n        if (rain.status < 0) {\n            return 0;\n        } else if (rain.status > 1) {\n            return 1;\n        }\n        return rain.status;\n    }\n}\n\n@Pipe({name: 'progressBuffer'})\nexport class ProgressBuffer implements PipeTransform {\n    transform(rain: RainNode): number {\n        if (rain.quality < 0) {\n            return 0;\n        } else if (rain.quality > 1) {\n            return 1;\n        }\n        return rain.quality;\n    }\n}\n\n@Pipe({name: 'timeframeComputationProgress'})\nexport class TimeframeComputationProgress implements PipeTransform {\n    transform(frameSets: FrameSet[]): number {\n        let progress = 0;\n        if (!frameSets || frameSets.length === 0) {\n            return 1;\n        }\n\n        for (const frameset of frameSets) {\n            if (frameset.radarMeasureIds.length && frameset.rainComputationId) {\n                progress++;\n            }\n        }\n\n        return progress / frameSets.length;\n    }\n}\n\n@Pipe({name: 'timeframeQualityProgress'})\nexport class TimeframeQualityProgress implements PipeTransform {\n    transform(frameSets: FrameSet[]): number {\n        let progress = 0;\n        if (!frameSets || frameSets.length === 0) {\n            return 1;\n        }\n\n        for (const frameset of frameSets) {\n            const qualities = frameset.rainComputationQualities\n                ? frameset.rainComputationQualities\n                : [];\n            const atLeastOneIsNotOutdated = qualities.filter(\n                (q) => q.version.indexOf('outdated') < 0\n            );\n            if (\n                frameset.radarMeasureIds.length &&\n                frameset.rainComputationId &&\n                atLeastOneIsNotOutdated.length\n            ) {\n                progress++;\n            }\n        }\n\n        return progress / frameSets.length;\n    }\n}\n\n@Pipe({\n    name: 'haveNotBeenRed',\n    pure: false,\n})\nexport class HaveNotBeenRed implements PipeTransform {\n    transform(events: EventNode[]): EventNode[] {\n        return events.filter((event) => !event.red);\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {LocalStorage} from 'fidj-angular';\n\n@Injectable()\nexport class Storage extends LocalStorage {\n    constructor() {\n        super('raain-app.');\n    }\n}\n","import {MapLatLng} from 'raain-ui';\nimport {\n    IComparePerDate,\n    ICompares,\n    PositionValue,\n    QualityPoint,\n    RainComputationQuality,\n    RainNode,\n    SpeedMatrixContainer,\n} from 'raain-model';\nimport {XYType} from '../xytype';\nimport {ProfileService} from '../profile.service';\nimport {FrameSet} from './FrameSet';\nimport {GaugeNodeFilter} from './GaugeNodeFilter';\n\nexport interface ICompareTarget {\n    date: Date;\n    rainComputationId: string;\n    rainComputationQualityId: string;\n}\n\nexport interface IUICompare {\n    name: string;\n    comparePoints: XYType[];\n    comparePointsMax: XYType;\n    comparePointsHistory: QualityPoint[];\n    remarks: string;\n}\n\nexport class CompareManager {\n    public gaugesToFilter: GaugeNodeFilter[];\n    public rainNodeGauges: string[];\n\n    public gaugesInMap: MapLatLng[];\n    public gaugesInCompare: MapLatLng[];\n    public selectedGauges: MapLatLng[];\n    public selectedPixels: MapLatLng[];\n    public pixelsSolutions: MapLatLng[][];\n\n    // from comparesTimeline\n    public compareNames: string[];\n    public uiCompares: IUICompare[];\n    public compareSpeedMatrix: PositionValue[];\n    public compareVersion: string;\n    public compareTrustedIndicator: number;\n    public compareDates: Date[];\n\n    public currentQualityDoneDate: Date;\n    public currentQualityLaunchedBy: string;\n    public currentQualityTimeSpentInMs: number;\n    public globalComparePoints: XYType[];\n    public globalComparePointsMax: XYType;\n    public compareSpeed: {angleInDegrees: number; pixelsPerPeriod: number};\n    protected buildCompares: ICompares;\n    protected selectedGauge: QualityPoint;\n    protected selectedGaugeInPoints: QualityPoint;\n    protected selectedGaugeInPointsDetail: string;\n    protected rainComputationQualitiesPerDate: any;\n\n    constructor(\n        protected profileService: ProfileService,\n        public onChanges: () => void = () => {}\n    ) {\n        this.cleanAll();\n    }\n\n    protected _rainNode: RainNode;\n\n    public get rainNode(): RainNode {\n        return this._rainNode;\n    }\n\n    public set rainNode(rainNode: RainNode) {\n        this._rainNode = rainNode;\n        this.cleanAll();\n    }\n\n    public cleanAll() {\n        this.gaugesInMap = [];\n        this.gaugesToFilter = [];\n        this.rainNodeGauges = [];\n        this.gaugesInCompare = [];\n        this.selectedGauges = [];\n        this.selectedPixels = [];\n        this.pixelsSolutions = [];\n        this.compareDates = [];\n\n        this.buildCompares = {\n            comparesPerDate: [],\n            compareCumulative: null,\n        };\n        this.globalComparePoints = [];\n        this.globalComparePointsMax = new XYType(0, 0);\n        this.rainComputationQualitiesPerDate = {};\n\n        this.selectedGauge = null;\n        this.selectedGaugeInPoints = null;\n        this.cleanCompareQuality('no compare yet');\n    }\n\n    async refreshCompareQuality(frameSet: FrameSet) {\n        const comparePerDate = this.getComparePerDate(frameSet.date);\n\n        if (\n            !comparePerDate ||\n            !comparePerDate.rainComputationQuality?.qualitySpeedMatrixContainer\n        ) {\n            this.cleanCompareQuality(\n                'no current quality ' + Object.keys(this.rainComputationQualitiesPerDate)\n            );\n            this.onChanges();\n            return;\n        }\n\n        const uiCompares: IUICompare[] = comparePerDate.compareTimeline.map((c) => {\n            return {\n                name: c.name,\n                comparePoints: c.qualityPoints.map(\n                    (p) =>\n                        new XYType(p.getGaugeValue(), p.getRainValue(), 2, p.gaugeLabel, p.gaugeId)\n                ),\n                comparePointsMax: new XYType(c.maxValue * 1.2, c.maxValue * 1.2),\n                comparePointsHistory: c.qualityPointsLegacy,\n                remarks: c.remarks,\n            };\n        });\n\n        this.currentQualityDoneDate = comparePerDate.rainComputationQuality.isDoneDate;\n        this.currentQualityTimeSpentInMs = comparePerDate.rainComputationQuality.timeSpentInMs;\n        this.currentQualityLaunchedBy = comparePerDate.rainComputationQuality.launchedBy;\n        this.compareVersion = comparePerDate.rainComputationQuality.getVersion();\n\n        this.compareSpeed =\n            comparePerDate.rainComputationQuality.qualitySpeedMatrixContainer.getSpeed();\n        this.compareNames = uiCompares.map((c) => c.name);\n        this.uiCompares = uiCompares;\n\n        this.onChanges();\n    }\n\n    async refreshGlobalCompareQuality(\n        targetsOrdered: ICompareTarget[],\n        withCompareDuplicate: boolean\n    ) {\n        try {\n            await this.fetchRainComputationQualities(targetsOrdered);\n\n            await this.buildComparesTimeline(targetsOrdered, withCompareDuplicate);\n\n            if (!this.buildCompares.compareCumulative) {\n                // throw Error('needs cumulative compare');\n                return;\n            }\n\n            const countForAverage = targetsOrdered.length;\n            const maxValue = (this.buildCompares.compareCumulative.maxValue / 12) * 1.2;\n            this.globalComparePoints = this.buildCompares.compareCumulative.qualityPoints.map(\n                (qp) =>\n                    new XYType(\n                        qp.getGaugeValue() / 12,\n                        qp.getRainValue() / 12,\n                        2,\n                        qp.gaugeLabel,\n                        qp.gaugeId\n                    )\n            );\n            this.globalComparePointsMax = new XYType(maxValue, maxValue);\n        } catch (e) {\n            console.warn(e);\n        }\n    }\n\n    async setGaugesInMap() {\n        const gaugesToFilter = await this.profileService.getGauges(this.rainNode?.id);\n        this.gaugesToFilter = gaugesToFilter\n            .sort((a, b) => {\n                return (\n                    a.approxDistanceFrom(this.rainNode.getCenter()) -\n                    b.approxDistanceFrom(this.rainNode.getCenter())\n                );\n            })\n            .filter((v, index) => index < 200);\n\n        this.rainNodeGauges = this.rainNode.getLinks('gauge').map((l) => l.getId());\n\n        const visibleGauges = this.gaugesToFilter.filter(\n            (g) => this.rainNodeGauges.indexOf(g.id) > -1\n        );\n        const mapLatLng: MapLatLng[] = [];\n        for (const gauge of visibleGauges) {\n            mapLatLng.push(\n                new MapLatLng(gauge.latitude, gauge.longitude, undefined, gauge.id, gauge.name)\n            );\n        }\n        this.gaugesInMap = mapLatLng;\n    }\n\n    async setGaugesInCompare() {\n        const qualityPoints: QualityPoint[] = [];\n        for (const compare of this.uiCompares) {\n            for (const qualityPoint of compare.comparePointsHistory) {\n                const alreadyAdded = qualityPoints.filter(\n                    (p) => p?.gaugeId === qualityPoint.gaugeId\n                );\n                if (alreadyAdded.length === 0) {\n                    qualityPoints.push(qualityPoint);\n                }\n            }\n        }\n\n        this.gaugesInCompare = qualityPoints.map((p) => {\n            return new MapLatLng(\n                p.gaugeCartesianValue.lat,\n                p.gaugeCartesianValue.lng,\n                0,\n                p.gaugeId,\n                p.gaugeLabel + '>' + p.getGaugeValue(),\n                p.getGaugeValue()\n            );\n        });\n\n        this.resetSelectedGauges();\n    }\n\n    async selectGauge(gaugeId: string, compareIndex: number) {\n        // console.log('selectGauge', gaugeId, compareIndex);\n\n        if (gaugeId) {\n            const xys = this.getCurrentQualityPoints(compareIndex).filter(\n                (p) => p.gaugeId === gaugeId\n            );\n            this.selectedGauge = xys.length === 1 ? xys[0] : null;\n        } else {\n            this.selectedGauge = null;\n        }\n\n        if (!this.selectedGauge) {\n            return this.resetSelectedGauges();\n        }\n\n        const selectedGaugeInPoints = this.getCurrentQualityPoints(compareIndex).filter(\n            (p) => p.gaugeId === this.selectedGauge.gaugeId\n        );\n        let pixelsSolutions: MapLatLng[][] = [];\n\n        if (selectedGaugeInPoints.length === 1) {\n            const remarks = JSON.parse(selectedGaugeInPoints[0].remark).sort(\n                (a, b) => a.criteriaAttemptedToBeMinimum - b.criteriaAttemptedToBeMinimum\n            );\n            console.log(remarks);\n            pixelsSolutions = remarks.map((remark) =>\n                remark.solutionForGauge.pixels.map(\n                    (p) =>\n                        new MapLatLng(\n                            p.y + 0.005,\n                            p.x + 0.01,\n                            0,\n                            '' + !remark.notPossible,\n                            '' + !remark.notPossible,\n                            1\n                        )\n                )\n            );\n\n            const timeDeltaInMinutes = selectedGaugeInPoints[0].getTimeDeltaInMinutes();\n            this.selectedGaugeInPointsDetail =\n                '' +\n                selectedGaugeInPoints[0].gaugeLabel +\n                ' > ' +\n                Math.round(selectedGaugeInPoints[0].getGaugeValue() * 100) / 100 +\n                ' / ' +\n                Math.round(selectedGaugeInPoints[0].getRainValue() * 100) / 100 +\n                ' dT=' +\n                timeDeltaInMinutes;\n\n            this.selectedGaugeInPoints = selectedGaugeInPoints[0];\n        } else {\n            this.selectedGaugeInPoints = null;\n            this.selectedGauges = [];\n            this.selectedPixels = [];\n            this.pixelsSolutions = [];\n            return;\n        }\n\n        this.selectedGauges = [\n            new MapLatLng(\n                this.selectedGaugeInPoints.gaugeCartesianValue.lat,\n                this.selectedGaugeInPoints.gaugeCartesianValue.lng,\n                undefined,\n                this.selectedGaugeInPoints.gaugeId,\n                this.selectedGaugeInPoints.gaugeLabel +\n                    '>' +\n                    this.selectedGaugeInPoints.gaugeCartesianValue.value,\n                this.selectedGaugeInPoints.gaugeCartesianValue.value\n            ),\n        ];\n\n        this.selectGaugeInCompare();\n\n        const pixels: MapLatLng[] = [];\n        for (const rainCartesianValue of this.selectedGaugeInPoints.rainCartesianValues) {\n            pixels.push(\n                new MapLatLng(rainCartesianValue.lat + 0.005, rainCartesianValue.lng + 0.01)\n            );\n        }\n        this.selectedPixels = pixels;\n\n        this.pixelsSolutions = pixelsSolutions;\n    }\n\n    protected async buildComparesTimeline(\n        targetsOrdered: ICompareTarget[],\n        withCompareDuplicate: boolean\n    ): Promise<ICompares> {\n        const compareDates = targetsOrdered.map((t) => t.date);\n\n        const qualities: RainComputationQuality[] = compareDates\n            .filter((d) => !!d)\n            .map((d) => this.getRainComputationQuality(d))\n            .filter((rcq) => !!rcq);\n\n        this.compareDates = compareDates.slice(1, -1);\n\n        this.buildCompares = SpeedMatrixContainer.BuildCompares(qualities, !withCompareDuplicate);\n        return this.buildCompares;\n    }\n\n    protected getComparePerDate(date: Date): IComparePerDate {\n        const existing = this.buildCompares.comparesPerDate.filter(\n            (c) => c.date.getTime() === date.getTime()\n        );\n        if (existing.length === 1) {\n            return existing[0];\n        }\n        return null;\n    }\n\n    protected getCurrentQualityPoints(compareIndex: number) {\n        if (\n            this.uiCompares.length === 0 ||\n            compareIndex < 0 ||\n            this.compareNames.length < compareIndex\n        ) {\n            return [];\n        }\n\n        return this.uiCompares[compareIndex].comparePointsHistory;\n    }\n\n    protected cleanCompareQuality(details?: string) {\n        this.compareVersion = details;\n        this.compareNames = [];\n        this.uiCompares = [];\n        this.compareSpeedMatrix = [];\n        this.compareTrustedIndicator = undefined;\n\n        this.currentQualityDoneDate = new Date(-1);\n        this.currentQualityLaunchedBy = '';\n        this.currentQualityTimeSpentInMs = -1;\n    }\n\n    protected async fetchRainComputationQualities(targetsOrdered: ICompareTarget[]) {\n        for (const target of targetsOrdered) {\n            if (\n                !this.rainComputationQualitiesPerDate[target.date.toISOString()] &&\n                target.rainComputationQualityId\n            ) {\n                try {\n                    const rainComputationQuality = await this.profileService.getRainCompareByDate(\n                        this.rainNode.id,\n                        target.rainComputationId,\n                        target.date\n                    );\n                    if (rainComputationQuality) {\n                        this.rainComputationQualitiesPerDate[target.date.toISOString()] =\n                            rainComputationQuality;\n                    }\n                } catch (e) {\n                    console.warn(e);\n                }\n            }\n        }\n    }\n\n    protected getRainComputationQuality(date: Date): RainComputationQuality {\n        return this.rainComputationQualitiesPerDate[date.toISOString()];\n    }\n\n    protected selectGaugeInCompare() {\n        const globalComparePoints = JSON.parse(JSON.stringify(this.globalComparePoints));\n        for (const p of globalComparePoints) {\n            if (p.id === this.selectedGaugeInPoints?.gaugeId) {\n                p.r = 10;\n            } else {\n                p.r = 2;\n            }\n        }\n        this.globalComparePoints = globalComparePoints;\n\n        for (const compare of this.uiCompares) {\n            const comparePoints = JSON.parse(JSON.stringify(compare.comparePoints));\n            comparePoints.forEach((p) => {\n                if (p.id === this.selectedGaugeInPoints?.gaugeId) {\n                    p.r = 10;\n                } else {\n                    p.r = 3;\n                }\n            });\n            compare.comparePoints = comparePoints;\n        }\n    }\n\n    protected resetSelectedGauges() {\n        // console.log('resetSelectedGauges reset');\n        this.selectedGauge = null;\n        this.selectedGaugeInPoints = null;\n        this.selectedGauges = [];\n        this.selectedPixels = [];\n        this.pixelsSolutions = [];\n        this.selectGaugeInCompare();\n    }\n}\n","import {DateRange} from 'raain-ui';\n\nexport function mapDateRangeToString(range: DateRange): 'hour' | 'day' | 'month' | 'year' {\n    switch (range) {\n        case DateRange.HOUR:\n            return 'hour';\n        case DateRange.DAY:\n            return 'day';\n        case DateRange.MONTH:\n            return 'month';\n        case DateRange.YEAR:\n            return 'year';\n        default:\n            return 'year';\n    }\n}\n","export class FrameSet {\n    constructor(\n        public date: Date,\n        public radarMeasureIds: string[] = [],\n        public rainComputationId: string = null,\n        public rainComputationVersion: string = null,\n        public rainComputationQualities: {\n            version: string;\n            id: string;\n        }[] = []\n    ) {}\n}\n","import {GaugeNode, LatLng} from 'raain-model';\n\nexport class GaugeNodeFilter extends GaugeNode {\n    public isIn = true;\n    public distance = 0;\n\n    constructor(json: any) {\n        super(json);\n    }\n\n    approxDistanceFrom(center: LatLng): number {\n        this.distance =\n            Math.round(\n                (Math.pow(this.latitude - center.lat, 2) +\n                    Math.pow(this.longitude - center.lng, 2)) *\n                    100 *\n                    100\n            ) / 100;\n        return this.distance;\n    }\n\n    add() {\n        this.isIn = true;\n    }\n\n    remove() {\n        this.isIn = false;\n    }\n}\n","import {FrameSet} from './FrameSet';\nimport {from, mergeMap, Subject, takeUntil, timer} from 'rxjs';\nimport {\n    CartesianMeasureValue,\n    CartesianTools,\n    ICartesianMeasureValue,\n    RainComputationMap,\n    RainNode,\n} from 'raain-model';\nimport {CartesianMapValue, TimeframeContainer, TimeframeContainers} from 'raain-ui';\nimport {RadarService} from '../radar.service';\nimport {ProfileService} from '../profile.service';\nimport {CompareManager} from './CompareManager';\nimport {XYType} from '../xytype';\n\nconst sleep = (ms: number) => new Promise((resolve) => setTimeout(resolve, ms));\n\nexport class RefreshManager {\n    public rainComputationMapVersion: string;\n    public rainComputationMapDate: Date;\n    public rainComputationMapDoneDate: Date;\n    public rainComputationMapLaunchedBy: string;\n    public rainComputationMapTimeSpentInMs: number;\n\n    public rainComputationMapOriginalMin: number;\n    public rainComputationMapOriginalMax: number;\n\n    public sumFn: (cartesianMapValues: CartesianMapValue[]) => number;\n    public sumValues: CartesianMapValue[];\n\n    protected closeRefreshTimer: Subject<unknown>;\n    protected countsPeriod: {\n        percentImages?: XYType[];\n        queueRunning?: number;\n        progress?: number;\n    };\n    protected timeframesFromRadars: FrameSet[];\n    protected timeframesFromRadarsExtended: FrameSet[];\n    protected timelineSelectedFrameSet: FrameSet;\n    protected timeframeDates: Date[];\n    protected cartesianTools: CartesianTools;\n    protected removeDuplicate: boolean;\n    protected dataInternal: boolean;\n    protected onRefreshInProgress: (\n        countPeriods: {\n            percentImages?: XYType[];\n            queueRunning?: number;\n            progress?: number;\n        },\n        timeframeDates: Date[]\n    ) => Promise<void>;\n    protected onRefreshDone: (timeframeDates: Date[]) => Promise<void>;\n    protected onFetchDone: (timeframeContainers: TimeframeContainers) => Promise<void>;\n\n    constructor(\n        protected radarService: RadarService,\n        protected profileService: ProfileService,\n        protected compareManager: CompareManager\n    ) {\n        this._period = {begin: new Date(), end: new Date()};\n        this.closeRefreshTimer = new Subject<unknown>();\n        this.cartesianTools = new CartesianTools();\n        this.cleanAll();\n    }\n\n    protected _rainNode: RainNode;\n\n    public get rainNode(): RainNode {\n        return this._rainNode;\n    }\n\n    public set rainNode(rainNode: RainNode) {\n        this._rainNode = rainNode;\n        this.cleanAll();\n    }\n\n    protected _period: {begin: Date; end: Date};\n\n    get period(): {begin: Date; end: Date} {\n        return this._period;\n    }\n\n    set period(period: {begin: Date; end: Date}) {\n        this._period.begin = new Date(period.begin);\n        this._period.end = new Date(period.end);\n        this.refreshCounts().then((ignored) => {});\n    }\n\n    public static Delay(ms: number) {\n        return new Promise((resolve) => setTimeout(resolve, ms));\n    }\n\n    public setMethods(\n        onRefreshInProgress: (\n            countPeriods: {\n                percentImages?: XYType[];\n                queueRunning?: number;\n            },\n            timeframeDates: Date[]\n        ) => Promise<void>,\n        onRefreshDone: (timeframeDates: Date[]) => Promise<void>,\n        onFetchDone: (timeframeContainers: TimeframeContainers) => Promise<void>\n    ) {\n        this.onRefreshInProgress = onRefreshInProgress;\n        this.onRefreshDone = onRefreshDone;\n        this.onFetchDone = onFetchDone;\n    }\n\n    cleanAll() {\n        this.countsPeriod = {percentImages: [], queueRunning: 0, progress: 0};\n        this.timeframesFromRadars = [];\n        this.timeframesFromRadarsExtended = [];\n        this.timeframeDates = [];\n        this.removeDuplicate = true;\n        this.closeRefreshTimer?.next(null);\n    }\n\n    async fetch(\n        dateShown: Date,\n        withGaugesMeasures: boolean,\n        cumulativeHours = 0\n    ): Promise<FrameSet> {\n        // set the target\n        const currents = this.timeframesFromRadarsExtended.filter(\n            (t) => t.date.getTime() === dateShown.getTime()\n        );\n        if (currents.length !== 1) {\n            return;\n        }\n\n        // build current Frameset\n        const current: FrameSet = currents[0];\n        const target = {\n            ...current,\n            withGauge: withGaugesMeasures,\n            cumulativeHours: cumulativeHours,\n            rainComputationQualityId: this.getRainComputationQualityTarget(current),\n        };\n\n        const timeframeContainers = await this.refreshMapTimeframeContainers(target);\n\n        this.onFetchDone(timeframeContainers)\n            .then(() => this.refreshCompareQuality(current))\n            .then((ignored) => {}); // NO Sync\n\n        this.timelineSelectedFrameSet = current;\n    }\n\n    getTimelineFrameSet(): FrameSet[] {\n        return this.timeframesFromRadars;\n    }\n\n    getTimelineSelectedFrameSet(): FrameSet {\n        return this.timelineSelectedFrameSet;\n    }\n\n    async refresh(launchQualityAfter: boolean, dataInternal: boolean) {\n        this.checkPeriod();\n\n        this.dataInternal = dataInternal;\n\n        const asyncDone = (error?: string) => {\n            if (error) {\n                console.error('error in refresh', error);\n            }\n            this.closeRefreshTimer.next(null);\n            this.onRefreshDone(this.timeframeDates).then((_ignored) => {});\n        };\n\n        const asyncRefresh = async () => {\n            this.onRefreshInProgress(await this.refreshCounts(), this.timeframeDates).then(\n                (_ignored) => {}\n            );\n            const done = await this.refreshPeriodInsidePolling();\n            if (done) {\n                asyncDone();\n            }\n        };\n\n        timer(1000, 10000) // Wait 1s, then every 10s\n            .pipe(\n                mergeMap(() => from(asyncRefresh())),\n                takeUntil(this.closeRefreshTimer)\n            )\n            .subscribe({\n                error: (error) => asyncDone(JSON.stringify(error)),\n            });\n    }\n\n    setRemoveDuplicate(b: boolean) {\n        this.removeDuplicate = b;\n    }\n\n    public async setReportPeriod(date: Date) {\n        let values: CartesianMapValue[] = [];\n        for (const frameSet of this.timeframesFromRadars) {\n            if (frameSet.date.getTime() !== date.getTime()) {\n                continue;\n            }\n            values = values.concat(await this.getValues(frameSet));\n        }\n\n        this.sumFn = (cartesianMapValues: CartesianMapValue[]) => {\n            return cartesianMapValues.reduce((p, v) => p + (v.value * 5) / 60, 0);\n        };\n        this.sumValues = values;\n    }\n\n    protected checkPeriod() {\n        if (this.period.begin.getTime() === this.period.end.getTime()) {\n            throw new Error('need a period');\n        }\n    }\n\n    protected async refreshCounts() {\n        if (!this.rainNode) {\n            return this.countsPeriod;\n        }\n\n        const counts = await this.profileService.getCounts(this.rainNode.id, {\n            range: 'day',\n            periodBegin: this._period.begin,\n        });\n\n        const progress = await this.profileService.getRainProgress(this.rainNode.id);\n        this.countsPeriod = {\n            ...counts,\n            progress,\n        };\n\n        return this.countsPeriod;\n    }\n\n    protected getRainComputationQualityTarget(frameset: FrameSet): string {\n        if (frameset.rainComputationQualities.length <= 0) {\n            return undefined;\n        }\n        return frameset.rainComputationQualities[0].id;\n    }\n\n    protected async refreshPeriodInsidePolling(): Promise<boolean> {\n        try {\n            const done = await this.refreshCheckIfDone();\n\n            // behind refresh\n            await this.refreshTimeframesFromRadars(done);\n            await this.refreshGlobalCompareReport(done);\n\n            return done;\n        } catch (e) {\n            console.warn(e);\n        }\n        return false;\n    }\n\n    protected async refreshCheckIfDone(): Promise<boolean> {\n        await sleep(2000);\n        return this.countsPeriod.progress === 0;\n    }\n\n    protected async refreshTimeframesFromRadars(done: boolean) {\n        if (!done || !this.rainNode) {\n            return [];\n        }\n\n        try {\n            const beginExtended = new Date(this.period.begin);\n            const endExtended = new Date(this.period.end);\n            beginExtended.setMinutes(beginExtended.getMinutes() - 7);\n            endExtended.setMinutes(endExtended.getMinutes() + 7);\n            this.rainNode = await this.profileService.getRainTimeframe(\n                this.rainNode.id,\n                beginExtended,\n                endExtended,\n                this.dataInternal\n            );\n\n            this.timeframesFromRadarsExtended = await this.radarService.getTimeline(this.rainNode);\n            this.timeframesFromRadars = this.timeframesFromRadarsExtended\n                .filter(\n                    (frameSet) =>\n                        this.period.begin.getTime() <= frameSet.date.getTime() &&\n                        frameSet.date.getTime() <= this.period.end.getTime()\n                )\n                .sort((a, b) => a.date.getTime() - b.date.getTime());\n\n            this.timeframeDates = this.timeframesFromRadars.map((frameSet) => frameSet.date);\n            console.log('timeframesFromRadarsExtended:', this.timeframesFromRadarsExtended);\n            console.log('timeframeDates:', this.timeframeDates);\n\n            return this.timeframesFromRadars;\n        } catch (e) {\n            console.error('refreshTimeframesFromRadars', e);\n        }\n\n        return [];\n    }\n\n    protected async refreshGlobalCompareReport(done: boolean) {\n        if (!done) {\n            return;\n        }\n\n        try {\n            const targets = [];\n            for (const frameSet of this.timeframesFromRadarsExtended) {\n                const target = JSON.parse(JSON.stringify(frameSet));\n                target.date = new Date(target.date);\n                target.rainComputationQualityId = this.getRainComputationQualityTarget(frameSet);\n                targets.push(target);\n            }\n            await this.compareManager.refreshGlobalCompareQuality(targets, !this.removeDuplicate);\n        } catch (e) {\n            console.error('refreshGlobalCompareReport', e);\n        }\n    }\n\n    protected async refreshMapTimeframeContainers(target: {\n        date: Date;\n        rainComputationId: string;\n        withGauge: boolean;\n        cumulativeHours: number;\n    }) {\n        if (!target?.rainComputationId) {\n            console.warn(\n                `Pb with refreshMapTimeframeContainers insights ${target.date.toISOString()}`\n            );\n            return;\n        }\n\n        const rainNode = this.rainNode;\n        const containers: TimeframeContainer[] = [];\n        const newCreatedTimeframeContainers = new TimeframeContainers(containers);\n        try {\n            let rainNodeCartesianMap: RainComputationMap;\n\n            if (!target.cumulativeHours) {\n                rainNodeCartesianMap = await this.profileService.getRainComputationCartesianMapById(\n                    rainNode.id,\n                    target.rainComputationId\n                );\n            } else {\n                rainNodeCartesianMap =\n                    await this.profileService.getRainComputationCumulativeMapById(\n                        rainNode.id,\n                        target.rainComputationId,\n                        target.cumulativeHours\n                    );\n            }\n\n            if (rainNodeCartesianMap) {\n                newCreatedTimeframeContainers.addFromRainComputationMap(\n                    rainNodeCartesianMap,\n                    false\n                );\n\n                this.rainComputationMapVersion = rainNodeCartesianMap.version;\n                this.rainComputationMapDate = new Date(rainNodeCartesianMap.date);\n                this.rainComputationMapDoneDate = rainNodeCartesianMap.isDoneDate;\n                this.rainComputationMapLaunchedBy = rainNodeCartesianMap.launchedBy;\n                this.rainComputationMapTimeSpentInMs = rainNodeCartesianMap.timeSpentInMs;\n\n                this.rainComputationMapOriginalMin = rainNodeCartesianMap.originalDBZMin;\n                this.rainComputationMapOriginalMax = rainNodeCartesianMap.originalDBZMax;\n            }\n        } catch (e) {\n            console.warn('Pb with computations for id:', target.rainComputationId, e);\n        }\n\n        return newCreatedTimeframeContainers;\n    }\n\n    protected async refreshCompareQuality(frameSet: FrameSet) {\n        await this.compareManager.refreshCompareQuality(frameSet);\n        await this.compareManager.setGaugesInCompare();\n    }\n\n    protected async getValues(target: FrameSet): Promise<CartesianMapValue[]> {\n        if (!target?.rainComputationId) {\n            console.warn(`Pb with target insights ${target?.date.toISOString()}`);\n            return [];\n        }\n\n        let values: CartesianMapValue[] = [];\n        try {\n            const rainNodeCartesianMap =\n                await this.profileService.getRainComputationCartesianMapById(\n                    this.rainNode.id,\n                    target.rainComputationId\n                );\n\n            if (rainNodeCartesianMap) {\n                rainNodeCartesianMap.getMapData().forEach((m) => {\n                    if (m.values) {\n                        (m.values as ICartesianMeasureValue[]).forEach((v) => {\n                            const cartesianMeasureValue = CartesianMeasureValue.From(v);\n                            values = values.concat(\n                                CartesianMapValue.From(\n                                    cartesianMeasureValue.getCartesianValues(),\n                                    this.cartesianTools\n                                )\n                            );\n                        });\n                    }\n                });\n            }\n        } catch (e) {\n            console.warn('Pb with computations for id:', target.rainComputationId, e);\n        }\n\n        return values;\n    }\n}\n","export * from './CompareManager';\nexport * from './FrameSet';\nexport * from './GaugeNodeFilter';\nexport * from './RefreshManager';\nexport * from './DateRangeTools';\n","export class XYType {\n    constructor(\n        public x: number,\n        public y: number,\n        public r?: number,\n        public name?: string,\n        public id?: string\n    ) {}\n}\n","import {bpInfo} from '../bpInfo';\n\nconst somethingToAdd = '_lab';\nexport const environment = {\n    production: true,\n    description: somethingToAdd,\n    fidjKey: 'fidj-c7da8742d81613d8',\n    // TODO serverUrl: 'http://localhost:3004/v2',\n    serverUrl: 'https://api.lab.radartorain.com/v2',\n    version: bpInfo.version + somethingToAdd,\n};\n","import {enableProdMode} from '@angular/core';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\n\nimport {AppModule} from './core/app.module';\nimport {environment} from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic()\n    .bootstrapModule(AppModule)\n    .catch((err) => console.log(err));\n\nexport * from './core/shared';\n","var map = {\n\t\"./ion-accordion_2.entry.js\": [\n\t\t70079,\n\t\t8592,\n\t\t79\n\t],\n\t\"./ion-action-sheet.entry.js\": [\n\t\t25593,\n\t\t8592,\n\t\t5593\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t13225,\n\t\t8592,\n\t\t3225\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t4812,\n\t\t8592,\n\t\t4812\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t86655,\n\t\t6655\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t44856,\n\t\t8592,\n\t\t4856\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t13059,\n\t\t3059\n\t],\n\t\"./ion-breadcrumb_2.entry.js\": [\n\t\t58648,\n\t\t8592,\n\t\t8648\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t98308,\n\t\t8308\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t44690,\n\t\t4690\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t64090,\n\t\t4090\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t36214,\n\t\t6214\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t69447,\n\t\t9447\n\t],\n\t\"./ion-datetime-button.entry.js\": [\n\t\t17950,\n\t\t9022,\n\t\t7950\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t79689,\n\t\t9022,\n\t\t8592,\n\t\t9689\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t18840,\n\t\t8592,\n\t\t8840\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t40749,\n\t\t749\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t69667,\n\t\t8592,\n\t\t9667\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t83288,\n\t\t8592,\n\t\t3288\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t35473,\n\t\t8592,\n\t\t5473\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t53634,\n\t\t8592,\n\t\t3634\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t22855,\n\t\t2855\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t495,\n\t\t8592,\n\t\t495\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t58737,\n\t\t8592,\n\t\t8737\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t99632,\n\t\t8592,\n\t\t9632\n\t],\n\t\"./ion-picker-column-internal.entry.js\": [\n\t\t54446,\n\t\t8592,\n\t\t4446\n\t],\n\t\"./ion-picker-internal.entry.js\": [\n\t\t32275,\n\t\t2275\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t48050,\n\t\t8592,\n\t\t8050\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t18994,\n\t\t8994\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t23592,\n\t\t3592\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t35454,\n\t\t8592,\n\t\t5454\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t290,\n\t\t8592,\n\t\t290\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t92666,\n\t\t8592,\n\t\t2666\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t64816,\n\t\t4816\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t45534,\n\t\t5534\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t94902,\n\t\t8592,\n\t\t4902\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t91938,\n\t\t8592,\n\t\t1938\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t78179,\n\t\t8179\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t90668,\n\t\t668\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t61624,\n\t\t8592,\n\t\t1624\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t19989,\n\t\t9989\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t28902,\n\t\t8592,\n\t\t8902\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t70199,\n\t\t8592,\n\t\t199\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t48395,\n\t\t8395\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t96357,\n\t\t6357\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t38268,\n\t\t8268\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t15269,\n\t\t8592,\n\t\t5269\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t32875,\n\t\t2875\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 50863;\nmodule.exports = webpackAsyncContext;","/* (ignored) */"],"names":["bpInfo","version","NoPreloading","RouterModule","PageNotFoundComponent","AuthGuard","routes","path","redirectTo","pathMatch","loadChildren","then","x","HomePageModule","canActivate","RadarsPageModule","RainsPageModule","EventsPageModule","ProfilePageModule","LoginPageModule","LogoutPageModule","component","AppRoutingModule","forRoot","useHash","preloadingStrategy","imports","exports","SplashScreen","environment","i0","AppComponent","constructor","platform","profile","title","url","icon","notifications","initializeApp","defaultUrlForAPI","serverUrl","ready","initFidj","hide","isLoggedIn","logout","fidjKey","production","getNotifications","getAllNotifications","getBadges","page","length","selectors","decls","vars","consts","template","BrowserModule","RouteReuseStrategy","IonicModule","IonicRouteStrategy","SharedModule","BrowserAnimationsModule","HttpClientModule","FidjModule","AppModule","bootstrap","provide","useClass","declarations","fidjService","next","state","isDemoMode","refreshProfile","loggedIn","getRoles","indexOf","factory","providedIn","ngOnInit","Cache","_cache","getValue","key","asyncGetter","Object","prototype","hasOwnProperty","call","console","log","putValue","value","getOwnPropertyNames","warn","Link","FidjStorageNode","getEmptyNode","getDemoNode","demoNode","link","FidjStorageResult","FidjStorage","storage","data","storeData","node","JSON","parse","stringify","fidjMetaResult","set","put","getRefreshedNodeCopy","get","firstDemoData","sync","fidjFindAllResults","findAll","setDemoMode","isDemo","AreInProgressPipe","AreReady","AreStopped","HasGoodQuality","HasNotGoodQuality","HaveNotBeenRed","IsNotReady","IsReady","ProgressBuffer","ProgressValue","TimeframeComputationProgress","TimeframeQualityProgress","WaitForValidation","PipesModule","sleep","ms","Promise","resolve","setTimeout","ProfileIconDirective","el","profileService","router","isInsideModal","email","getEmail","profileButtons","document","createElement","setAttribute","button","profileButton","skeleton","style","width","height","borderRadius","margin","display","skeletonText","appendChild","label","textContent","addEventListener","navigateToProfile","nativeElement","startBackgroundRefresh","ngOnDestroy","refreshTimer","clearInterval","navigateByUrl","setInterval","checkAndRefreshConnection","performConnectionRefresh","showSkeletonText","hideSkeletonText","isConnected","needsConnectionRefresh","connectionRefresh","updateButtonState","removeAttribute","parent","parentElement","tagName","toLowerCase","BehaviorSubject","EventNode","GaugeMeasure","GaugeNode","RadarNode","RainComputation","RainComputationMap","RainComputationQuality","RainNode","SpeedMatrixContainer","TeamNode","LoggerLevelEnum","XYType","GaugeNodeFilter","ProfileService","httpClient","asTeamId","readyForSync","roles","fidjStorage","mode","nodeData","setRoles","e","checkError","setEmail","fidjProd","init","logLevel","WARN","crypto","prod","useDB","err","error","code","ignored","gotoLout","skipLocationChange","replaceUrl","gotoLogin","navigate","needsRefresh","refresh","storeAll","isAdmin","createNotification","rainId","message","resp","sendOnEndpoint","verb","defaultKeyUrl","rain","args","relativePath","map","n","getTeams","teams","team","push","getTeam","teamId","getRadars","radars","r","radar","getRadar","id","putRadar","radarNode","name","getLonelyRadars","rains","lonelyRadars","forEach","found","rdId","getLink","getId","getRainTimeframe","begin","end","forced","queryPath","toISOString","rainNode","timeframe","getRains","getRain","getCounts","options","range","periodBegin","counts","result","percentImages","percentRainy","percentQ","c","setDateComponents","NaN","queueRunning","getCountsHour","rainySum","rainyCount","launchRainComputation","date","response","computations","getRainComputationCartesianMapById","rainComputationId","rainComputationMap","getRainComputationCumulativeMapById","cumulativeHours","getRainCompares","rainComputation","links","getLinks","rainComputationQualities","rel","TYPE","dateLength","Date","href","substring","getRainCompareByDate","rainComputationQuality","qualities","qualitySpeedMatrixContainer","CreateFromJson","getRainProgress","inProgress","getGauge","gaugeId","getGauges","gauges","gauge","getGaugeMeasures","gaugeMeasures","gaugeMeasure","dateToShow","year","undefined","setUTCFullYear","month","setUTCMonth","day","setUTCDate","hour","setUTCHours","minute","setUTCMinutes","EventEmitter","RaainCompareStackComponent","ngZone","onClick","selectedPoint","emit","point","compareIndex","inputs","compareManager","currentHeight","cumulative","outputs","CompareElementInput","ElementsFactory","RaainCompareComponent","onSizeChanged","ngAfterViewChecked","create","ngOnChanges","changes","change","delete","changeData","newData","newMaxLine","changed","dataset","compareElement","chart","datasets","line","update","onResize","event","updateMapSize","created","createCompare","canvasElement","points","p","y","pointMax","bind","destroy","mapDivWidth","parentNode","padding","currentWidth","window","innerWidth","documentElement","clientWidth","body","innerHeight","clientHeight","run","viewQuery","ctx","ChartScaleColors","ConfigurationElementInput","Tools","RaainConfigurationComponent","onDrag","changedPoints","reset","count","minPoint","maxPoint","logStyle","confTransparency","color","getTransparency","yStart","Math","log10","yEnd","runOutsideAngular","configurationElement","createConfiguration","DateRange","DynamicDateStatusElementInput","RaainDateDynamicComponent","focusDate","focusRange","CENTURY","focusPrevious","dynamicDateStatusElement","focusReset","focusNext","mapStyleToChartType","validChartTypes","includes","monthSampleData","fetchData","MONTH","createDynamicDateStatus","item","dataLength","chartMinValue","chartMaxValue","onLastClick","changedDate","DateStatusElementInput","RaainDateFocusComponent","dateStatusElement","createDateStatus","CartesianMeasureValue","MapLatLng","TimeframeContainers","mapDateRangeToString","RaainDetailsComponent","PeriodDisplay","d","userTimezoneOffset","getTimezoneOffset","getTime","exampleFormattedDate","DateUTC","hasISOFormat","match","values","i","fakeData","HOUR","hourCounts","min","cleanAll","onEnableCountHistoryTab","toggleHistory","countPoints","onPeriodBeginChange","newValue","target","periodBeginAsString","onPeriodDurationChange","_event","durationInHour","parseFloat","periodDurationAsString","periodEnd","periodEndAsString","refreshManager","period","onDateChangeInCount","dateChanged","toLocaleTimeString","onDateChangeInMap","dateShown","toggleCumulative","fetch","toggleGaugeMeasures","currentTimeframeTarget","getTimelineSelectedFrameSet","setReportPeriod","onSumChangeInMap","sum","sumDetails","onGaugeSelectInMap","mapLatLng","gaugesFiltered","gaugesInMap","filter","g","lat","lng","gaugeSelected","refreshGaugeValues","selectGauge","dayBegin","dayEnd","gaugeValues","gm","cartesianMeasureValue","getCartesianValues","gaugeSelectedPoints","onGaugeSelectInCompare","onToggleMap","$event","onChangeDetectionTest","refreshMap","borders","setGaugesInMap","toggleAdmin","launchComputation","setPeriodOfNow","last30mn","setMinutes","getMinutes","getPercentOfImages","countsPeriod","duringPeriod","a","summed","reduce","b","round","getPercentOfComputations","timeline","getTimelineFrameSet","timelineWithComputation","ratio","timeframeContainers","timeframeDates","progress","toggleMap","toggleCompare","toggleRemoveCompareDuplicate","refreshInProgress","initRain","setMethods","onRefreshInProgress","onRefreshDone","onFetchDone","center","getCenter","coordinates","teamNode","countPeriods","radarService","features","EarthMapElementInput","RaainGlobeComponent","earthMapElement","createEarthMap","CartesianTools","ScaleElementInput","RaainMapComponent","cartesianTools","pixelsCount","iconSize","iconAnchor","pixelSize","pixelAnchor","popupAnchor","iconOptions","iconUrl","gaugesInCompare","selectedGauges","pixels","pixelsSolution","showTimeframe","force","dateToShowAsString","possibleDates","index","getDateToShowIndex","autoplay","previous","stop","play","changeShowMarkers","mapElement","markersLayer","mapLeaflet","showMarkers","addToMap","removeFromMap","changeAlpha","alpha","eachLayer","layer","_container","markers","iconsLatLng","iconsOptions","createScale","showCumulative","createdOutside","createMap","mapDivRef","on","evt","onMapMouseMove","onZoom","bounds","getBounds","howManyPixelsInEarthMap","_southWest","_northEast","markersProduced","m","onMapClick","setCurrentWidth","setCurrentHeight","compositeLayer","invalidateSize","animate","changeNavigation","defaultDate","remove","mcText","nextDate","possibleNames","timeframeNameToShow","cumulativeDateFrom","currentFrameContainer","possibleNewDefaultDate","currentValue","previousValue","render","selectedGauge","setView","updateTimeframe","sumValues","updateSum","drawer","getFirstDrawer","sumOfPixels","getExecOfWindowPoints","sumFn","average","sumResult","changedSum","containers","setHours","getHours","handleAvailablePixels","availablePixels","zoom","pixelDensity","calculatePixelDensity","earthCircumference","metersPerPixel","cos","PI","pow","pixelsPerMeter","totalVisibleArea","latlng","toFixed","valueLat","valueLng","valueLat2","valueLng2","valueSelected","v","lat2","lng2","alt","selectedMarker","updateMapTimeframe","deleteScale","scaleCanvasRef","entries","sort","sortedMap","Map","sortedArray","scaleColors","entry","scaleLabels","scaleElement","SpeedMatrixElementInput","RaainSpeedComponent","compareSpeedMatrix","createSpeedMatrixIndicator","canvasSpeedElement","compareTrustedIndicator","PolarMapValue","FrameSet","RadarService","getGeoValuesFromRainMeasures","measureValue","computeValues","getPolars","getGeoValuesFromRadarMeasures","polarMeasureValues","azimuth","distance","polarEdges","pmv","getTimeline","measureIndex","start","str1","dateStr","idStr","frameDate","existingTargets","t","radarMeasureIds","computationIndex","splitted","split","rainComputationVersion","getBuilds","CONSTANTS","_RAIN_STATUS_0_NOT_STARTED","_RAIN_STATUS_0_WAIT_FOR_ECHOES","_RAIN_STATUS_0_WAIT_FOR_INPUT","_RAIN_STATUS_0_WAIT_FOR_INTERNAL_VALIDATION","_RAIN_STATUS_0_READY_TO_BUILD","_RAIN_STATUS_1_BUILDING","_RAIN_STATUS_1_READY_TO_COMPUTE","_RAIN_COMPUTATION_IS_READY","_RAIN_COMPUTATION_IN_PROGRESS","_RAIN_COMPUTATION_DONE","_INPUT_VALIDITY_NOT_CHECKED_YET","_INPUT_VALIDITY_CHECK_IN_PROGRESS","_INPUT_VALIDITY_NOT_VALID","_INPUT_VALIDITY_NOT_CONFIDENT","_INPUT_VALIDITY_VALID","_VERIFY_STATUS_FIND_RADARS","_VERIFY_STATUS_FIND_SIMILAR","_VERIFY_STATUS_FIND_GAUGES","_COMPUTATION_STATUS_UNKNOWN","_COMPUTATION_STATUS_IN_PROGRESS","_COMPUTATION_STATUS_FINISHED","CommonModule","NgOptimizedImage","NgStyle","FormsModule","Storage","IonRange","parentModule","transform","status","pure","quality","frameSets","frameset","atLeastOneIsNotOutdated","q","events","red","LocalStorage","CompareManager","onChanges","_rainNode","gaugesToFilter","rainNodeGauges","selectedPixels","pixelsSolutions","compareDates","buildCompares","comparesPerDate","compareCumulative","globalComparePoints","globalComparePointsMax","rainComputationQualitiesPerDate","selectedGaugeInPoints","cleanCompareQuality","refreshCompareQuality","frameSet","comparePerDate","getComparePerDate","keys","uiCompares","compareTimeline","comparePoints","qualityPoints","getGaugeValue","getRainValue","gaugeLabel","comparePointsMax","maxValue","comparePointsHistory","qualityPointsLegacy","remarks","currentQualityDoneDate","isDoneDate","currentQualityTimeSpentInMs","timeSpentInMs","currentQualityLaunchedBy","launchedBy","compareVersion","getVersion","compareSpeed","getSpeed","compareNames","refreshGlobalCompareQuality","targetsOrdered","withCompareDuplicate","fetchRainComputationQualities","buildComparesTimeline","countForAverage","qp","approxDistanceFrom","l","visibleGauges","latitude","longitude","setGaugesInCompare","compare","qualityPoint","alreadyAdded","gaugeCartesianValue","resetSelectedGauges","xys","getCurrentQualityPoints","remark","criteriaAttemptedToBeMinimum","solutionForGauge","notPossible","timeDeltaInMinutes","getTimeDeltaInMinutes","selectedGaugeInPointsDetail","selectGaugeInCompare","rainCartesianValue","rainCartesianValues","getRainComputationQuality","rcq","slice","BuildCompares","existing","details","rainComputationQualityId","DAY","YEAR","json","add","isIn","from","mergeMap","Subject","takeUntil","timer","CartesianMapValue","RefreshManager","_period","closeRefreshTimer","refreshCounts","Delay","timeframesFromRadars","timeframesFromRadarsExtended","removeDuplicate","withGaugesMeasures","currents","current","withGauge","getRainComputationQualityTarget","refreshMapTimeframeContainers","timelineSelectedFrameSet","launchQualityAfter","dataInternal","checkPeriod","asyncDone","_ignored","asyncRefresh","done","refreshPeriodInsidePolling","pipe","subscribe","setRemoveDuplicate","concat","getValues","cartesianMapValues","Error","refreshCheckIfDone","refreshTimeframesFromRadars","refreshGlobalCompareReport","beginExtended","endExtended","targets","newCreatedTimeframeContainers","rainNodeCartesianMap","addFromRainComputationMap","rainComputationMapVersion","rainComputationMapDate","rainComputationMapDoneDate","rainComputationMapLaunchedBy","rainComputationMapTimeSpentInMs","rainComputationMapOriginalMin","originalDBZMin","rainComputationMapOriginalMax","originalDBZMax","getMapData","From","somethingToAdd","description","enableProdMode","__NgCli_bootstrap_1","bootstrapModule","catch"],"sourceRoot":"webpack:///","x_google_ignoreList":[46,47]}