{"version":3,"file":"8346.4f47b1f7933c5871.js","mappings":"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","sources":["./src/core/events/events.module.ts","./src/core/events/events.page.html","./src/core/events/events.page.ts","./src/core/events/events.pipe.ts"],"sourcesContent":["import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {IonicModule} from '@ionic/angular';\nimport {RouterModule} from '@angular/router';\n\nimport {EventsPage} from './events.page';\nimport {HasBeenRed, HaveBeenRed, HaveNotBeenRed} from './events.pipe';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        RouterModule.forChild([\n            {\n                path: '',\n                component: EventsPage,\n            },\n        ]),\n    ],\n    exports: [HaveNotBeenRed],\n    declarations: [EventsPage, HaveBeenRed, HaveNotBeenRed, HasBeenRed],\n})\nexport class EventsPageModule {}\n","<ion-header>\n  <ion-toolbar>\n    <ion-buttons slot=\"start\">\n      <ion-menu-button></ion-menu-button>\n      <ion-img src=\"assets/icon/favicon.ico\" style=\"height: 30px; padding-left: 20px\"></ion-img>\n    </ion-buttons>\n    <ion-title>\n      Events\n    </ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n\n  <ion-refresher (ionRefresh)=\"refresh($event)\" slot=\"fixed\">\n    <ion-refresher-content></ion-refresher-content>\n  </ion-refresher>\n\n  <ion-card *ngIf=\"!eventInfoAlreadyViewed.hasOwnProperty('welcome-card')\" class=\"welcome-card\">\n    <ion-card-header>\n      <ion-card-title>You are in a demo mode.</ion-card-title>\n    </ion-card-header>\n    <ion-card-content>\n      Please contact our <a href=\"mailto:sales@r2r\">sales team @radartorain</a> to go further.\n    </ion-card-content>\n    <ion-button (click)=\"closeInfo('welcome-card')\" fill=\"outline\">Got it</ion-button>\n  </ion-card>\n\n  <div *ngIf=\"notifications\">\n\n    <ion-card (click)=\"clickOnEvent(notification)\" *ngFor=\"let notification of (notifications | haveNotBeenRed)\">\n      <ion-item>\n        <ion-icon name=\"radio-button-off\" slot=\"end\"></ion-icon>\n      </ion-item>\n      <ion-card-header>\n        <ion-card-title>{{ notification.title }}</ion-card-title>\n        <ion-card-subtitle>{{ notification.created | date }}</ion-card-subtitle>\n      </ion-card-header>\n      <!-- class=\"truncate\" -->\n      <ion-card-content>{{ notification.description }}</ion-card-content>\n    </ion-card>\n\n    <ion-card *ngFor=\"let notification of (notifications | haveBeenRed)\" color=\"gray\">\n      <ion-item>\n        <ion-icon color=\"success\" name=\"checkmark-circle-outline\" slot=\"end\"></ion-icon>\n      </ion-item>\n      <ion-card-header>\n        <ion-card-title>{{ notification.title }}</ion-card-title>\n        <ion-card-subtitle>{{ notification.created | date }}</ion-card-subtitle>\n      </ion-card-header>\n      <ion-card-content>{{ notification.description }}</ion-card-content>\n      <ion-item disabled=\"true\">\n        <ion-button disabled=\"true\" slot=\"end\">Submit your feedback.</ion-button>\n      </ion-item>\n    </ion-card>\n  </div>\n\n</ion-content>\n","import {Component, OnInit} from '@angular/core';\nimport {ProfileService} from '../shared/profile.service';\nimport {EventNode} from 'raain-model';\nimport {FidjStorageNode} from '../shared/fidj-storage.model';\nimport {Router} from '@angular/router';\n\n@Component({\n    selector: 'app-events',\n    templateUrl: 'events.page.html',\n    styleUrls: ['events.page.scss'],\n})\nexport class EventsPage implements OnInit {\n    public sessionData: FidjStorageNode;\n    public eventInfoAlreadyViewed: any = {};\n    public notifications: EventNode[];\n\n    constructor(\n        private router: Router,\n        private profile: ProfileService\n    ) {}\n\n    async ngOnInit() {\n        await this.refresh();\n    }\n\n    async clickOnEvent(item: EventNode) {\n        item.red = true;\n        await this.profile.storeAll();\n    }\n\n    async closeInfo(windowName: string) {\n        this.eventInfoAlreadyViewed[windowName] = true;\n        if (!this.sessionData || !this.sessionData.infos) {\n            return;\n        }\n\n        this.sessionData.infos.eventInfoAlreadyViewed = this.eventInfoAlreadyViewed;\n        await this.profile.storeAll();\n    }\n\n    async refresh(event?: any) {\n        try {\n            this.sessionData = await this.profile.refreshProfile();\n            if (this.sessionData.infos.eventInfoAlreadyViewed) {\n                this.eventInfoAlreadyViewed = this.sessionData.infos.eventInfoAlreadyViewed;\n            }\n\n            const rains = await this.profile.getRains(this.profile.asTeamId);\n            this.notifications = [];\n            for (const rain of rains) {\n                const notificationNodes = await this.profile.getNotifications(rain.id);\n                this.notifications = this.notifications.concat(notificationNodes);\n            }\n        } catch (e) {\n            console.error('refresh pb:', e);\n        }\n        if (event) {\n            event.target.complete();\n        }\n\n        if (!this.profile.isLoggedIn()) {\n            return this.profile.gotoLout();\n        }\n    }\n}\n","import {Pipe, PipeTransform} from '@angular/core';\nimport {EventNode} from 'raain-model';\n\n@Pipe({\n    name: 'haveBeenRed',\n    pure: false,\n})\nexport class HaveBeenRed implements PipeTransform {\n    transform(events: EventNode[]): EventNode[] {\n        const haveBeenRed = events.filter((event) => event.red);\n        return haveBeenRed;\n    }\n}\n\n@Pipe({\n    name: 'haveNotBeenRed',\n    pure: false,\n})\nexport class HaveNotBeenRed implements PipeTransform {\n    transform(events: EventNode[]): EventNode[] {\n        const haveNotBeenRed = events.filter((event) => !event.red);\n        return haveNotBeenRed;\n    }\n}\n\n@Pipe({\n    name: 'hasBeenRed',\n    pure: false,\n})\nexport class HasBeenRed implements PipeTransform {\n    transform(event: EventNode): boolean {\n        return event.red;\n    }\n}\n"],"names":["CommonModule","FormsModule","IonicModule","RouterModule","EventsPage","HasBeenRed","HaveBeenRed","HaveNotBeenRed","EventsPageModule","forChild","path","component","declarations","imports","exports","i0","constructor","router","profile","ngOnInit","refresh","clickOnEvent","item","red","storeAll","closeInfo","windowName","eventInfoAlreadyViewed","sessionData","infos","event","refreshProfile","rains","getRains","asTeamId","notifications","rain","notificationNodes","getNotifications","id","concat","e","console","error","target","complete","isLoggedIn","gotoLout","selectors","decls","vars","consts","template","ctx","transform","events","haveBeenRed","filter","pure","haveNotBeenRed"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}